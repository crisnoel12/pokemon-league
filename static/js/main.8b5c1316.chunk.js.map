{"version":3,"sources":["components/UI/Header/HeaderStyles.tsx","components/UI/Header/Header.tsx","components/Hero/HeroStyles.tsx","components/Hero/Hero.tsx","store/actions/actionTypes.ts","store/actions/pokemon.ts","components/PokemonPortrait/PokemonPortraitStyles.tsx","components/PokemonPortrait/PokemonPortrait.tsx","components/UI/Loader/LoaderStyles.tsx","components/UI/Loader/Loader.tsx","components/UI/PokemonNotFound/PokemonNotFoundStyles.tsx","components/UI/PokemonNotFound/PokemonNotFound.tsx","components/PokemonSearch/PokemonSearch.tsx","components/UI/CloseButton/CloseButton.tsx","components/PokemonData/PokemonDataStyles.tsx","components/PokemonData/PokemonData.tsx","components/PokemonLineup/PokemonLineup.tsx","containers/RegisterPokemonLineup/RegisterPokemonLineupStyles.tsx","containers/RegisterPokemonLineup/RegisterPokemonLineup.tsx","components/UI/PageNotFound/PageNotFound.tsx","App.tsx","store/reducers/reducer.ts","reportWebVitals.ts","index.tsx"],"names":["HeaderStyles","makeStyles","theme","App_Header","backgroundColor","height","padding","color","position","borderBottom","content","boxSizing","background","border","boxShadow","borderRadius","width","left","bottom","transform","zIndex","App_Title","fontSize","fontFamily","letterSpacing","top","margin","Header","classes","className","HeroStyles","root","Pokemon_Hero_Img","overlay","Hero_Btn","fontWeight","spacing","breakpoints","up","Hero","Grid","container","src","alt","Link","to","FETCH_POKEMON_START","FETCH_POKEMON_SUCCESS","FETCH_POKEMON_FAIL","SELECT_POKEMON","DESELECT_POKEMON","ADD_POKEMON_TO_LINEUP","REMOVE_POKEMON_FROM_LINEUP","UPDATE_POKEMON_QUERY","P","Pokedex","protocol","fetchPokemon","query","dispatch","type","actionTypes","getPokemonByName","toLowerCase","then","response","pokemon","catch","error","fetchPokemonFail","PokemonPortraitStyles","Pokemon_Portrait","marginBottom","Pokemon_Lineup_Number","lineHeight","Pokemon_Lineup_Remove","right","cursor","Pokemon_Name","marginTop","paddingBottom","textTransform","PokemonPortrait","children","LoaderStyles","loaderText","animation","opacity","Loader","PokemonNotFoundStyles","Pokemon_404_msg","minWidth","Pokemon_404_img","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","PokemonNotFound","pokemonQuery","Typography","PokemonSearch","props","pokemonPortraitClasses","fetchedPokemon","pokemon404","isLoading","doSelectPokemon","doAddPokemon","pokemonSearchResult","sprites","front_default","name","variant","ButtonGroup","fullWidth","Button","onClick","useStyles","close","CloseButton","onClose","disableContainer","title","Tooltip","placement","arrow","IconButton","PokemonDataStyles","cardRoot","textAlign","listItemRoot","uppercase","PokemonData","pokemonDataClasses","selectedPokemon","deselectPokemon","pokemonData","pokemonTypes","types","map","i","arr","length","capitalize","pokemonAbilities","abilities","ability","pokemonStats","stats","slice","stat","ListItem","ListItemText","disableTypography","base_stat","Modal","open","Card","style","Divider","Table","TableRow","TableCell","List","PokemonLineup","pokemonLineup","doRemovePokemon","item","xs","RegisterPokemonLineupStyles","createStyles","Pokemon_Search_Form","Pokemon_Searchbox","outline","Pokemon_Lineup_Heading","borderTop","zIindex","RegisterPokemonLineup","fetchPokemonHandler","event","preventDefault","doFetchPokemonHandler","alert","addPokemonToLineupHandler","doAddPokemonToLineupHandler","checkForDuplicate","find","p","id","undefined","this","doRemovePokemonFromLineupHandler","doSelectPokemonHandler","doDeselectPokemonHandler","doUpdatePokemonQueryHandler","onSubmit","placeholder","value","onChange","Component","connect","state","actions","e","target","withStyles","Not_Found_Msg","PageNotFound","styles","App","Switch","Route","path","component","exact","initalState","reducer","action","concat","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","BrowserRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8b5c1316.chunk.js","sourcesContent":["import { makeStyles, Theme } from \"@material-ui/core\";\n\nconst HeaderStyles = makeStyles((theme: Theme) => ({\n  App_Header: {\n    backgroundColor: \"#FF1C1C\",\n    height: \"100px\",\n    padding: \"20px\",\n    color: \"white\",\n    position: \"relative\",\n    borderBottom: \"12px solid black\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      boxSizing: \"border-box\",\n      background: \"white\",\n      border: \"10px solid black\",\n      boxShadow: \"inset 0 0 0 12px white, inset 0 0 0 16px black\",\n      borderRadius: \"50%\",\n      height: \"80px\",\n      width: \"80px\",\n      left: \"50%\",\n      bottom: \"-48px\",\n      transform: \"translateX(-50%)\",\n      zIndex: 100\n    }\n  },\n  App_Title: {\n    fontSize: \"2.5em\",\n    fontFamily: '\"Do Hyeon\", sans-serif',\n    letterSpacing: \".1em\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    margin: 0\n  }\n}))\n\nexport default HeaderStyles;","import HeaderStyles from './HeaderStyles';\n\nconst Header = () => {\n    const classes = HeaderStyles();\n    return (\n        <div>\n            <header className={classes.App_Header}>\n                <h1 className={classes.App_Title}>Pokemon League</h1>\n            </header>\n        </div>\n    );\n};\n\nexport default Header;","import { Theme, makeStyles } from \"@material-ui/core\";\n\nconst HeroStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: \"relative\"\n  },\n  Pokemon_Hero_Img: {\n    width: \"100%\",\n    height: \"calc(100vh - 156px)\"\n  },\n  overlay: {\n    height: \"calc(100vh - 156px)\",\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.4)\"\n  },\n  Hero_Btn: {\n    fontWeight: \"bold\",\n    padding: theme.spacing(1),\n    background: \"yellowgreen\",\n    color: \"black\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    zIndex: 1,\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    \"&:visited\": {\n      color: \"black\"\n    },\n    [theme.breakpoints.up('xs')]: {\n      top: \"0\",\n      left: \"0\",\n      bottom: \"unset\",\n      width: \"50%\"\n    }\n  }\n}));\n\nexport default HeroStyles;","import { Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport HeroStyles from './HeroStyles';\n\nconst Hero = () => {\n  const classes = HeroStyles();\n  return (\n      <Grid container className={classes.root}>\n        <img className={classes.Pokemon_Hero_Img} src=\"https://media.giphy.com/media/8M8OxFRXpLFAI/giphy.gif\" alt=\"Ash and Pikachu\"/>\n        <div className={classes.overlay}></div>\n        <Link className={classes.Hero_Btn} to=\"/register-pokemon-lineup\">Register Your Pokemon</Link>\n      </Grid> \n  );\n};\n\nexport default Hero;","export const FETCH_POKEMON_START = \"FETCH_POKEMON_START\";\nexport const FETCH_POKEMON_SUCCESS = \"FETCH_POKEMON_SUCCESS\";\nexport const FETCH_POKEMON_FAIL = \"FETCH_POKEMON_FAIL\";\nexport const SELECT_POKEMON = \"SELECT_POKEMON\";\nexport const DESELECT_POKEMON = \"DESELECT_POKEMON\";\nexport const ADD_POKEMON_TO_LINEUP = \"ADD_POKEMON_TO_LINEUP\";\nexport const REMOVE_POKEMON_FROM_LINEUP = \"REMOVE_POKEMON_FROM_LINEUP\";\nexport const UPDATE_POKEMON_QUERY = \"UPDATE_POKEMON_QUERY\";","import * as actionTypes from './actionTypes';\n//@ts-ignore\nimport Pokedex from 'pokedex-promise-v2';\nimport { POKEMON } from '../../types';\nimport React from 'react';\n\nlet options ={\n    protocol: 'https'\n}\n\nlet P = new Pokedex(options); // init PokeApi wrapper with options\n\nexport const fetchPokemonStart = () => {\n    return {\n        type: actionTypes.FETCH_POKEMON_START\n    }\n}\n\nexport const fetchPokemonSuccess = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.FETCH_POKEMON_SUCCESS,\n        pokemon: pokemon\n    }\n}\n\nexport const fetchPokemonFail = (query: string) => {\n    return {\n        type: actionTypes.FETCH_POKEMON_FAIL,\n        query: query\n    }\n}\n\nexport const fetchPokemon = (query: string) => {\n    return (dispatch: any) => {\n        dispatch(fetchPokemonStart());\n        P.getPokemonByName(query.toLowerCase())\n            .then((response: POKEMON) => {\n                dispatch(fetchPokemonSuccess(response));\n            })\n            .catch((error: any) => {\n                dispatch(fetchPokemonFail(query));\n            });\n    }\n}\n\nexport const selectPokemon = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.SELECT_POKEMON,\n        pokemon: pokemon\n    }\n}\n\nexport const deselectPokemon = () => {\n    return {\n        type: actionTypes.DESELECT_POKEMON\n    }\n}\n\nexport const addPokemonToLineup = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.ADD_POKEMON_TO_LINEUP,\n        pokemon: pokemon\n    }\n}\n\nexport const removePokemonFromLineup = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.REMOVE_POKEMON_FROM_LINEUP,\n        pokemon\n    }\n}\n\nexport const updatePokemonQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    return {\n        type: actionTypes.UPDATE_POKEMON_QUERY,\n        pokemonQuery: e.target.value\n    }\n}","import { makeStyles } from \"@material-ui/core\";\n\nconst PokemonPortraitStyles = makeStyles({\n  Pokemon_Portrait: {\n    position: \"relative\",\n    backgroundColor: \"antiquewhite\",\n    borderRadius: \"5px\",\n    color: \"black\",\n    marginBottom: \"16px\"\n  },\n  Pokemon_Lineup_Number: {\n    position: \"absolute\",\n    color: \"white\",\n    backgroundColor: \"royalblue\",\n    borderRadius: \"100%\",\n    lineHeight: \"24px\",\n    width: \"24px\",\n    left: \"8px\",\n    top: \"8px\",\n    fontSize: \".7em\",\n    fontWeight: \"bold\"\n  },\n  Pokemon_Lineup_Remove: {\n    position: \"absolute\",\n    color: \"black\",\n    borderRadius: \"100%\",\n    right: \"15px\",\n    top: \"6px\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\"\n  },\n\n  Pokemon_Name: {\n    margin: \"0\",\n    marginTop: \"-8px\",\n    paddingBottom: \"12px\",\n    textTransform: 'capitalize'\n  },\n});\n\nexport default PokemonPortraitStyles; ","import PokemonPortraitStyles from \"./PokemonPortraitStyles\";\n\ninterface PROPS {\n  key: string,\n  children: { [key: string]: any }\n}\n\nexport default function PokemonPortrait({ children }: PROPS) {\n  const classes = PokemonPortraitStyles();\n  return (\n    <div className={classes.Pokemon_Portrait}>\n      {children}\n    </div>\n  )\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nconst LoaderStyles = makeStyles({\n  loaderText: {\n    letterSpacing: \".5em\",\n    fontSize: \".6em\",\n    transform: \"translate(-50%, -50%)\",\n    animation: \"pulse .9s ease infinite\"\n  },\n\n  \"@keyframes pulse\": {\n    \"50%\": {\n        opacity: 0\n    }\n  }\n})\n\nexport default LoaderStyles;","import LoaderStyles from \"./LoaderStyles\";\n\nconst Loader = () => {\n    const classes = LoaderStyles();\n    return (\n        <div>\n            <span className={classes.loaderText}>PLEASE WAIT</span>\n        </div>\n    );\n};\n\nexport default Loader;","import { makeStyles, Theme } from \"@material-ui/core\";\n\nconst PokemonNotFoundStyles = makeStyles((theme: Theme) => ({\n  Pokemon_404_msg: {\n    minWidth: \"100%\",\n    width: 0\n  },\n\n  Pokemon_404_img: {\n    backgroundImage: \"url(https://media.giphy.com/media/u7nXiwsXFpv8I/giphy.gif)\",\n    backgroundSize: \"contain\",\n    backgroundPosition: \"center\",\n    height: \"352px\",\n    backgroundRepeat: \"no-repeat\",\n  }\n}));\nexport default PokemonNotFoundStyles;","import { Typography } from '@material-ui/core';\nimport { INITIAL_STATE } from '../../../store/reducers/reducer';\nimport PokemonNotFoundStyles from './PokemonNotFoundStyles';\n\ninterface PROPS extends Partial<INITIAL_STATE> {}\n\nconst PokemonNotFound = ({ pokemonQuery }: PROPS) => {\n  const classes = PokemonNotFoundStyles();\n    return (\n        <div>\n          <Typography className={classes.Pokemon_404_msg}>Sorry, the pokemon `{pokemonQuery}` could not be found.</Typography>\n          <div className={classes.Pokemon_404_img}></div>\n        </div>\n    );\n};\n\nexport default PokemonNotFound;","import { Button, ButtonGroup, Typography } from '@material-ui/core';\nimport { INITIAL_STATE } from '../../store/reducers/reducer';\nimport PokemonPortrait from '../PokemonPortrait/PokemonPortrait';\nimport PokemonPortraitStyles from '../PokemonPortrait/PokemonPortraitStyles';\nimport Loader from '../UI/Loader/Loader';\nimport PokemonNotFound from '../UI/PokemonNotFound/PokemonNotFound';\n\ninterface PROPS extends Partial<INITIAL_STATE> {\n    doSelectPokemon: () => void,\n    doAddPokemon: () => void\n}\nconst PokemonSearch = (props: PROPS) => {\n    const pokemonPortraitClasses = PokemonPortraitStyles();\n    const { fetchedPokemon, pokemonQuery, pokemon404, isLoading, doSelectPokemon, doAddPokemon } = props;\n    let pokemonSearchResult = null;\n\n    if (isLoading) {\n        pokemonSearchResult = <Loader />;\n    } else if (fetchedPokemon) {\n        pokemonSearchResult = (\n            <PokemonPortrait key={\"PokemonSearchPortrait\"}>\n                <img src={fetchedPokemon.sprites.front_default} alt={fetchedPokemon.name} />\n                <Typography variant={\"h6\"} className={pokemonPortraitClasses.Pokemon_Name}>{fetchedPokemon.name}</Typography>\n                <ButtonGroup fullWidth>\n                    <Button fullWidth variant={\"contained\"} color={\"primary\"} onClick={doSelectPokemon}>Data</Button>\n                    <Button fullWidth variant={\"contained\"} color={\"secondary\"} onClick={doAddPokemon}>Add to Lineup</Button>\n                </ButtonGroup>\n            </PokemonPortrait>\n        );\n    } else if (pokemon404) {\n        pokemonSearchResult = <PokemonNotFound pokemonQuery={pokemonQuery} />;\n    }\n\n    return pokemonSearchResult;\n};\n\nexport default PokemonSearch;","import { IconButton, Theme, makeStyles, Tooltip } from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\ninterface PROPS {\n  onClose: () => void,\n  title?: string,\n  disableContainer?: boolean\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    close: {\n      position: \"absolute\",\n      color: \"black\",\n      borderRadius: \"100%\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      fontWeight: \"bold\",\n      cursor: \"pointer\"\n    }\n}))\n\nexport default function CloseButton({ onClose, disableContainer, title }: PROPS) {\n  const classes = useStyles();\n  return (\n    <Tooltip title={title ? title : \"\"} placement={\"top\"} arrow>\n      {\n        !disableContainer ? (\n          <IconButton className={classes.close} onClick={onClose}>\n            <HighlightOffIcon />\n          </IconButton>\n        ) : (\n          <HighlightOffIcon className={classes.close} onClick={onClose} />\n        )\n      }\n    </Tooltip>\n  )\n}\n","import { Theme, makeStyles } from \"@material-ui/core\";\n\nconst PokemonDataStyles = makeStyles((theme: Theme) => ({\n  cardRoot: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\",\n    width: \"40%\"\n  },\n  listItemRoot: {\n    padding: 0\n  },\n  uppercase: {\n    textTransform: \"uppercase\"\n  }\n}));\n\nexport default PokemonDataStyles;","import { Card, Divider, Modal, Table, TableCell, TableRow, Typography, capitalize, List, ListItem, ListItemText } from '@material-ui/core';\nimport { INITIAL_STATE } from '../../store/reducers/reducer';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport PokemonDataStyles from './PokemonDataStyles';\n\ninterface PROPS extends Partial<INITIAL_STATE> {\n    deselectPokemon: () => void\n}\n\nconst PokemonData = (props: PROPS) => {\n    const pokemonDataClasses = PokemonDataStyles();\n    const { selectedPokemon, deselectPokemon } = props;\n    let pokemonData = null;\n\n    if (selectedPokemon) {\n        let pokemon = selectedPokemon;\n        let pokemonTypes = pokemon.types.map((type: {[key: string]: any}, i: number, arr: any[]) => {\n            if (arr.length - 1 === i) {\n                return (\n                    <Typography variant={\"inherit\"} key={i}>\n                        <strong>{capitalize(type.type.name)}</strong>\n                    </Typography>\n                )\n            } else {\n                return (\n                    <Typography variant={\"inherit\"} key={i}>\n                        <strong>{capitalize(type.type.name)}</strong>,&nbsp;\n                    </Typography>\n                )\n            }\n        });\n        let pokemonAbilities = pokemon.abilities.map((ability: {[key: string]: any}, i: number, arr: any[]) => {\n            if (arr.length - 1 === i) {\n                return (\n                    <Typography variant={\"inherit\"} key={i}>\n                        <strong>{capitalize(ability.ability.name)}</strong>\n                    </Typography>\n                )\n            } else {\n                return (\n                    <Typography variant={\"inherit\"} key={i}>\n                        <strong>{capitalize(ability.ability.name)}</strong>,&nbsp;\n                    </Typography>\n                )\n            }\n        });\n        let pokemonStats = pokemon.stats.slice(0).map((stat: {[key: string]: any}, i: number) => {\n            return (\n                <ListItem key={i} classes={{ root: pokemonDataClasses.listItemRoot }}>\n                    <ListItemText disableTypography classes={{ root: pokemonDataClasses.uppercase }}><strong>{stat.stat.name}:</strong> <Typography variant={\"inherit\"}>{stat.base_stat}</Typography></ListItemText> \n                </ListItem>\n            );\n        });\n        pokemonData = (\n            <Modal\n                open={selectedPokemon ? true : false}\n                onClose={deselectPokemon}\n            >\n                <Card className={pokemonDataClasses.cardRoot}>\n                    <div style={{ position: 'relative', padding: '32px'}}>\n                        <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n                        <CloseButton onClose={deselectPokemon} />\n                        <Typography variant={\"h3\"}>{capitalize(pokemon.name)}</Typography>\n                        <Divider />\n                        <Table>\n                            <TableRow>\n                                <TableCell variant=\"head\">Type(s)</TableCell>\n                                <TableCell>{pokemonTypes}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell variant=\"head\">Abilities</TableCell>\n                                <TableCell>{pokemonAbilities}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell variant=\"head\">Stats</TableCell>\n                                <TableCell>\n                                    <List>\n                                        {pokemonStats}\n                                    </List>\n                                </TableCell>\n                            </TableRow>\n                        </Table>\n                    </div>\n                </Card>\n            </Modal>\n        );\n    }\n\n    return pokemonData;\n};\n\nexport default PokemonData;","import { Card, Grid, Typography, capitalize } from '@material-ui/core';\r\nimport { INITIAL_STATE } from '../../store/reducers/reducer';\r\nimport { POKEMON } from '../../types';\r\nimport PokemonPortrait from '../PokemonPortrait/PokemonPortrait';\r\nimport PokemonPortraitStyles from '../PokemonPortrait/PokemonPortraitStyles';\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport CloseButton from '../UI/CloseButton/CloseButton';\r\n\r\ninterface PROPS extends Partial<INITIAL_STATE> {\r\n    doRemovePokemon: (pokemon: POKEMON) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    cardRoot: {\r\n        backgroundColor: \"yellowgreen\",\r\n        color: \"white\",\r\n        padding: theme.spacing(4),\r\n        borderRadius: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst PokemonLineup = (props: PROPS) => {\r\n    const classes = useStyles();\r\n    const pokemonPortraitClasses = PokemonPortraitStyles();\r\n    const { pokemonLineup, doRemovePokemon } = props;\r\n\r\n    let pokemonLineupDisplay = null;\r\n\r\n    if (pokemonLineup && pokemonLineup.length === 0) {\r\n        pokemonLineupDisplay = (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.cardRoot}>\r\n                        <Typography>Search for pokemon to add to your lineup. Maximum (6).</Typography>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    } else {\r\n        pokemonLineupDisplay = (\r\n            <Grid container spacing={1}>\r\n                {pokemonLineup && pokemonLineup.map((pokemon: POKEMON, i: number) => {\r\n                    return (\r\n                        <Grid item xs={4}>\r\n                            <PokemonPortrait key={`${i + 1}`}>\r\n                                <span className={pokemonPortraitClasses.Pokemon_Lineup_Number}>{i + 1}</span>\r\n                                <CloseButton disableContainer={true} title={\"Remove \" + capitalize(pokemon.name)} onClose={() => doRemovePokemon(pokemon)} />\r\n                                <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n                                <Typography variant={\"h6\"} className={pokemonPortraitClasses.Pokemon_Name}>{pokemon.name}</Typography>\r\n                            </PokemonPortrait>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return pokemonLineupDisplay;\r\n};\r\n\r\nexport default PokemonLineup;","import { createStyles } from \"@material-ui/styles\";\n\nconst RegisterPokemonLineupStyles = createStyles({\n  Pokedex: {\n    padding: \"20px\"\n  },\n  Pokemon_Search_Form: {\n    marginBottom: \"28px\"\n  },\n  Pokemon_Searchbox: {\n      background: \"transparent\",\n      outline: \"none\",\n      color: \"white\",\n      border: \"0\",\n      padding: \"5px 5px 8px 5px\",\n      borderBottom: \"3px solid red\",\n      width: \"100%\",\n      letterSpacing: \".1em\",\n      boxSizing: \"border-box\"\n  },\n  Pokemon_Lineup_Heading: {\n    marginBottom: \"32px\",\n    position: \"relative\",\n    fontFamily: \"'Do Hyeon', sans-serif\",\n    letterSpacing: \".1em\",\n    textAlign: \"left\",\n    '&::after': {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: \"-23px\",\n      left: \"0\",\n      right: \"0\",\n      height: \"0.5em\",\n      width: \"65px\",\n      borderTop: \"5px solid red\",\n      zIindex: \"-1\",\n    }\n  }\n});\n\nexport default RegisterPokemonLineupStyles; ","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\n\nimport * as actions from '../../store/actions/index';\nimport { POKEMON } from '../../types';\nimport PokemonSearch from '../../components/PokemonSearch/PokemonSearch';\nimport PokemonData from '../../components/PokemonData/PokemonData';\nimport PokemonLineup from '../../components/PokemonLineup/PokemonLineup';\nimport { INITIAL_STATE } from '../../store/reducers/reducer';\nimport RegisterPokemonLineupStyles from \"./RegisterPokemonLineupStyles\";\nimport { Grid, Typography } from '@material-ui/core';\n\ninterface PROPS extends INITIAL_STATE {\n    doFetchPokemonHandler: (query: string) => any,\n    doAddPokemonToLineupHandler: (pokemon: POKEMON) => any,\n    doRemovePokemonFromLineupHandler: (pokemon: POKEMON) => void,\n    doSelectPokemonHandler: (pokemon: POKEMON) => any,\n    doDeselectPokemonHandler: () => any,\n    doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    classes: { [key: string]: any }\n}\n\nclass RegisterPokemonLineup extends Component<PROPS> {\n\n    fetchPokemonHandler = (event: any) => {\n        event.preventDefault();\n        const { doFetchPokemonHandler, pokemonQuery } = this.props;\n\n        if (pokemonQuery !== '') {\n            doFetchPokemonHandler(pokemonQuery);\n        } else {\n            alert(\"Please type in a pokemon name.\")\n        }\n    }\n\n    addPokemonToLineupHandler = () => {\n        const { pokemonLineup, fetchedPokemon, doAddPokemonToLineupHandler } = this.props;\n        const checkForDuplicate = fetchedPokemon && pokemonLineup.find((p: POKEMON) => p.id === fetchedPokemon.id);\n        if (fetchedPokemon && checkForDuplicate !== undefined) {\n            alert(fetchedPokemon.name + \" is already in the lineup.\");\n        } else if (fetchedPokemon && pokemonLineup.length < 6) {\n            doAddPokemonToLineupHandler(fetchedPokemon);\n        } else {\n            alert(\"Pokemon lineup spots are filled.\");\n        }\n    }\n    render() {\n        const { \n            doRemovePokemonFromLineupHandler,\n            doSelectPokemonHandler,\n            doDeselectPokemonHandler,\n            doUpdatePokemonQueryHandler,\n            selectedPokemon,\n            pokemonLineup,\n            isLoading,\n            fetchedPokemon,\n            pokemon404,\n            pokemonQuery,\n            classes\n        } = this.props;\n        return (\n            <div style={{ padding: \"30px\" }}>\n                <Grid container spacing={6}>\n                    <Grid item xs={6}> {/* Pokemon Lineup + Data Column */}\n                        <Typography variant={\"h4\"} className={classes.Pokemon_Lineup_Heading}>Pokemon Lineup</Typography>\n                        <PokemonLineup\n                            pokemonLineup={pokemonLineup}\n                            doRemovePokemon={(pokemon: POKEMON) => doRemovePokemonFromLineupHandler(pokemon)} />\n                        <PokemonData\n                            selectedPokemon={selectedPokemon} \n                            deselectPokemon={doDeselectPokemonHandler}\n                        />\n                    </Grid>\n                    <Grid item xs={6}> {/* Pokemon Search Column */}\n                        <div className={classes.Pokedex}>\n                            <form className={classes.Pokemon_Search_Form} onSubmit={this.fetchPokemonHandler}>\n                                <input className={classes.Pokemon_Searchbox} type=\"text\" name=\"query\" placeholder=\"Search Pokemon (e.g. Pikachu and press enter)\" value={pokemonQuery} onChange={doUpdatePokemonQueryHandler} />\n                            </form>\n                            <PokemonSearch\n                                isLoading={isLoading}\n                                fetchedPokemon={fetchedPokemon}\n                                pokemon404={pokemon404}\n                                pokemonQuery={pokemonQuery}\n                                doSelectPokemon={() => fetchedPokemon && doSelectPokemonHandler(fetchedPokemon)}\n                                doAddPokemon={() => this.addPokemonToLineupHandler()} \n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: INITIAL_STATE) => {\n    return {\n        fetchedPokemon: state.fetchedPokemon,\n        pokemon404: state.pokemon404,\n        selectedPokemon: state.selectedPokemon,\n        pokemonLineup: state.pokemonLineup,\n        isLoading: state.isLoading,\n        pokemonQuery: state.pokemonQuery\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        doFetchPokemonHandler: (query: string) => dispatch(actions.fetchPokemon(query)),\n        doSelectPokemonHandler: (pokemon: POKEMON) => dispatch(actions.selectPokemon(pokemon)),\n        doDeselectPokemonHandler: () => dispatch(actions.deselectPokemon()),\n        doAddPokemonToLineupHandler: (pokemon: POKEMON) => dispatch(actions.addPokemonToLineup(pokemon)),\n        doRemovePokemonFromLineupHandler: (pokemon: POKEMON) => dispatch(actions.removePokemonFromLineup(pokemon)),\n        doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => dispatch(actions.updatePokemonQuery(e))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(RegisterPokemonLineupStyles)(RegisterPokemonLineup));","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    Not_Found_Msg: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n    }\n}));\n\nconst PageNotFound = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.Not_Found_Msg}>\n            <h1>404, the page you were looking cannot be found.</h1>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { createStyles, withStyles } from '@material-ui/styles';\n\nimport Header from './components/UI/Header/Header';\nimport Hero from './components/Hero/Hero';\nimport RegisterPokemonLineup from './containers/RegisterPokemonLineup/RegisterPokemonLineup';\nimport PageNotFound from './components/UI/PageNotFound/PageNotFound';\n\nconst styles = createStyles({\n  App: {\n    textAlign: 'center'\n  }\n});\n\ninterface PROPS {\n  classes: { [key: string]: any }\n}\n\nclass App extends Component<PROPS> {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.App}>\n        <Header/>\n        <Switch>\n          <Route path=\"/register-pokemon-lineup\" component={RegisterPokemonLineup}/>\n          <Route path=\"/\" exact component={Hero}/>  \n          <Route path=\"*\" component={PageNotFound}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import { POKEMON, POKEMON_ACTION} from '../../types';\nimport * as actionTypes from '../actions/actionTypes';\n\nexport interface INITIAL_STATE {\n    fetchedPokemon: POKEMON | null,\n    pokemon404: boolean,\n    selectedPokemon: POKEMON | null,\n    pokemonLineup: POKEMON[],\n    isLoading: boolean,\n    pokemonQuery: string\n}\n\nconst initalState: INITIAL_STATE = {\n    fetchedPokemon: null,\n    pokemon404: false,\n    selectedPokemon: null,\n    pokemonLineup: [],\n    isLoading: false,\n    pokemonQuery: ''\n}\n\nconst reducer = (state: INITIAL_STATE = initalState, action: POKEMON_ACTION) => {\n    switch(action.type) {\n        case actionTypes.FETCH_POKEMON_START:\n            return {\n                ...state,\n                isLoading: true,\n                selectedPokemon: null\n            };\n        case actionTypes.FETCH_POKEMON_SUCCESS:\n            return {\n                ...state,\n                fetchedPokemon: action.pokemon,\n                pokemon404: false,\n                isLoading: false\n            };\n        case actionTypes.FETCH_POKEMON_FAIL:\n            return {\n                ...state,\n                fetchedPokemon: null,\n                pokemon404: true,\n                isLoading: false\n            };\n        case actionTypes.SELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: action.pokemon\n            };\n        case actionTypes.DESELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: null\n            };\n        case actionTypes.ADD_POKEMON_TO_LINEUP:\n            return {\n                ...state,\n                pokemonLineup: state.pokemonLineup.concat(action.pokemon)\n            };\n        case actionTypes.REMOVE_POKEMON_FROM_LINEUP:\n            return {\n                ...state,\n                pokemonLineup: state.pokemonLineup.filter((pokemon: POKEMON) => pokemon.id !== action.pokemon.id)\n            };\n        case actionTypes.UPDATE_POKEMON_QUERY:\n            return {\n                ...state,\n                pokemonQuery: action.pokemonQuery\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/reducer';\nimport reportWebVitals from './reportWebVitals';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    //@ts-ignore\n    reducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename=\"/pokemon-league/\">\n            <App />\n        </BrowserRouter>\n    </Provider>, \n    document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}