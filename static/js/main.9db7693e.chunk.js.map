{"version":3,"sources":["components/UI/Header/Header.tsx","components/Hero/Hero.tsx","store/actions/actionTypes.ts","store/actions/pokemon.ts","components/UI/Loader/Loader.tsx","components/UI/PokemonNotFound/PokemonNotFound.tsx","components/PokemonSearchPortrait/PokemonSearchPortrait.tsx","components/PokemonDataPortrait/PokemonDataPortrait.tsx","components/PokemonLineupPortrait/PokemonLineupPortrait.tsx","containers/RegisterPokemonLineup/RegisterPokemonLineup.tsx","components/UI/PageNotFound/PageNotFound.tsx","App.tsx","store/reducers/reducer.ts","reportWebVitals.ts","index.tsx"],"names":["Header","className","Hero","style","src","alt","Link","to","FETCH_POKEMON_START","FETCH_POKEMON_SUCCESS","FETCH_POKEMON_FAIL","VIEW_POKEMON_DATA","ADD_POKEMON_TO_LINEUP","REMOVE_POKEMON_FROM_LINEUP","UPDATE_POKEMON_QUERY","P","Pokedex","protocol","fetchPokemon","query","dispatch","type","actionTypes","getPokemonByName","toLowerCase","then","response","pokemon","catch","error","fetchPokemonFail","Loader","PokemonNotFound","pokemonQuery","PokemonSearchPortrait","props","fetchedPokemon","pokemon404","isLoading","doSelectPokemon","doAddPokemon","pokemonSearchResult","sprites","front_default","name","onClick","PokemonDataPortrait","selectedPokemon","pokemonData","pokemonTypes","types","map","i","arr","length","pokemonAbilities","abilities","ability","pokemonStats","stats","slice","reverse","stat","base_stat","PokemonLineupPortrait","pokemonLineup","doRemovePokemon","title","RegisterPokemonLineup","fetchPokemonHandler","event","preventDefault","doFetchPokemonHandler","alert","addPokemonToLineupHandler","doAddPokemonToLineupHandler","checkForDuplicate","find","p","id","undefined","this","doRemovePokemonFromLineupHandler","doViewPokemonDataHandler","doUpdatePokemonQueryHandler","onSubmit","placeholder","value","onChange","Component","connect","state","actions","e","target","PageNotFound","App","Switch","Route","path","component","exact","initalState","reducer","action","concat","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","BrowserRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9db7693e.chunk.js","sourcesContent":["import './Header.css';\n\nconst Header = () => {\n    return (\n        <div>\n            <header className=\"App-header\">\n                <h1 className=\"App-title\">Pokemon League</h1>\n            </header>\n        </div>\n    );\n};\n\nexport default Header;","import { Link } from 'react-router-dom';\n\nimport './Hero.css';\n\nconst Hero = () => {\n    return (\n        <div style={{\"position\": \"relative\"}}>\n          <img className=\"Pokemon-hero-img\" src=\"https://media.giphy.com/media/8M8OxFRXpLFAI/giphy.gif\" alt=\"Ash and Pikachu\"/>\n          <div className=\"overlay\"></div>\n          <Link className=\"btn btn-success hero-btn\" to=\"/register-pokemon-lineup\">Register Your Pokemon</Link>\n        </div> \n    );\n};\n\nexport default Hero;","export const FETCH_POKEMON_START = \"FETCH_POKEMON_START\";\nexport const FETCH_POKEMON_SUCCESS = \"FETCH_POKEMON_SUCCESS\";\nexport const FETCH_POKEMON_FAIL = \"FETCH_POKEMON_FAIL\";\nexport const VIEW_POKEMON_DATA = \"VIEW_POKEMON_DATA\";\nexport const ADD_POKEMON_TO_LINEUP = \"ADD_POKEMON_TO_LINEUP\";\nexport const REMOVE_POKEMON_FROM_LINEUP = \"REMOVE_POKEMON_FROM_LINEUP\";\nexport const UPDATE_POKEMON_QUERY = \"UPDATE_POKEMON_QUERY\";","import * as actionTypes from './actionTypes';\n//@ts-ignore\nimport Pokedex from 'pokedex-promise-v2';\nimport { POKEMON } from '../../types';\nimport React from 'react';\n\nlet options ={\n    protocol: 'https'\n}\n\nlet P = new Pokedex(options); // init PokeApi wrapper with options\n\nexport const fetchPokemonStart = () => {\n    return {\n        type: actionTypes.FETCH_POKEMON_START\n    }\n}\n\nexport const fetchPokemonSuccess = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.FETCH_POKEMON_SUCCESS,\n        pokemon: pokemon\n    }\n}\n\nexport const fetchPokemonFail = (query: string) => {\n    return {\n        type: actionTypes.FETCH_POKEMON_FAIL,\n        query: query\n    }\n}\n\nexport const fetchPokemon = (query: string) => {\n    return (dispatch: any) => {\n        dispatch(fetchPokemonStart());\n        P.getPokemonByName(query.toLowerCase())\n            .then((response: POKEMON) => {\n                dispatch(fetchPokemonSuccess(response));\n            })\n            .catch((error: any) => {\n                dispatch(fetchPokemonFail(query));\n            });\n    }\n}\n\nexport const viewPokemonData = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.VIEW_POKEMON_DATA,\n        pokemon: pokemon\n    }\n}\n\nexport const addPokemonToLineup = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.ADD_POKEMON_TO_LINEUP,\n        pokemon: pokemon\n    }\n}\n\nexport const removePokemonFromLineup = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.REMOVE_POKEMON_FROM_LINEUP,\n        pokemon\n    }\n}\n\nexport const updatePokemonQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    return {\n        type: actionTypes.UPDATE_POKEMON_QUERY,\n        pokemonQuery: e.target.value\n    }\n}","import './Loader.css';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <span className=\"Loader-text\">PLEASE WAIT</span>\n        </div>\n    );\n};\n\nexport default Loader;","import React from 'react';\nimport { INITIAL_STATE } from '../../../store/reducers/reducer';\nimport './PokemonNotFound.css';\n\ntype PROPS = Partial<INITIAL_STATE>;\n\nconst PokemonNotFound = ({ pokemonQuery }: PROPS) => {\n    return (\n        <div className=\"Col\">\n          <p className=\"Pokemon-404-msg\">Sorry, the pokemon `{pokemonQuery}` could not be found.</p>\n          <div className=\"Pokemon-404-img\"></div>\n        </div>\n    );\n};\n\nexport default PokemonNotFound;","import { INITIAL_STATE } from '../../store/reducers/reducer';\nimport Loader from '../UI/Loader/Loader';\nimport PokemonNotFound from '../UI/PokemonNotFound/PokemonNotFound';\n\ntype PROPS = Partial<INITIAL_STATE> & {\n    doSelectPokemon: () => void,\n    doAddPokemon: () => void\n}\nconst PokemonSearchPortrait = (props: PROPS) => {\n    const { fetchedPokemon, pokemonQuery, pokemon404, isLoading, doSelectPokemon, doAddPokemon } = props;\n    let pokemonSearchResult = null;\n\n    if (isLoading) {\n        pokemonSearchResult = <Loader />;\n    } else if (fetchedPokemon) {\n        pokemonSearchResult = (\n            <div className=\"Pokemon-portrait Col\">\n                <img src={fetchedPokemon.sprites.front_default} alt={fetchedPokemon.name} />\n                <h4 className=\"Pokemon-name capitalize\">{fetchedPokemon.name}</h4>\n                <button className=\"btn btn-primary\" onClick={doSelectPokemon}>Data</button>\n                <button className=\"btn btn-success\" onClick={doAddPokemon}>Add to Lineup</button>\n            </div>\n        );\n    } else if (pokemon404) {\n        pokemonSearchResult = <PokemonNotFound pokemonQuery={pokemonQuery} />;\n    }\n\n    return pokemonSearchResult;\n};\n\nexport default PokemonSearchPortrait;","import { INITIAL_STATE } from '../../store/reducers/reducer';\n\ntype PROPS = Partial<INITIAL_STATE>\n\nconst PokemonDataPortrait = (props: PROPS) => {\n    const { selectedPokemon } = props;\n    let pokemonData = null;\n\n    if (selectedPokemon) {\n        let pokemon = selectedPokemon;\n        let pokemonTypes = pokemon.types.map((type: {[key: string]: any}, i: number, arr: any[]) => {\n            if (arr.length - 1 === i) {\n                return (\n                    <span key={i}>\n                        <span className=\"bold capitalize\">{type.type.name}</span>\n                    </span>\n                )\n            } else {\n                return (\n                    <span key={i}>\n                        <span className=\"bold capitalize\">{type.type.name}</span>,&nbsp;\n            </span>\n                )\n            }\n        });\n        let pokemonAbilities = pokemon.abilities.map((ability: {[key: string]: any}, i: number, arr: any[]) => {\n            if (arr.length - 1 === i) {\n                return (\n                    <span key={i}>\n                        <span className=\"bold capitalize\">{ability.ability.name}</span>\n                    </span>\n                )\n            } else {\n                return (\n                    <span key={i}>\n                        <span className=\"bold capitalize\">{ability.ability.name}</span>,&nbsp;\n            </span>\n                )\n            }\n        });\n        let pokemonStats = pokemon.stats.slice(0).reverse().map((stat: {[key: string]: any}, i: number) => {\n            return (\n                <li key={i}><span className=\"bold capitalize\">{stat.stat.name}:</span> <span>{stat.base_stat}</span></li>\n            );\n        });\n        pokemonData = (\n            <div>\n                <h2 className=\"text-left subheading\">Pokemon Data</h2>\n                <div className=\"Flex-row Flex-1\">\n                    <div className=\"Pokemon-portrait Col\">\n                        <div className=\"Flex-row Flex-3\">\n                            <div className=\"Col\">\n                                <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n                                <h4 className=\"Pokemon-name capitalize\">{pokemon.name}</h4>\n                            </div>\n                            <div className=\"Col types abilities text-left-md\">\n                                <p>Type(s): {pokemonTypes}</p>\n                                <p className=\"float-left-md\">Abilities: {pokemonAbilities} </p>\n                            </div>\n                            <div className=\"Col stats text-left-md\">\n                                <p className=\"float-left-md\">Stats:</p>\n                                <ul className=\"float-left-md margin-top-em1 margin-left-10\">\n                                    {pokemonStats}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return pokemonData;\n};\n\nexport default PokemonDataPortrait;","import React from 'react';\r\nimport { INITIAL_STATE } from '../../store/reducers/reducer';\r\nimport { POKEMON } from '../../types';\r\n\r\ntype PROPS = Partial<INITIAL_STATE> & {\r\n    doRemovePokemon: (pokemon: POKEMON) => void\r\n}\r\n\r\nconst PokemonLineupPortrait = (props: PROPS) => {\r\n    const { pokemonLineup, doRemovePokemon } = props;\r\n\r\n    let pokemonLineupDisplay = null;\r\n\r\n    if (pokemonLineup && pokemonLineup.length === 0) {\r\n        pokemonLineupDisplay = (\r\n            <div className=\"Flex-row Flex-1\">\r\n                <div className=\"Info-block Col\">\r\n                    <p>Search for pokemon to add to your lineup. Maximum (6).</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        pokemonLineupDisplay = (\r\n            <div className=\"Flex-row Flex-3\">\r\n                {pokemonLineup && pokemonLineup.map((pokemon: POKEMON, i: number) => {\r\n                    return (\r\n                        <div className=\"Pokemon-portrait Col\" key={i + 1}>\r\n                            <span className=\"Pokemon-lineup-number\">{i + 1}</span>\r\n                            <span className=\"Pokemon-lineup-remove\" title={\"Remove \" + pokemon.name} onClick={() => doRemovePokemon(pokemon)}>&times;</span>\r\n                            <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n                            <h4 className=\"Pokemon-name capitalize\">{pokemon.name}</h4>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return pokemonLineupDisplay;\r\n};\r\n\r\nexport default PokemonLineupPortrait;","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport { POKEMON } from '../../types';\nimport PokemonSearchPortrait from '../../components/PokemonSearchPortrait/PokemonSearchPortrait';\nimport PokemonDataPortrait from '../../components/PokemonDataPortrait/PokemonDataPortrait';\nimport PokemonLineupPortrait from '../../components/PokemonLineupPortrait/PokemonLineupPortrait';\nimport './RegisterPokemonLineup.css';\nimport { INITIAL_STATE } from '../../store/reducers/reducer';\n\ntype PROPS = INITIAL_STATE & {\n    doFetchPokemonHandler: (query: string) => any,\n    doAddPokemonToLineupHandler: (pokemon: POKEMON) => any,\n    doRemovePokemonFromLineupHandler: (pokemon: POKEMON) => void,\n    doViewPokemonDataHandler: (pokemon: POKEMON) => any,\n    doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nclass RegisterPokemonLineup extends Component<PROPS> {\n\n    fetchPokemonHandler = (event: any) => {\n        event.preventDefault();\n        const { doFetchPokemonHandler, pokemonQuery } = this.props;\n\n        if (pokemonQuery !== '') {\n            doFetchPokemonHandler(pokemonQuery);\n        } else {\n            alert(\"Please type in a pokemon name.\")\n        }\n    }\n\n    addPokemonToLineupHandler = () => {\n        const { pokemonLineup, fetchedPokemon, doAddPokemonToLineupHandler } = this.props;\n        const checkForDuplicate = fetchedPokemon && pokemonLineup.find((p: POKEMON) => p.id === fetchedPokemon.id);\n        if (fetchedPokemon && checkForDuplicate !== undefined) {\n            alert(fetchedPokemon.name + \" is already in the lineup.\");\n        } else if (fetchedPokemon && pokemonLineup.length < 6) {\n            doAddPokemonToLineupHandler(fetchedPokemon);\n        } else {\n            alert(\"Pokemon lineup spots are filled.\");\n        }\n    }\n    render() {\n        const { \n            doRemovePokemonFromLineupHandler,\n            doViewPokemonDataHandler,\n            doUpdatePokemonQueryHandler,\n            selectedPokemon,\n            pokemonLineup,\n            isLoading,\n            fetchedPokemon,\n            pokemon404,\n            pokemonQuery\n        } = this.props;\n        return (\n            <div>\n                <div className=\"Pokemon-form Flex-row Flex-2\">\n\n                    {/* Pokemon Lineup + Data Column */}\n                    <div className=\"Col\">\n                        <div className=\"Pokemon-lineup\">\n                            <h2 className=\"text-left subheading\">Pokemon Lineup</h2>\n                            <PokemonLineupPortrait\n                                pokemonLineup={pokemonLineup}\n                                doRemovePokemon={(pokemon: POKEMON) => doRemovePokemonFromLineupHandler(pokemon)} />\n                        </div>\n                        <div className=\"Pokemon-data\">\n                            <PokemonDataPortrait selectedPokemon={selectedPokemon} />\n                        </div>\n                    </div>\n\n                    {/* Pokemon Search Column */}\n                    <div className=\"Col\">\n                        <div className=\"Pokedex\">\n                            <form className=\"Pokemon-search-form\" onSubmit={this.fetchPokemonHandler}>\n                                <input type=\"text\" name=\"query\" placeholder=\"Search Pokemon (e.g. Pikachu and press enter)\" value={pokemonQuery} onChange={doUpdatePokemonQueryHandler} />\n                            </form>\n                            <div className=\"Search-results\">\n                                <PokemonSearchPortrait\n                                    isLoading={isLoading}\n                                    fetchedPokemon={fetchedPokemon}\n                                    pokemon404={pokemon404}\n                                    pokemonQuery={pokemonQuery}\n                                    doSelectPokemon={() => fetchedPokemon && doViewPokemonDataHandler(fetchedPokemon)}\n                                    doAddPokemon={() => this.addPokemonToLineupHandler()} \n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: INITIAL_STATE) => {\n    return {\n        fetchedPokemon: state.fetchedPokemon,\n        pokemon404: state.pokemon404,\n        selectedPokemon: state.selectedPokemon,\n        pokemonLineup: state.pokemonLineup,\n        isLoading: state.isLoading,\n        pokemonQuery: state.pokemonQuery\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        doFetchPokemonHandler: (query: string) => dispatch(actions.fetchPokemon(query)),\n        doViewPokemonDataHandler: (pokemon: POKEMON) => dispatch(actions.viewPokemonData(pokemon)),\n        doAddPokemonToLineupHandler: (pokemon: POKEMON) => dispatch(actions.addPokemonToLineup(pokemon)),\n        doRemovePokemonFromLineupHandler: (pokemon: POKEMON) => dispatch(actions.removePokemonFromLineup(pokemon)),\n        doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => dispatch(actions.updatePokemonQuery(e))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPokemonLineup);","import React from 'react';\nimport './PageNotFound.css';\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"Not-found-msg\">\n            <h1>404, the page you were looking cannot be found.</h1>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Header from './components/UI/Header/Header';\nimport Hero from './components/Hero/Hero';\nimport RegisterPokemonLineup from './containers/RegisterPokemonLineup/RegisterPokemonLineup';\nimport PageNotFound from './components/UI/PageNotFound/PageNotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route path=\"/register-pokemon-lineup\" component={RegisterPokemonLineup}/>\n          <Route path=\"/\" exact component={Hero}/>  \n          <Route path=\"*\" component={PageNotFound}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { POKEMON, POKEMON_ACTION} from '../../types';\nimport * as actionTypes from '../actions/actionTypes';\n\nexport type INITIAL_STATE = {\n    fetchedPokemon: POKEMON | null,\n    pokemon404: boolean,\n    selectedPokemon: POKEMON | null,\n    pokemonLineup: POKEMON[],\n    isLoading: boolean,\n    pokemonQuery: string\n}\n\nconst initalState: INITIAL_STATE = {\n    fetchedPokemon: null,\n    pokemon404: false,\n    selectedPokemon: null,\n    pokemonLineup: [],\n    isLoading: false,\n    pokemonQuery: ''\n}\n\nconst reducer = (state: INITIAL_STATE = initalState, action: POKEMON_ACTION) => {\n    switch(action.type) {\n        case actionTypes.FETCH_POKEMON_START:\n            return {\n                ...state,\n                isLoading: true,\n                selectedPokemon: null\n            };\n        case actionTypes.FETCH_POKEMON_SUCCESS:\n            return {\n                ...state,\n                fetchedPokemon: action.pokemon,\n                pokemon404: false,\n                isLoading: false\n            };\n        case actionTypes.FETCH_POKEMON_FAIL:\n            return {\n                ...state,\n                fetchedPokemon: null,\n                pokemon404: true,\n                isLoading: false\n            };\n        case actionTypes.VIEW_POKEMON_DATA:\n            return {\n                ...state,\n                selectedPokemon: action.pokemon\n            };\n        case actionTypes.ADD_POKEMON_TO_LINEUP:\n            return {\n                ...state,\n                pokemonLineup: state.pokemonLineup.concat(action.pokemon)\n            };\n        case actionTypes.REMOVE_POKEMON_FROM_LINEUP:\n            return {\n                ...state,\n                pokemonLineup: state.pokemonLineup.filter((pokemon: POKEMON) => pokemon.id !== action.pokemon.id)\n            };\n        case actionTypes.UPDATE_POKEMON_QUERY:\n            return {\n                ...state,\n                pokemonQuery: action.pokemonQuery\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/reducer';\nimport reportWebVitals from './reportWebVitals';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    //@ts-ignore\n    reducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename=\"/pokemon-league/\">\n            <App />\n        </BrowserRouter>\n    </Provider>, \n    document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}