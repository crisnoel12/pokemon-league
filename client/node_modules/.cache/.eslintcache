[{"/Users/cris/Code/pokemon-league/src/index.tsx":"1","/Users/cris/Code/pokemon-league/src/reportWebVitals.ts":"2","/Users/cris/Code/pokemon-league/src/App.tsx":"3","/Users/cris/Code/pokemon-league/src/store/reducers/index.ts":"4","/Users/cris/Code/pokemon-league/src/helpers/ApiManager.ts":"5","/Users/cris/Code/pokemon-league/src/store/reducers/UserProfile/reducer.ts":"6","/Users/cris/Code/pokemon-league/src/store/reducers/PokeAPI/reducer.ts":"7","/Users/cris/Code/pokemon-league/src/context/AuthUserContext.tsx":"8","/Users/cris/Code/pokemon-league/src/context/SnackbarContext.tsx":"9","/Users/cris/Code/pokemon-league/src/components/Hero/Hero.tsx":"10","/Users/cris/Code/pokemon-league/src/components/UI/PageNotFound/PageNotFound.tsx":"11","/Users/cris/Code/pokemon-league/src/components/Trainers/Trainers.tsx":"12","/Users/cris/Code/pokemon-league/src/components/UI/Loader/Loader.tsx":"13","/Users/cris/Code/pokemon-league/src/components/UI/SnackbarMessage/SnackbarMessage.tsx":"14","/Users/cris/Code/pokemon-league/src/components/UI/Header/Header.tsx":"15","/Users/cris/Code/pokemon-league/src/containers/Profile/Profile.tsx":"16","/Users/cris/Code/pokemon-league/src/store/actions/PokeAPI/actionTypes.ts":"17","/Users/cris/Code/pokemon-league/src/store/actions/UserProfile/actionTypes.ts":"18","/Users/cris/Code/pokemon-league/src/store/actions/index.ts":"19","/Users/cris/Code/pokemon-league/src/components/Hero/HeroStyles.tsx":"20","/Users/cris/Code/pokemon-league/src/components/UI/Loader/LoaderStyles.tsx":"21","/Users/cris/Code/pokemon-league/src/components/UI/Header/HeaderStyles.tsx":"22","/Users/cris/Code/pokemon-league/src/containers/Profile/ProfileStyles.tsx":"23","/Users/cris/Code/pokemon-league/src/components/SignUp/SignUp.tsx":"24","/Users/cris/Code/pokemon-league/src/components/Login/Login.tsx":"25","/Users/cris/Code/pokemon-league/src/components/PokemonSearch/PokemonSearch.tsx":"26","/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonData.tsx":"27","/Users/cris/Code/pokemon-league/src/components/UserCard/UserCard.tsx":"28","/Users/cris/Code/pokemon-league/src/components/PokemonLineup/PokemonLineup.tsx":"29","/Users/cris/Code/pokemon-league/src/store/actions/PokeAPI/actionCreators.ts":"30","/Users/cris/Code/pokemon-league/src/store/actions/UserProfile/actionCreators.ts":"31","/Users/cris/Code/pokemon-league/src/components/PokemonSearch/PokemonSearchStyles.tsx":"32","/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonDataStyles.tsx":"33","/Users/cris/Code/pokemon-league/src/components/UI/CloseButton/CloseButton.tsx":"34","/Users/cris/Code/pokemon-league/src/components/PokemonPortrait/PokemonPortraitStyles.tsx":"35","/Users/cris/Code/pokemon-league/src/components/PokemonPortrait/PokemonPortrait.tsx":"36","/Users/cris/Code/pokemon-league/src/components/EditProfile/EditProfile.tsx":"37","/Users/cris/Code/pokemon-league/src/components/UI/PokemonNotFound/PokemonNotFound.tsx":"38","/Users/cris/Code/pokemon-league/src/components/UI/PokemonNotFound/PokemonNotFoundStyles.tsx":"39"},{"size":1129,"mtime":1669382952575,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1631130470000,"results":"42","hashOfConfig":"41"},{"size":3182,"mtime":1632518196000,"results":"43","hashOfConfig":"41"},{"size":111,"mtime":1632185684000,"results":"44","hashOfConfig":"41"},{"size":1997,"mtime":1651255622000,"results":"45","hashOfConfig":"41"},{"size":2664,"mtime":1669598088534,"results":"46","hashOfConfig":"41"},{"size":1987,"mtime":1669379395295,"results":"47","hashOfConfig":"41"},{"size":122,"mtime":1669598339619,"results":"48","hashOfConfig":"41"},{"size":122,"mtime":1632513334000,"results":"49","hashOfConfig":"41"},{"size":689,"mtime":1632203620000,"results":"50","hashOfConfig":"41"},{"size":499,"mtime":1632263000000,"results":"51","hashOfConfig":"41"},{"size":1689,"mtime":1632348822000,"results":"52","hashOfConfig":"41"},{"size":246,"mtime":1631299078000,"results":"53","hashOfConfig":"41"},{"size":978,"mtime":1632517856000,"results":"54","hashOfConfig":"41"},{"size":1963,"mtime":1632348162000,"results":"55","hashOfConfig":"41"},{"size":7235,"mtime":1669597449174,"results":"56","hashOfConfig":"41"},{"size":335,"mtime":1669379581586,"results":"57","hashOfConfig":"41"},{"size":838,"mtime":1669381318747,"results":"58","hashOfConfig":"41"},{"size":263,"mtime":1669381514623,"results":"59","hashOfConfig":"41"},{"size":423,"mtime":1631752680000,"results":"60","hashOfConfig":"41"},{"size":394,"mtime":1631656894000,"results":"61","hashOfConfig":"41"},{"size":943,"mtime":1631299078000,"results":"62","hashOfConfig":"41"},{"size":862,"mtime":1631662928000,"results":"63","hashOfConfig":"41"},{"size":8164,"mtime":1669379104079,"results":"64","hashOfConfig":"41"},{"size":3166,"mtime":1669379086820,"results":"65","hashOfConfig":"41"},{"size":2791,"mtime":1669379725486,"results":"66","hashOfConfig":"41"},{"size":3445,"mtime":1632524810000,"results":"67","hashOfConfig":"41"},{"size":2264,"mtime":1669598035721,"results":"68","hashOfConfig":"41"},{"size":2601,"mtime":1669379146378,"results":"69","hashOfConfig":"41"},{"size":1426,"mtime":1669379623438,"results":"70","hashOfConfig":"41"},{"size":3020,"mtime":1669382005958,"results":"71","hashOfConfig":"41"},{"size":277,"mtime":1632525514000,"results":"72","hashOfConfig":"41"},{"size":401,"mtime":1631299078000,"results":"73","hashOfConfig":"41"},{"size":994,"mtime":1632196188000,"results":"74","hashOfConfig":"41"},{"size":862,"mtime":1631299078000,"results":"75","hashOfConfig":"41"},{"size":331,"mtime":1631299078000,"results":"76","hashOfConfig":"41"},{"size":6559,"mtime":1669597958252,"results":"77","hashOfConfig":"41"},{"size":765,"mtime":1632524646000,"results":"78","hashOfConfig":"41"},{"size":488,"mtime":1631657854000,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"gmfxhu",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/Users/cris/Code/pokemon-league/src/index.tsx",[],["162","163"],"/Users/cris/Code/pokemon-league/src/reportWebVitals.ts",[],"/Users/cris/Code/pokemon-league/src/App.tsx",["164"],"import { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Header from './components/UI/Header/Header';\nimport Hero from './components/Hero/Hero';\nimport Profile from './containers/Profile/Profile';\nimport PageNotFound from './components/UI/PageNotFound/PageNotFound';\nimport axios from 'axios';\nimport AuthUserContext from './context/AuthUserContext';\nimport SnackbarContext from './context/SnackbarContext';\nimport Loader from './components/UI/Loader/Loader';\nimport Trainers from './components/Trainers/Trainers';\nimport { AUTHUSER } from './types';\nimport { ApiManager } from './helpers/ApiManager';\nimport SnackbarMessage from './components/UI/SnackbarMessage/SnackbarMessage';\n\nconst useStyles = makeStyles({\n  App: {\n    textAlign: 'center',\n    height: '100%'\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n});\n\nconst App = () => {\n  // variables\n  const classes = useStyles();\n\n  // state\n  const [authUser, setAuthUser] = useState<AUTHUSER>(null);\n  const [snackbar, setSnackbar] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // useEffect\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      const { data } = await ApiManager.getCSRFToken();\n      axios.defaults.headers.post['X-CSRF-Token'] = data.csrfToken;\n      axios.defaults.headers.patch['X-CSRF-Token'] = data.csrfToken;\n    };\n    \n\n    const isLoggedIn = async () => {\n      try {\n        const response = await ApiManager.checkIsLoggedIn();\n        setAuthUser(response.data.user);\n        setIsLoading(false);\n      } catch (err: any) {\n          const { response, response: { data, data: { error }} }: any = err;\n          console.error(error);\n          if (error && error.errors && error.errors.TokenExpiredError) {\n            alert(\"Token expired. Please login again\");\n            return;\n          }\n          if (response.status === 500) {\n            setSnackbar({\n              severity: 'error',\n              message: \"Internal server error\"\n            });\n          }\n          setIsLoading(false);  \n      }\n    }\n    \n    getCsrfToken();\n    isLoggedIn();\n  }, []);\n\n  return (\n    <div className={classes.App}>\n      { isLoading ? (\n        <Loader />\n      ) : (\n        <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n          <AuthUserContext.Provider value={{ authUser, setAuthUser }}>\n            <Header />\n            <Switch>\n              <Route path=\"/profile/:id\" render={(props) => <Profile authUser={authUser} {...props} />}/>\n              <Route path=\"/trainers\" render={(props) => <Trainers authUser={authUser} {...props} />}/>\n              <Route path=\"/\" exact component={Hero}/>  \n              <Route path=\"*\" component={PageNotFound}/>\n            </Switch>\n          </AuthUserContext.Provider>\n          {snackbar && (\n            <SnackbarMessage \n              snackbar={snackbar} \n              onClose={() => setSnackbar(null)} \n            />\n          )}\n        </SnackbarContext.Provider>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/cris/Code/pokemon-league/src/store/reducers/index.ts",[],"/Users/cris/Code/pokemon-league/src/helpers/ApiManager.ts",[],"/Users/cris/Code/pokemon-league/src/store/reducers/UserProfile/reducer.ts",[],"/Users/cris/Code/pokemon-league/src/store/reducers/PokeAPI/reducer.ts",[],"/Users/cris/Code/pokemon-league/src/context/AuthUserContext.tsx",[],"/Users/cris/Code/pokemon-league/src/context/SnackbarContext.tsx",[],"/Users/cris/Code/pokemon-league/src/components/Hero/Hero.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/PageNotFound/PageNotFound.tsx",[],"/Users/cris/Code/pokemon-league/src/components/Trainers/Trainers.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/Loader/Loader.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/SnackbarMessage/SnackbarMessage.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/Header/Header.tsx",[],"/Users/cris/Code/pokemon-league/src/containers/Profile/Profile.tsx",["165"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport ProfileStyles from \"./ProfileStyles\";\nimport {\n  AUTHUSER,\n  POKEMON,\n  POKEAPI_INITIAL_STATE,\n  USER_PROFILE_INITIAL_STATE,\n  USER,\n} from \"../../types\";\nimport * as actions from \"../../store/actions/index\";\nimport PageNotFound from \"../../components/UI/PageNotFound/PageNotFound\";\nimport PokemonSearch from \"../../components/PokemonSearch/PokemonSearch\";\nimport PokemonData from \"../../components/PokemonData/PokemonData\";\nimport PokemonLineup from \"../../components/PokemonLineup/PokemonLineup\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport UserCard from \"../../components/UserCard/UserCard\";\n\ninterface PROPS extends RouteComponentProps<{ [key: string]: any }> {\n  doFetchPokemonHandler: (query: string) => any;\n  doSelectPokemonHandler: (pokemon: POKEMON) => any;\n  doDeselectPokemonHandler: () => any;\n  doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  doLoadProfileHandler: (authUser: AUTHUSER, userId: string) => void;\n  doAddPokemonToLineupHandler: (\n    authUser: AUTHUSER,\n    pokemon: POKEMON,\n    pokemonLineup: POKEMON[]\n  ) => void;\n  doRemovePokemonFromLineupHandler: (\n    authUser: AUTHUSER,\n    pokemon: POKEMON,\n    pokemonLineup: POKEMON[]\n  ) => void;\n  doUpdateProfileHandler: (\n    authUser: AUTHUSER,\n    user: USER\n  ) => void,\n  pokeAPI: POKEAPI_INITIAL_STATE;\n  userProfile: USER_PROFILE_INITIAL_STATE;\n  authUser: AUTHUSER;\n  classes: { [key: string]: any };\n}\n\nconst Profile = (props: PROPS) => {\n  const {\n    authUser,\n    classes,\n    doAddPokemonToLineupHandler,\n    doFetchPokemonHandler,\n    doRemovePokemonFromLineupHandler,\n    doSelectPokemonHandler,\n    doDeselectPokemonHandler,\n    doUpdatePokemonQueryHandler,\n    doLoadProfileHandler,\n    doUpdateProfileHandler,\n    userProfile: { user, isProfile404, isAuthProfile },\n    pokeAPI: {\n      selectedPokemon,\n      isLoading,\n      fetchedPokemon,\n      pokemon404,\n      pokemonQuery,\n    },\n    history,\n    match: {\n      params: { id },\n    },\n  } = props;\n\n  useEffect(() => {\n    if (authUser) {\n      doLoadProfileHandler(authUser, id);\n    } else {\n      history.push(\"/\");\n    }\n  }, [authUser, id]);\n\n  const fetchPokemonHandler = (event: any) => {\n    event.preventDefault();\n\n    if (pokemonQuery !== \"\") {\n      doFetchPokemonHandler(pokemonQuery);\n    } else {\n      alert(\"Please type in a pokemon name.\");\n    }\n  };\n\n  const addPokemonToLineupHandler = () => {\n    if (user && fetchedPokemon) {\n      const { pokemonLineup } = user;\n\n      const checkForDuplicate = pokemonLineup.find((p: POKEMON) => p.id === fetchedPokemon.id);\n      if (checkForDuplicate !== undefined) {\n        alert(fetchedPokemon.name + \" is already in the lineup.\");\n      } else if (fetchedPokemon && pokemonLineup.length < 6) {\n        doAddPokemonToLineupHandler(authUser, fetchedPokemon, pokemonLineup);\n      } else {\n        alert(\"Pokemon lineup spots are filled.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      {isProfile404 ? (\n        <PageNotFound />\n      ) : user ? (\n        <div style={{ padding: \"30px\" }}>\n          <Grid container spacing={6}>\n            <Grid item xs={6}>\n              <UserCard \n                user={user} \n                isAuthProfile={isAuthProfile} \n                doUpdateProfile={(user: USER) => doUpdateProfileHandler(authUser, user)}\n              />\n            </Grid>\n            {isAuthProfile && \n            <Grid item xs={6}>\n              <form\n                className={classes.Pokemon_Search_Form}\n                onSubmit={fetchPokemonHandler}\n              >\n                <input\n                  className={classes.Pokemon_Searchbox}\n                  type=\"text\"\n                  name=\"query\"\n                  placeholder=\"Search Pokemon (e.g. Pikachu and press enter)\"\n                  value={pokemonQuery}\n                  onChange={doUpdatePokemonQueryHandler}\n                />\n              </form>\n              <PokemonSearch\n                isLoading={isLoading}\n                fetchedPokemon={fetchedPokemon}\n                pokemon404={pokemon404}\n                pokemonQuery={pokemonQuery}\n                clearPokemonQuery={doUpdatePokemonQueryHandler}\n                doSelectPokemon={() =>\n                  fetchedPokemon && doSelectPokemonHandler(fetchedPokemon)\n                }\n                doAddPokemon={addPokemonToLineupHandler}\n              />\n            </Grid>}\n            <Grid item xs={6}>\n              <Typography\n                variant={\"h4\"}\n                className={classes.Pokemon_Lineup_Heading}\n              >\n                Pokemon Lineup\n              </Typography>\n              <PokemonLineup\n                isAuthProfile={isAuthProfile}\n                pokemonLineup={user.pokemonLineup}\n                doRemovePokemon={(pokemon: POKEMON) =>\n                  doRemovePokemonFromLineupHandler(\n                    authUser,\n                    pokemon,\n                    user.pokemonLineup\n\t\t\t\t\t\t\t\t)}\n              />\n            </Grid>\n          </Grid>\n          <PokemonData\n            selectedPokemon={selectedPokemon}\n            deselectPokemon={doDeselectPokemonHandler}\n          />\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    pokeAPI: {\n      fetchedPokemon: state.pokeAPI.fetchedPokemon,\n      pokemon404: state.pokeAPI.pokemon404,\n      selectedPokemon: state.pokeAPI.selectedPokemon,\n      isLoading: state.pokeAPI.isLoading,\n      pokemonQuery: state.pokeAPI.pokemonQuery,\n    },\n    userProfile: {\n      user: state.userProfile.user,\n      isAuthProfile: state.userProfile.isAuthProfile,\n      isProfile404: state.userProfile.isProfile404,\n      isLoading: state.userProfile.isLoading,\n      error: state.userProfile.error,\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    doFetchPokemonHandler: (query: string) => dispatch(actions.fetchPokemon(query)),\n    doSelectPokemonHandler: (pokemon: POKEMON) => dispatch(actions.selectPokemon(pokemon)),\n    doDeselectPokemonHandler: () => dispatch(actions.deselectPokemon()),\n    doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => dispatch(actions.updatePokemonQuery(e)),\n\n    doLoadProfileHandler: (authUser: AUTHUSER, userId: string) => dispatch(actions.loadProfile(authUser, userId)),\n    doAddPokemonToLineupHandler: (\n      authUser: AUTHUSER,\n      pokemon: POKEMON,\n      pokemonLineup: POKEMON[]\n    ) => dispatch(actions.addPokemonToLineup(authUser, pokemon, pokemonLineup)),\n    doRemovePokemonFromLineupHandler: (\n      authUser: AUTHUSER,\n      pokemon: POKEMON,\n      pokemonLineup: POKEMON[]\n    ) => dispatch(actions.removePokemonFromLineup(authUser, pokemon, pokemonLineup)),\n    doUpdateProfileHandler: (\n      authUser: AUTHUSER,\n      user: USER\n    ) => dispatch(actions.updateProfile(authUser, user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(ProfileStyles)(Profile));\n","/Users/cris/Code/pokemon-league/src/store/actions/PokeAPI/actionTypes.ts",[],"/Users/cris/Code/pokemon-league/src/store/actions/UserProfile/actionTypes.ts",[],"/Users/cris/Code/pokemon-league/src/store/actions/index.ts",[],"/Users/cris/Code/pokemon-league/src/components/Hero/HeroStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/Loader/LoaderStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/Header/HeaderStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/containers/Profile/ProfileStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/components/SignUp/SignUp.tsx",[],"/Users/cris/Code/pokemon-league/src/components/Login/Login.tsx",[],"/Users/cris/Code/pokemon-league/src/components/PokemonSearch/PokemonSearch.tsx",[],"/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonData.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UserCard/UserCard.tsx",[],"/Users/cris/Code/pokemon-league/src/components/PokemonLineup/PokemonLineup.tsx",[],"/Users/cris/Code/pokemon-league/src/store/actions/PokeAPI/actionCreators.ts",[],"/Users/cris/Code/pokemon-league/src/store/actions/UserProfile/actionCreators.ts",[],"/Users/cris/Code/pokemon-league/src/components/PokemonSearch/PokemonSearchStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonDataStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/CloseButton/CloseButton.tsx",[],"/Users/cris/Code/pokemon-league/src/components/PokemonPortrait/PokemonPortraitStyles.tsx",[],"/Users/cris/Code/pokemon-league/src/components/PokemonPortrait/PokemonPortrait.tsx",[],"/Users/cris/Code/pokemon-league/src/components/EditProfile/EditProfile.tsx",["166"],"import { Button, Grid, makeStyles, Modal, Paper, TextField, Theme, Typography } from '@material-ui/core'\nimport { ChangeEvent, useContext, useEffect, useState } from 'react';\nimport AuthUserContext from '../../context/AuthUserContext';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport { USER } from '../../types';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport {AUTHUSERCONTEXT} from '../../types/index';\nimport SnackbarContext from '../../context/SnackbarContext';\nimport { useSelector } from 'react-redux';\n\ninterface PROPS {\n  doUpdateProfile: (user: USER) => void,\n  close: () => void\n}\n\nconst initUserData: Partial<USER> = {\n  username: '',\n  first_name: '',\n  middle_name: '',\n  last_name: '',\n  email: '',\n  gender: '',\n  password: '',\n  confirm_password: ''\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst EditProfile = ({ close, doUpdateProfile }: PROPS) => {\n  const classes = useStyles();\n\n  const user = useSelector((state: any) => state.userProfile.user);\n  const { authUser } = useContext(AuthUserContext) as AUTHUSERCONTEXT;\n  const { setSnackbar } = useContext(SnackbarContext);\n\n  // state\n  const [userData, setUserData] = useState<Partial<USER>>(initUserData);\n  const [errors, setErrors] = useState<Partial<USER>>(initUserData);\n\n  // hooks\n  useEffect(() => {\n    const fillInUserData = {\n      ...userData,\n      ...user\n    }\n    setUserData(fillInUserData);\n  },[user]);\n\n  // functions\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const isSubmitDisabled = () => {\n    switch (true) {\n      case user.username !== userData.username:\n        return false;\n      case user.email !== userData.email:\n        return false;\n      case user.first_name !== userData.first_name:\n        return false;\n      case user.middle_name !== userData.middle_name:\n        return false;\n      case user.last_name !== userData.last_name:\n        return false;\n      case userData.password !== \"\" && !passwordsDoNotMatch:\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  const passwordsDoNotMatch = userData.confirm_password !== userData.password;\n\n  const onSubmitHandler = async (e: any) => {\n    e.preventDefault();\n    try {\n      const response = await ApiManager.updateProfile(authUser, userData);\n      setSnackbar({message: response.data.message})\n      doUpdateProfile(response.data);\n    } catch(error: any) {\n      console.error(error);\n      if(error.response.data.errors) {\n        setErrors({...errors, ...error.response.data.errors});\n      }\n    }\n  }\n  return (\n    <Modal\n      open\n      onClose={close}\n    >\n      <form onSubmit={onSubmitHandler}>\n        <Grid container component={Paper} spacing={3} className={classes.root}>\n          <Grid item xs={12}>\n            <Typography variant={\"h3\"}>Edit Profile</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              autoFocus\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"Username\"\n              value={userData.username}\n              fullWidth\n              name=\"username\"\n              onChange={onChangeHandler} \n              error={errors.username !== \"\"}\n              helperText={errors.username}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"email\" \n              placeholder=\"Email\" \n              value={userData.email}\n              fullWidth \n              name=\"email\"\n              onChange={onChangeHandler}\n              error={errors.email !== \"\"}\n              helperText={errors.email}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"First Name\" \n              value={userData.first_name}\n              fullWidth \n              name=\"first_name\"\n              onChange={onChangeHandler}\n              error={errors.first_name !== \"\"}\n              helperText={errors.first_name}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"Middle Name\"\n              value={userData.middle_name}\n              fullWidth \n              name=\"middle_name\"\n              onChange={onChangeHandler}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"Last Name\" \n              value={userData.last_name}\n              fullWidth\n              name=\"last_name\"\n              onChange={onChangeHandler} \n              error={errors.last_name !== \"\"}\n              helperText={errors.last_name}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"password\"  \n              placeholder=\"Password\" \n              value={userData.password}\n              fullWidth \n              name=\"password\"\n              onChange={onChangeHandler}\n              error={errors.password !== \"\"}\n              helperText={errors.password}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n              variant={\"outlined\"}\n              type=\"password\"  \n              placeholder=\"Confirm Password\" \n              value={userData.confirm_password}\n              fullWidth \n              name=\"confirm_password\"\n              onChange={onChangeHandler}\n              error={errors.confirm_password !== \"\" || passwordsDoNotMatch}\n              helperText={errors.confirm_password ? errors.confirm_password : passwordsDoNotMatch ? 'Passwords do not match' : null}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button \n              type={\"submit\"}\n              color={\"primary\"} \n              fullWidth \n              variant={\"contained\"} \n              onClick={onSubmitHandler}\n              disabled={isSubmitDisabled()}\n            >\n              Update\n            </Button>\n          </Grid>\n          <CloseButton onClose={close} />\n        </Grid>\n      </form>\n    </Modal>\n  )\n}\n\nexport default EditProfile;\n","/Users/cris/Code/pokemon-league/src/components/UI/PokemonNotFound/PokemonNotFound.tsx",[],"/Users/cris/Code/pokemon-league/src/components/UI/PokemonNotFound/PokemonNotFoundStyles.tsx",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":55,"column":41,"nodeType":"173","messageId":"174","endLine":55,"endColumn":45},{"ruleId":"175","severity":1,"message":"176","line":81,"column":6,"nodeType":"177","endLine":81,"endColumn":20,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":57,"column":5,"nodeType":"177","endLine":57,"endColumn":11,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'doLoadProfileHandler' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [authUser, doLoadProfileHandler, history, id]",{"range":"189","text":"190"},"Update the dependencies array to be: [user, userData]",{"range":"191","text":"192"},[2384,2398],"[authUser, doLoadProfileHandler, history, id]",[1615,1621],"[user, userData]"]