{"ast":null,"code":"var _jsxFileName = \"/Users/cris/Code/pokemon-league/src/components/EditProfile/EditProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, makeStyles, Modal, Paper, TextField, Typography } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react'; // import { RouteComponentProps } from 'react-router';\n// import { withRouter } from 'react-router-dom';\n\nimport AuthUserContext from '../../context/AuthUserContext';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport SnackbarContext from '../../context/SnackbarContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initUserData = {\n  username: '',\n  first_name: '',\n  middle_name: '',\n  last_name: '',\n  email: '',\n  gender: '',\n  password: '',\n  confirm_password: ''\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst EditProfile = ({\n  close,\n  user,\n  doUpdateProfile\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    authUser\n  } = useContext(AuthUserContext);\n  const {\n    setSnackbar\n  } = useContext(SnackbarContext); // state\n\n  const [userData, setUserData] = useState(initUserData);\n  const [errors, setErrors] = useState(initUserData); // hooks\n\n  useEffect(() => {\n    const fillInUserData = { ...userData,\n      ...user\n    };\n    setUserData(fillInUserData);\n  }, [user]); // functions\n\n  const onChangeHandler = e => {\n    setUserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isSubmitDisabled = () => {\n    switch (true) {\n      case user.username !== userData.username:\n        return false;\n\n      case user.email !== userData.email:\n        return false;\n\n      case user.first_name !== userData.first_name:\n        return false;\n\n      case user.middle_name !== userData.middle_name:\n        return false;\n\n      case user.last_name !== userData.last_name:\n        return false;\n\n      case userData.password !== \"\" && !passwordsDoNotMatch:\n        return false;\n\n      default:\n        return true;\n    }\n  };\n\n  const passwordsDoNotMatch = userData.confirm_password !== userData.password;\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await ApiManager.updateProfile(authUser, userData);\n      setSnackbar({\n        message: response.data.message\n      });\n      doUpdateProfile(response.data);\n    } catch (error) {\n      console.error(error);\n\n      if (error.response.data.errors) {\n        setErrors({ ...errors,\n          ...error.response.data.errors\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: true,\n      onClose: close,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          component: Paper,\n          spacing: 3,\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              variant: \"outlined\",\n              type: \"text\",\n              placeholder: \"Username\",\n              value: userData.username,\n              fullWidth: true,\n              name: \"username\",\n              onChange: onChangeHandler,\n              error: errors.username !== \"\",\n              helperText: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              type: \"email\",\n              placeholder: \"Email\",\n              value: userData.email,\n              fullWidth: true,\n              name: \"email\",\n              onChange: onChangeHandler,\n              error: errors.email !== \"\",\n              helperText: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              type: \"text\",\n              placeholder: \"First Name\",\n              value: userData.first_name,\n              fullWidth: true,\n              name: \"first_name\",\n              onChange: onChangeHandler,\n              error: errors.first_name !== \"\",\n              helperText: errors.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              type: \"text\",\n              placeholder: \"Middle Name\",\n              value: userData.middle_name,\n              fullWidth: true,\n              name: \"middle_name\",\n              onChange: onChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              type: \"text\",\n              placeholder: \"Last Name\",\n              value: userData.last_name,\n              fullWidth: true,\n              name: \"last_name\",\n              onChange: onChangeHandler,\n              error: errors.last_name !== \"\",\n              helperText: errors.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              type: \"password\",\n              placeholder: \"Password\",\n              value: userData.password,\n              fullWidth: true,\n              name: \"password\",\n              onChange: onChangeHandler,\n              error: errors.password !== \"\",\n              helperText: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: userData.confirm_password,\n              fullWidth: true,\n              name: \"confirm_password\",\n              onChange: onChangeHandler,\n              error: errors.confirm_password !== \"\" || passwordsDoNotMatch,\n              helperText: errors.confirm_password ? errors.confirm_password : passwordsDoNotMatch ? 'Passwords do not match' : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              fullWidth: true,\n              variant: \"contained\",\n              onClick: onSubmitHandler,\n              disabled: isSubmitDisabled(),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClose: close\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfile, \"vlEIkicAcW1Cw7PDfyXKULBTgYo=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditProfile;\nexport default EditProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/EditProfile/EditProfile.tsx"],"names":["Button","Grid","makeStyles","Modal","Paper","TextField","Typography","useContext","useEffect","useState","AuthUserContext","ApiManager","CloseButton","SnackbarContext","initUserData","username","first_name","middle_name","last_name","email","gender","password","confirm_password","useStyles","theme","root","position","top","left","transform","padding","spacing","width","maxWidth","EditProfile","close","user","doUpdateProfile","classes","authUser","setSnackbar","userData","setUserData","errors","setErrors","fillInUserData","onChangeHandler","e","target","name","value","isSubmitDisabled","passwordsDoNotMatch","onSubmitHandler","preventDefault","response","updateProfile","message","data","error","console"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,SAAjD,EAAmEC,UAAnE,QAAqF,mBAArF;AACA,SAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D,C,CACA;AACA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;;AAQA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,QAAQ,EAAE,EADwB;AAElCC,EAAAA,UAAU,EAAE,EAFsB;AAGlCC,EAAAA,WAAW,EAAE,EAHqB;AAIlCC,EAAAA,SAAS,EAAE,EAJuB;AAKlCC,EAAAA,KAAK,EAAE,EAL2B;AAMlCC,EAAAA,MAAM,EAAE,EAN0B;AAOlCC,EAAAA,QAAQ,EAAE,EAPwB;AAQlCC,EAAAA,gBAAgB,EAAE;AARgB,CAApC;AAWA,MAAMC,SAAS,GAAGrB,UAAU,CAAEsB,KAAD,KAAmB;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,GAAG,EAAE,KAFD;AAGJC,IAAAA,IAAI,EAAE,KAHF;AAIJC,IAAAA,SAAS,EAAE,uBAJP;AAKJC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CALL;AAMJC,IAAAA,KAAK,EAAE,KANH;AAOJC,IAAAA,QAAQ,EAAE;AAPN;AADwC,CAAnB,CAAD,CAA5B;;AAYA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAA6C;AAAA;;AAC/D,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAehC,UAAU,CAACG,eAAD,CAA/B;AACA,QAAM;AAAE8B,IAAAA;AAAF,MAAkBjC,UAAU,CAACM,eAAD,CAAlC,CAH+D,CAK/D;;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAgBK,YAAhB,CAAxC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAgBK,YAAhB,CAApC,CAP+D,CAS/D;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqC,cAAc,GAAG,EACrB,GAAGJ,QADkB;AAErB,SAAGL;AAFkB,KAAvB;AAIAM,IAAAA,WAAW,CAACG,cAAD,CAAX;AACD,GANQ,EAMP,CAACT,IAAD,CANO,CAAT,CAV+D,CAkB/D;;AACA,QAAMU,eAAe,GAAIC,CAAD,IAA4C;AAClEL,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFhB,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,YAAQ,IAAR;AACE,WAAKf,IAAI,CAACrB,QAAL,KAAkB0B,QAAQ,CAAC1B,QAAhC;AACE,eAAO,KAAP;;AACF,WAAKqB,IAAI,CAACjB,KAAL,KAAesB,QAAQ,CAACtB,KAA7B;AACE,eAAO,KAAP;;AACF,WAAKiB,IAAI,CAACpB,UAAL,KAAoByB,QAAQ,CAACzB,UAAlC;AACE,eAAO,KAAP;;AACF,WAAKoB,IAAI,CAACnB,WAAL,KAAqBwB,QAAQ,CAACxB,WAAnC;AACE,eAAO,KAAP;;AACF,WAAKmB,IAAI,CAAClB,SAAL,KAAmBuB,QAAQ,CAACvB,SAAjC;AACE,eAAO,KAAP;;AACF,WAAKuB,QAAQ,CAACpB,QAAT,KAAsB,EAAtB,IAA4B,CAAC+B,mBAAlC;AACE,eAAO,KAAP;;AACF;AACE,eAAO,IAAP;AAdJ;AAgBD,GAjBD;;AAmBA,QAAMA,mBAAmB,GAAGX,QAAQ,CAACnB,gBAAT,KAA8BmB,QAAQ,CAACpB,QAAnE;;AAEA,QAAMgC,eAAe,GAAG,MAAON,CAAP,IAAkB;AACxCA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM5C,UAAU,CAAC6C,aAAX,CAAyBjB,QAAzB,EAAmCE,QAAnC,CAAvB;AACAD,MAAAA,WAAW,CAAC;AAACiB,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcD;AAAxB,OAAD,CAAX;AACApB,MAAAA,eAAe,CAACkB,QAAQ,CAACG,IAAV,CAAf;AACD,KAJD,CAIE,OAAMC,KAAN,EAAkB;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;;AACA,UAAGA,KAAK,CAACJ,QAAN,CAAeG,IAAf,CAAoBf,MAAvB,EAA+B;AAC7BC,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,aAAGgB,KAAK,CAACJ,QAAN,CAAeG,IAAf,CAAoBf;AAAnC,SAAD,CAAT;AACD;AACF;AACF,GAZD;;AAaA,sBACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,KAAD;AACA,MAAA,IAAI,MADJ;AAEA,MAAA,OAAO,EAAER,KAFT;AAAA,6BAIA;AAAM,QAAA,QAAQ,EAAEkB,eAAhB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAEjD,KAA3B;AAAkC,UAAA,OAAO,EAAE,CAA3C;AAA8C,UAAA,SAAS,EAAEkC,OAAO,CAACb,IAAjE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,OAAO,EAAE,UAFX;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC,UAJd;AAKE,cAAA,KAAK,EAAEgB,QAAQ,CAAC1B,QALlB;AAME,cAAA,SAAS,MANX;AAOE,cAAA,IAAI,EAAC,UAPP;AAQE,cAAA,QAAQ,EAAE+B,eARZ;AASE,cAAA,KAAK,EAAEH,MAAM,CAAC5B,QAAP,KAAoB,EAT7B;AAUE,cAAA,UAAU,EAAE4B,MAAM,CAAC5B;AAVrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAkBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,UADX;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,WAAW,EAAC,OAHd;AAIE,cAAA,KAAK,EAAE0B,QAAQ,CAACtB,KAJlB;AAKE,cAAA,SAAS,MALX;AAME,cAAA,IAAI,EAAC,OANP;AAOE,cAAA,QAAQ,EAAE2B,eAPZ;AAQE,cAAA,KAAK,EAAEH,MAAM,CAACxB,KAAP,KAAiB,EAR1B;AASE,cAAA,UAAU,EAAEwB,MAAM,CAACxB;AATrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA+BE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,UADX;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC,YAHd;AAIE,cAAA,KAAK,EAAEsB,QAAQ,CAACzB,UAJlB;AAKE,cAAA,SAAS,MALX;AAME,cAAA,IAAI,EAAC,YANP;AAOE,cAAA,QAAQ,EAAE8B,eAPZ;AAQE,cAAA,KAAK,EAAEH,MAAM,CAAC3B,UAAP,KAAsB,EAR/B;AASE,cAAA,UAAU,EAAE2B,MAAM,CAAC3B;AATrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA/BF,eA4CE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,UADX;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC,aAHd;AAIE,cAAA,KAAK,EAAEyB,QAAQ,CAACxB,WAJlB;AAKE,cAAA,SAAS,MALX;AAME,cAAA,IAAI,EAAC,aANP;AAOE,cAAA,QAAQ,EAAE6B;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5CF,eAuDE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,UADX;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,WAAW,EAAC,WAHd;AAIE,cAAA,KAAK,EAAEL,QAAQ,CAACvB,SAJlB;AAKE,cAAA,SAAS,MALX;AAME,cAAA,IAAI,EAAC,WANP;AAOE,cAAA,QAAQ,EAAE4B,eAPZ;AAQE,cAAA,KAAK,EAAEH,MAAM,CAACzB,SAAP,KAAqB,EAR9B;AASE,cAAA,UAAU,EAAEyB,MAAM,CAACzB;AATrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvDF,eAoEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,UADX;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,WAAW,EAAC,UAHd;AAIE,cAAA,KAAK,EAAEuB,QAAQ,CAACpB,QAJlB;AAKE,cAAA,SAAS,MALX;AAME,cAAA,IAAI,EAAC,UANP;AAOE,cAAA,QAAQ,EAAEyB,eAPZ;AAQE,cAAA,KAAK,EAAEH,MAAM,CAACtB,QAAP,KAAoB,EAR7B;AASE,cAAA,UAAU,EAAEsB,MAAM,CAACtB;AATrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBApEF,eAiFE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,UADX;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,WAAW,EAAC,kBAHd;AAIE,cAAA,KAAK,EAAEoB,QAAQ,CAACnB,gBAJlB;AAKE,cAAA,SAAS,MALX;AAME,cAAA,IAAI,EAAC,kBANP;AAOE,cAAA,QAAQ,EAAEwB,eAPZ;AAQE,cAAA,KAAK,EAAEH,MAAM,CAACrB,gBAAP,KAA4B,EAA5B,IAAkC8B,mBAR3C;AASE,cAAA,UAAU,EAAET,MAAM,CAACrB,gBAAP,GAA0BqB,MAAM,CAACrB,gBAAjC,GAAoD8B,mBAAmB,GAAG,wBAAH,GAA8B;AATnH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjFF,eA8FE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAE,QADR;AAEE,cAAA,KAAK,EAAE,SAFT;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,OAAO,EAAE,WAJX;AAKE,cAAA,OAAO,EAAEC,eALX;AAME,cAAA,QAAQ,EAAEF,gBAAgB,EAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9FF,eA0GE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA,kBA1GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuHD,CAnLD;;GAAMD,W;UACYX,S;;;KADZW,W;AAqLN,eAAeA,WAAf","sourcesContent":["import { Button, Grid, makeStyles, Modal, Paper, TextField, Theme, Typography } from '@material-ui/core'\nimport { ChangeEvent, useContext, useEffect, useState } from 'react';\n// import { RouteComponentProps } from 'react-router';\n// import { withRouter } from 'react-router-dom';\nimport AuthUserContext from '../../context/AuthUserContext';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport { USER } from '../../types';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport {AUTHUSERCONTEXT} from '../../types/index';\nimport SnackbarContext from '../../context/SnackbarContext';\n\ninterface PROPS {\n  user: USER,\n  doUpdateProfile: (user: USER) => void,\n  close: () => void\n}\n\nconst initUserData: Partial<USER> = {\n  username: '',\n  first_name: '',\n  middle_name: '',\n  last_name: '',\n  email: '',\n  gender: '',\n  password: '',\n  confirm_password: ''\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst EditProfile = ({ close, user, doUpdateProfile }: PROPS) => {\n  const classes = useStyles();\n  const { authUser } = useContext(AuthUserContext) as AUTHUSERCONTEXT;\n  const { setSnackbar } = useContext(SnackbarContext);\n\n  // state\n  const [userData, setUserData] = useState<Partial<USER>>(initUserData);\n  const [errors, setErrors] = useState<Partial<USER>>(initUserData);\n\n  // hooks\n  useEffect(() => {\n    const fillInUserData = {\n      ...userData,\n      ...user\n    }\n    setUserData(fillInUserData);\n  },[user]);\n\n  // functions\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const isSubmitDisabled = () => {\n    switch (true) {\n      case user.username !== userData.username:\n        return false;\n      case user.email !== userData.email:\n        return false;\n      case user.first_name !== userData.first_name:\n        return false;\n      case user.middle_name !== userData.middle_name:\n        return false;\n      case user.last_name !== userData.last_name:\n        return false;\n      case userData.password !== \"\" && !passwordsDoNotMatch:\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  const passwordsDoNotMatch = userData.confirm_password !== userData.password;\n\n  const onSubmitHandler = async (e: any) => {\n    e.preventDefault();\n    try {\n      const response = await ApiManager.updateProfile(authUser, userData);\n      setSnackbar({message: response.data.message})\n      doUpdateProfile(response.data);\n    } catch(error: any) {\n      console.error(error);\n      if(error.response.data.errors) {\n        setErrors({...errors, ...error.response.data.errors});\n      }\n    }\n  }\n  return (\n    <React.StrictMode>\n      <Modal\n      open\n      onClose={close}\n    >\n      <form onSubmit={onSubmitHandler}>\n        <Grid container component={Paper} spacing={3} className={classes.root}>\n          <Grid item xs={12}>\n            <Typography variant={\"h3\"}>Edit Profile</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              autoFocus\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"Username\"\n              value={userData.username}\n              fullWidth\n              name=\"username\"\n              onChange={onChangeHandler} \n              error={errors.username !== \"\"}\n              helperText={errors.username}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"email\" \n              placeholder=\"Email\" \n              value={userData.email}\n              fullWidth \n              name=\"email\"\n              onChange={onChangeHandler}\n              error={errors.email !== \"\"}\n              helperText={errors.email}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"First Name\" \n              value={userData.first_name}\n              fullWidth \n              name=\"first_name\"\n              onChange={onChangeHandler}\n              error={errors.first_name !== \"\"}\n              helperText={errors.first_name}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"Middle Name\"\n              value={userData.middle_name}\n              fullWidth \n              name=\"middle_name\"\n              onChange={onChangeHandler}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"text\" \n              placeholder=\"Last Name\" \n              value={userData.last_name}\n              fullWidth\n              name=\"last_name\"\n              onChange={onChangeHandler} \n              error={errors.last_name !== \"\"}\n              helperText={errors.last_name}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant={\"outlined\"} \n              type=\"password\"  \n              placeholder=\"Password\" \n              value={userData.password}\n              fullWidth \n              name=\"password\"\n              onChange={onChangeHandler}\n              error={errors.password !== \"\"}\n              helperText={errors.password}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField \n              variant={\"outlined\"}\n              type=\"password\"  \n              placeholder=\"Confirm Password\" \n              value={userData.confirm_password}\n              fullWidth \n              name=\"confirm_password\"\n              onChange={onChangeHandler}\n              error={errors.confirm_password !== \"\" || passwordsDoNotMatch}\n              helperText={errors.confirm_password ? errors.confirm_password : passwordsDoNotMatch ? 'Passwords do not match' : null}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button \n              type={\"submit\"}\n              color={\"primary\"} \n              fullWidth \n              variant={\"contained\"} \n              onClick={onSubmitHandler}\n              disabled={isSubmitDisabled()}\n            >\n              Update\n            </Button>\n          </Grid>\n          <CloseButton onClose={close} />\n        </Grid>\n      </form>\n    </Modal>\n    </React.StrictMode>\n  )\n}\n\nexport default EditProfile;\n"]},"metadata":{},"sourceType":"module"}