{"ast":null,"code":"var _jsxFileName = \"/Users/cris/Code/pokemon-league/src/containers/Profile/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport ProfileStyles from \"./ProfileStyles\";\nimport * as actions from \"../../store/actions/index\";\nimport PageNotFound from \"../../components/UI/PageNotFound/PageNotFound\";\nimport PokemonSearch from \"../../components/PokemonSearch/PokemonSearch\";\nimport PokemonData from \"../../components/PokemonData/PokemonData\";\nimport PokemonLineup from \"../../components/PokemonLineup/PokemonLineup\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport UserCard from \"../../components/UserCard/UserCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const {\n    authUser,\n    classes,\n    doAddPokemonToLineupHandler,\n    doFetchPokemonHandler,\n    doRemovePokemonFromLineupHandler,\n    doSelectPokemonHandler,\n    doDeselectPokemonHandler,\n    doUpdatePokemonQueryHandler,\n    doLoadProfileHandler,\n    userProfile: {\n      user,\n      isProfile404,\n      isAuthProfile\n    },\n    pokeAPI: {\n      selectedPokemon,\n      isLoading,\n      fetchedPokemon,\n      pokemon404,\n      pokemonQuery\n    },\n    history,\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  useEffect(() => {\n    if (authUser) {\n      doLoadProfileHandler(authUser, id);\n    } else {\n      history.push(\"/\");\n    }\n  }, [authUser, id]);\n\n  const fetchPokemonHandler = event => {\n    event.preventDefault();\n\n    if (pokemonQuery !== \"\") {\n      doFetchPokemonHandler(pokemonQuery);\n    } else {\n      alert(\"Please type in a pokemon name.\");\n    }\n  };\n\n  const addPokemonToLineupHandler = () => {\n    if (user && fetchedPokemon) {\n      const {\n        pokemonLineup\n      } = user;\n      const checkForDuplicate = pokemonLineup.find(p => p.id === fetchedPokemon.id);\n\n      if (checkForDuplicate !== undefined) {\n        alert(fetchedPokemon.name + \" is already in the lineup.\");\n      } else if (fetchedPokemon && pokemonLineup.length < 6) {\n        doAddPokemonToLineupHandler(authUser, fetchedPokemon, pokemonLineup);\n      } else {\n        alert(\"Pokemon lineup spots are filled.\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isProfile404 ? /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user,\n            isAuthProfile: isAuthProfile,\n            doUpdateProfile: doUpdateProfileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), isAuthProfile && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.Pokemon_Search_Form,\n            onSubmit: fetchPokemonHandler,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes.Pokemon_Searchbox,\n              type: \"text\",\n              name: \"query\",\n              placeholder: \"Search Pokemon (e.g. Pikachu and press enter)\",\n              value: pokemonQuery,\n              onChange: doUpdatePokemonQueryHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonSearch, {\n            isLoading: isLoading,\n            fetchedPokemon: fetchedPokemon,\n            pokemon404: pokemon404,\n            pokemonQuery: pokemonQuery,\n            clearPokemonQuery: doUpdatePokemonQueryHandler,\n            doSelectPokemon: () => fetchedPokemon && doSelectPokemonHandler(fetchedPokemon),\n            doAddPokemon: addPokemonToLineupHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.Pokemon_Lineup_Heading,\n            children: \"Pokemon Lineup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonLineup, {\n            isAuthProfile: isAuthProfile,\n            pokemonLineup: user.pokemonLineup,\n            doRemovePokemon: pokemon => doRemovePokemonFromLineupHandler(authUser, pokemon, user.pokemonLineup)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PokemonData, {\n        selectedPokemon: selectedPokemon,\n        deselectPokemon: doDeselectPokemonHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\n\nconst mapStateToProps = state => {\n  return {\n    pokeAPI: {\n      fetchedPokemon: state.pokeAPI.fetchedPokemon,\n      pokemon404: state.pokeAPI.pokemon404,\n      selectedPokemon: state.pokeAPI.selectedPokemon,\n      isLoading: state.pokeAPI.isLoading,\n      pokemonQuery: state.pokeAPI.pokemonQuery\n    },\n    userProfile: {\n      user: state.userProfile.user,\n      isAuthProfile: state.userProfile.isAuthProfile,\n      isProfile404: state.userProfile.isProfile404,\n      isLoading: state.userProfile.isLoading,\n      error: state.userProfile.error\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    doFetchPokemonHandler: query => dispatch(actions.fetchPokemon(query)),\n    doSelectPokemonHandler: pokemon => dispatch(actions.selectPokemon(pokemon)),\n    doDeselectPokemonHandler: () => dispatch(actions.deselectPokemon()),\n    doUpdatePokemonQueryHandler: e => dispatch(actions.updatePokemonQuery(e)),\n    doLoadProfileHandler: (authUser, userId) => dispatch(actions.loadProfile(authUser, userId)),\n    doAddPokemonToLineupHandler: (authUser, pokemon, pokemonLineup) => dispatch(actions.addPokemonToLineup(authUser, pokemon, pokemonLineup)),\n    doRemovePokemonFromLineupHandler: (authUser, pokemon, pokemonLineup) => dispatch(actions.removePokemonFromLineup(authUser, pokemon, pokemonLineup))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(ProfileStyles)(Profile));\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/containers/Profile/Profile.tsx"],"names":["React","useEffect","connect","Grid","Typography","withStyles","ProfileStyles","actions","PageNotFound","PokemonSearch","PokemonData","PokemonLineup","Loader","UserCard","Profile","props","authUser","classes","doAddPokemonToLineupHandler","doFetchPokemonHandler","doRemovePokemonFromLineupHandler","doSelectPokemonHandler","doDeselectPokemonHandler","doUpdatePokemonQueryHandler","doLoadProfileHandler","userProfile","user","isProfile404","isAuthProfile","pokeAPI","selectedPokemon","isLoading","fetchedPokemon","pokemon404","pokemonQuery","history","match","params","id","push","fetchPokemonHandler","event","preventDefault","alert","addPokemonToLineupHandler","pokemonLineup","checkForDuplicate","find","p","undefined","name","length","padding","doUpdateProfileHandler","Pokemon_Search_Form","Pokemon_Searchbox","Pokemon_Lineup_Heading","pokemon","mapStateToProps","state","error","mapDispatchToProps","dispatch","query","fetchPokemon","selectPokemon","deselectPokemon","e","updatePokemonQuery","userId","loadProfile","addPokemonToLineup","removePokemonFromLineup"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport ProfileStyles from \"./ProfileStyles\";\nimport {\n  AUTHUSER,\n  POKEMON,\n  POKEAPI_INITIAL_STATE,\n  USER_PROFILE_INITIAL_STATE,\n} from \"../../types\";\nimport * as actions from \"../../store/actions/index\";\nimport PageNotFound from \"../../components/UI/PageNotFound/PageNotFound\";\nimport PokemonSearch from \"../../components/PokemonSearch/PokemonSearch\";\nimport PokemonData from \"../../components/PokemonData/PokemonData\";\nimport PokemonLineup from \"../../components/PokemonLineup/PokemonLineup\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport UserCard from \"../../components/UserCard/UserCard\";\n\ninterface PROPS extends RouteComponentProps<{ [key: string]: any }> {\n  doFetchPokemonHandler: (query: string) => any;\n  doSelectPokemonHandler: (pokemon: POKEMON) => any;\n  doDeselectPokemonHandler: () => any;\n  doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  doLoadProfileHandler: (authUser: AUTHUSER, userId: string) => void;\n  doAddPokemonToLineupHandler: (\n    authUser: AUTHUSER,\n    pokemon: POKEMON,\n    pokemonLineup: POKEMON[]\n  ) => void;\n  doRemovePokemonFromLineupHandler: (\n    authUser: AUTHUSER,\n    pokemon: POKEMON,\n    pokemonLineup: POKEMON[]\n  ) => void;\n  pokeAPI: POKEAPI_INITIAL_STATE;\n  userProfile: USER_PROFILE_INITIAL_STATE;\n  authUser: AUTHUSER;\n  classes: { [key: string]: any };\n}\n\nconst Profile = (props: PROPS) => {\n  const {\n    authUser,\n    classes,\n    doAddPokemonToLineupHandler,\n    doFetchPokemonHandler,\n    doRemovePokemonFromLineupHandler,\n    doSelectPokemonHandler,\n    doDeselectPokemonHandler,\n    doUpdatePokemonQueryHandler,\n    doLoadProfileHandler,\n    userProfile: { user, isProfile404, isAuthProfile },\n    pokeAPI: {\n      selectedPokemon,\n      isLoading,\n      fetchedPokemon,\n      pokemon404,\n      pokemonQuery,\n    },\n    history,\n    match: {\n      params: { id },\n    },\n  } = props;\n\n  useEffect(() => {\n    if (authUser) {\n      doLoadProfileHandler(authUser, id);\n    } else {\n      history.push(\"/\");\n    }\n  }, [authUser, id]);\n\n  const fetchPokemonHandler = (event: any) => {\n    event.preventDefault();\n\n    if (pokemonQuery !== \"\") {\n      doFetchPokemonHandler(pokemonQuery);\n    } else {\n      alert(\"Please type in a pokemon name.\");\n    }\n  };\n\n  const addPokemonToLineupHandler = () => {\n    if (user && fetchedPokemon) {\n      const { pokemonLineup } = user;\n\n      const checkForDuplicate = pokemonLineup.find((p: POKEMON) => p.id === fetchedPokemon.id);\n      if (checkForDuplicate !== undefined) {\n        alert(fetchedPokemon.name + \" is already in the lineup.\");\n      } else if (fetchedPokemon && pokemonLineup.length < 6) {\n        doAddPokemonToLineupHandler(authUser, fetchedPokemon, pokemonLineup);\n      } else {\n        alert(\"Pokemon lineup spots are filled.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      {isProfile404 ? (\n        <PageNotFound />\n      ) : user ? (\n        <div style={{ padding: \"30px\" }}>\n          <Grid container spacing={6}>\n            <Grid item xs={6}>\n              <UserCard \n                user={user} \n                isAuthProfile={isAuthProfile} \n                doUpdateProfile={doUpdateProfileHandler}\n              />\n            </Grid>\n            {isAuthProfile && \n            <Grid item xs={6}>\n              <form\n                className={classes.Pokemon_Search_Form}\n                onSubmit={fetchPokemonHandler}\n              >\n                <input\n                  className={classes.Pokemon_Searchbox}\n                  type=\"text\"\n                  name=\"query\"\n                  placeholder=\"Search Pokemon (e.g. Pikachu and press enter)\"\n                  value={pokemonQuery}\n                  onChange={doUpdatePokemonQueryHandler}\n                />\n              </form>\n              <PokemonSearch\n                isLoading={isLoading}\n                fetchedPokemon={fetchedPokemon}\n                pokemon404={pokemon404}\n                pokemonQuery={pokemonQuery}\n                clearPokemonQuery={doUpdatePokemonQueryHandler}\n                doSelectPokemon={() =>\n                  fetchedPokemon && doSelectPokemonHandler(fetchedPokemon)\n                }\n                doAddPokemon={addPokemonToLineupHandler}\n              />\n            </Grid>}\n            <Grid item xs={6}>\n              <Typography\n                variant={\"h4\"}\n                className={classes.Pokemon_Lineup_Heading}\n              >\n                Pokemon Lineup\n              </Typography>\n              <PokemonLineup\n                isAuthProfile={isAuthProfile}\n                pokemonLineup={user.pokemonLineup}\n                doRemovePokemon={(pokemon: POKEMON) =>\n                  doRemovePokemonFromLineupHandler(\n                    authUser,\n                    pokemon,\n                    user.pokemonLineup\n\t\t\t\t\t\t\t\t)}\n              />\n            </Grid>\n          </Grid>\n          <PokemonData\n            selectedPokemon={selectedPokemon}\n            deselectPokemon={doDeselectPokemonHandler}\n          />\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    pokeAPI: {\n      fetchedPokemon: state.pokeAPI.fetchedPokemon,\n      pokemon404: state.pokeAPI.pokemon404,\n      selectedPokemon: state.pokeAPI.selectedPokemon,\n      isLoading: state.pokeAPI.isLoading,\n      pokemonQuery: state.pokeAPI.pokemonQuery,\n    },\n    userProfile: {\n      user: state.userProfile.user,\n      isAuthProfile: state.userProfile.isAuthProfile,\n      isProfile404: state.userProfile.isProfile404,\n      isLoading: state.userProfile.isLoading,\n      error: state.userProfile.error,\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    doFetchPokemonHandler: (query: string) => dispatch(actions.fetchPokemon(query)),\n    doSelectPokemonHandler: (pokemon: POKEMON) => dispatch(actions.selectPokemon(pokemon)),\n    doDeselectPokemonHandler: () => dispatch(actions.deselectPokemon()),\n    doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => dispatch(actions.updatePokemonQuery(e)),\n\n    doLoadProfileHandler: (authUser: AUTHUSER, userId: string) => dispatch(actions.loadProfile(authUser, userId)),\n    doAddPokemonToLineupHandler: (\n      authUser: AUTHUSER,\n      pokemon: POKEMON,\n      pokemonLineup: POKEMON[]\n    ) => dispatch(actions.addPokemonToLineup(authUser, pokemon, pokemonLineup)),\n    doRemovePokemonFromLineupHandler: (\n      authUser: AUTHUSER,\n      pokemon: POKEMON,\n      pokemonLineup: POKEMON[]\n    ) => dispatch(actions.removePokemonFromLineup(authUser, pokemon, pokemonLineup)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(ProfileStyles)(Profile));\n"]},"metadata":{},"sourceType":"module"}