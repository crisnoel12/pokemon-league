{"ast":null,"code":"var _jsxFileName = \"/Users/cris/Code/pokemon-league/src/components/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid, Modal, Paper, TextField, Typography, makeStyles } from '@material-ui/core';\nimport AuthUserContext from '../../context/AuthUserContext';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialLoginData = {\n  email: '',\n  password: ''\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst Login = ({\n  close,\n  history\n}) => {\n  _s();\n\n  // Variables\n  const classes = useStyles();\n  const {\n    setAuthUser\n  } = useContext(AuthUserContext); // State\n\n  const [loginData, setLoginData] = useState(initialLoginData);\n  const [errors, setErrors] = useState(initialLoginData); // Functions\n\n  const onChangeHandler = e => {\n    setLoginData({ ...loginData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await ApiManager.login(loginData);\n      close();\n      setAuthUser(response.data.user);\n      history.push(`/profile/${response.data.user}`);\n    } catch (error) {\n      if (error.response.data.errors) {\n        setErrors({ ...errors,\n          ...error.response.data.errors\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: true,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        component: Paper,\n        spacing: 3,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            type: \"email\",\n            placeholder: \"Email\",\n            fullWidth: true,\n            name: \"email\",\n            onChange: onChangeHandler,\n            error: errors.email !== \"\",\n            helperText: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            type: \"password\",\n            placeholder: \"Password\",\n            fullWidth: true,\n            name: \"password\",\n            onChange: onChangeHandler,\n            error: errors.password !== \"\",\n            helperText: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            fullWidth: true,\n            variant: \"contained\",\n            onClick: onSubmitHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClose: close\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"FYYFD6LjtHedgHpxu1b+TNLAQ6M=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/Login/Login.tsx"],"names":["useState","useContext","withRouter","Button","Grid","Modal","Paper","TextField","Typography","makeStyles","AuthUserContext","CloseButton","ApiManager","initialLoginData","email","password","useStyles","theme","root","position","top","left","transform","padding","spacing","width","maxWidth","Login","close","history","classes","setAuthUser","loginData","setLoginData","errors","setErrors","onChangeHandler","e","target","name","value","onSubmitHandler","preventDefault","response","login","data","user","push","error"],"mappings":"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","sourcesContent":["import { ChangeEvent, useState, useContext } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Button, Grid, Modal, Paper, TextField, Typography, makeStyles } from '@material-ui/core';\n\nimport AuthUserContext from '../../context/AuthUserContext';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport { AUTHUSERCONTEXT } from '../../types';\n\ninterface PROPS extends RouteComponentProps {\n  close: () => void\n}\n\ninterface LOGIN_DATA {\n  email: string,\n  password: string\n}\n\nconst initialLoginData: LOGIN_DATA = {\n  email: '',\n  password: ''\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst Login = ({ close, history }: PROPS) => {\n  // Variables\n  const classes = useStyles();\n  const { setAuthUser } = useContext(AuthUserContext) as AUTHUSERCONTEXT;\n\n  // State\n  const [loginData, setLoginData] = useState<LOGIN_DATA>(initialLoginData);\n  const [errors, setErrors] = useState<LOGIN_DATA>(initialLoginData);\n\n  // Functions\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setLoginData({\n      ...loginData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSubmitHandler = async (e: any) => {\n    e.preventDefault();\n    try {\n      const response = await ApiManager.login(loginData);\n      close();\n      setAuthUser(response.data.user);\n      history.push(`/profile/${response.data.user}`);\n    } catch(error: any) {\n      if(error.response.data.errors) {\n        setErrors({...errors, ...error.response.data.errors});\n      }\n    }\n  }\n\n  return (\n    <Modal\n      open\n      onClose={close}\n    >\n      <form onSubmit={onSubmitHandler}>\n        <Grid container component={Paper} spacing={3} className={classes.root}>\n          <Grid item xs={12}>\n            <Typography variant={\"h3\"}>Login</Typography>\n          </Grid>\n            <Grid item xs={12}>\n              <TextField\n                  variant={\"outlined\"} \n                  type=\"email\" \n                  placeholder=\"Email\" \n                  fullWidth \n                  name=\"email\"\n                  onChange={onChangeHandler}\n                  error={errors.email !== \"\"}\n                  helperText={errors.email}\n                />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant={\"outlined\"} \n                type=\"password\"  \n                placeholder=\"Password\" \n                fullWidth \n                name=\"password\"\n                onChange={onChangeHandler}\n                error={errors.password !== \"\"}\n                helperText={errors.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button type={\"submit\"} color={\"primary\"} fullWidth variant={\"contained\"} onClick={onSubmitHandler}>Submit</Button>\n            </Grid>\n          <CloseButton onClose={close} />\n        </Grid>\n      </form>\n    </Modal>\n  )\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}