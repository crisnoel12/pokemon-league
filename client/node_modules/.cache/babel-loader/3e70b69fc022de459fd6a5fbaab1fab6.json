{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./actionTypes';import{ApiManager}from'../../../helpers/ApiManager';function dispatchToReducer(dispatch,actionType,payload,other){dispatch(_objectSpread({type:actionType,payload:payload},other));return payload;}export var loadProfile=function loadProfile(authUser,userId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var success;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(loadProfileStart());_context.prev=1;_context.next=4;return ApiManager.getProfile(userId);case 4:success=_context.sent;dispatchToReducer(dispatch,actionTypes.LOAD_PROFILE_SUCCESS,success.data,{isAuthProfile:authUser===userId});_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error(_context.t0.response.data);dispatchToReducer(dispatch,actionTypes.LOAD_PROFILE_FAIL,_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var loadProfileStart=function loadProfileStart(){return{type:actionTypes.LOAD_PROFILE_START};};export var addPokemonToLineup=function addPokemonToLineup(authUser,pokemon,pokemonLineup){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var newPokemonLineup,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(addPokemonToLineUpStart());newPokemonLineup={pokemonLineup:pokemonLineup.concat(pokemon)};_context2.prev=2;_context2.next=5;return ApiManager.updateProfile(authUser,newPokemonLineup);case 5:response=_context2.sent;dispatchToReducer(dispatch,actionTypes.ADD_POKEMON_TO_LINEUP_SUCCESS,response.data);_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0.response.data);dispatchToReducer(dispatch,actionTypes.ADD_POKEMON_TO_LINEUP_FAIL,_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var addPokemonToLineUpStart=function addPokemonToLineUpStart(){return{type:actionTypes.ADD_POKEMON_TO_LINEUP_START};};export var removePokemonFromLineup=function removePokemonFromLineup(authUser,pokemon,pokemonLineup){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var newPokemonLineup,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(removePokemonFromLineupStart());newPokemonLineup={pokemonLineup:pokemonLineup.filter(function(p){return p.id!==pokemon.id;})};_context3.prev=2;_context3.next=5;return ApiManager.updateProfile(authUser,newPokemonLineup);case 5:response=_context3.sent;dispatchToReducer(dispatch,actionTypes.REMOVE_POKEMON_FROM_LINEUP_SUCCESS,response.data);_context3.next=13;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](2);console.log(_context3.t0.response.data);dispatchToReducer(dispatch,actionTypes.REMOVE_POKEMON_FROM_LINEUP_FAIL,_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[2,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var removePokemonFromLineupStart=function removePokemonFromLineupStart(){return{type:actionTypes.REMOVE_POKEMON_FROM_LINEUP_START};};export var updateProfile=function updateProfile(authUser,user){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(updateProfileStart());try{dispatchToReducer(dispatch,actionTypes.UPDATE_PROFILE_SUCCESS,user);}catch(error){console.log(error.response.data);dispatchToReducer(dispatch,actionTypes.UPDATE_PROFILE_FAIL,error);}case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var updateProfileStart=function updateProfileStart(){return{type:actionTypes.UPDATE_PROFILE_START};};","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/store/actions/UserProfile/actionCreators.ts"],"names":["actionTypes","ApiManager","dispatchToReducer","dispatch","actionType","payload","other","type","loadProfile","authUser","userId","loadProfileStart","getProfile","success","LOAD_PROFILE_SUCCESS","data","isAuthProfile","console","error","response","LOAD_PROFILE_FAIL","LOAD_PROFILE_START","addPokemonToLineup","pokemon","pokemonLineup","addPokemonToLineUpStart","newPokemonLineup","concat","updateProfile","ADD_POKEMON_TO_LINEUP_SUCCESS","log","ADD_POKEMON_TO_LINEUP_FAIL","ADD_POKEMON_TO_LINEUP_START","removePokemonFromLineup","removePokemonFromLineupStart","filter","p","id","REMOVE_POKEMON_FROM_LINEUP_SUCCESS","REMOVE_POKEMON_FROM_LINEUP_FAIL","REMOVE_POKEMON_FROM_LINEUP_START","user","updateProfileStart","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_START"],"mappings":"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","sourcesContent":["import { AUTHUSER, POKEMON } from '../../../types';\nimport * as actionTypes from './actionTypes';\nimport { ApiManager } from '../../../helpers/ApiManager';\nimport { Dispatch } from 'redux';\nimport { USER } from '../../../types/index';\n\nfunction dispatchToReducer(dispatch: Dispatch, actionType: any, payload: any, other?: any) {\n  dispatch({ type: actionType, payload, ...other });\n  return payload;\n}\n\nexport const loadProfile = (authUser: AUTHUSER, userId: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(loadProfileStart());\n    try {\n      const success: any = await ApiManager.getProfile(userId);\n      dispatchToReducer(dispatch, actionTypes.LOAD_PROFILE_SUCCESS, success.data, { isAuthProfile: authUser === userId });\n    } catch (error: any) {\n      console.error(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.LOAD_PROFILE_FAIL, error);\n    }\n  }\n}\n\nexport const loadProfileStart = () => {\n  return {\n    type: actionTypes.LOAD_PROFILE_START\n  }\n}\n\n\nexport const addPokemonToLineup = (authUser: AUTHUSER, pokemon: POKEMON, pokemonLineup: POKEMON[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(addPokemonToLineUpStart());\n    const newPokemonLineup = {\n      pokemonLineup: pokemonLineup.concat(pokemon)\n    };\n    try {\n      const response = await ApiManager.updateProfile(authUser, newPokemonLineup);\n      dispatchToReducer(dispatch, actionTypes.ADD_POKEMON_TO_LINEUP_SUCCESS, response.data);\n    } catch (error: any) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.ADD_POKEMON_TO_LINEUP_FAIL, error);\n    }\n  }\n}\n\nexport const addPokemonToLineUpStart = () => {\n  return {\n    type: actionTypes.ADD_POKEMON_TO_LINEUP_START\n  }\n}\n\nexport const removePokemonFromLineup = (authUser: AUTHUSER, pokemon: POKEMON, pokemonLineup: POKEMON[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(removePokemonFromLineupStart());\n    const newPokemonLineup = {\n      pokemonLineup: pokemonLineup.filter((p: POKEMON) => p.id !== pokemon.id)\n    };\n    try {\n      const response = await ApiManager.updateProfile(authUser, newPokemonLineup);\n      dispatchToReducer(dispatch, actionTypes.REMOVE_POKEMON_FROM_LINEUP_SUCCESS, response.data);\n    } catch (error: any) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.REMOVE_POKEMON_FROM_LINEUP_FAIL, error);\n    }\n  }\n}\n\nexport const removePokemonFromLineupStart = () => {\n  return {\n    type: actionTypes.REMOVE_POKEMON_FROM_LINEUP_START\n  }\n}\n\nexport const updateProfile = (authUser: AUTHUSER, user: USER) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(updateProfileStart());\n    try {\n      dispatchToReducer(dispatch, actionTypes.UPDATE_PROFILE_SUCCESS, user);\n    } catch (error: any) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.UPDATE_PROFILE_FAIL, error);\n    }\n  }\n}\n\nexport const updateProfileStart = () => {\n  return {\n    type: actionTypes.UPDATE_PROFILE_START\n  }\n}"]},"metadata":{},"sourceType":"module"}