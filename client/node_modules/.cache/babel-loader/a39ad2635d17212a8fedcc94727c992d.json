{"ast":null,"code":"var _jsxFileName = \"/Users/cris/Code/pokemon-league/src/components/EditProfile/EditProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, makeStyles, Modal, Paper, TextField, Typography } from '@material-ui/core';\nimport { useContext, useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthUserContext from '../../context/AuthUserContext';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initUserData = {\n  username: '',\n  first_name: '',\n  middle_name: '',\n  last_name: '',\n  email: '',\n  gender: '',\n  password: '',\n  confirm_password: ''\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst EditProfile = ({\n  close,\n  user,\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    authUser\n  } = useContext(AuthUserContext); // state\n\n  const [userData, setUserData] = useState(initUserData);\n  const [errors, setErrors] = useState(initUserData); // hooks\n\n  useEffect(() => {\n    const fillInUserData = { ...userData,\n      ...user\n    };\n    setUserData(fillInUserData);\n  }, []); // functions\n\n  const onChangeHandler = e => {\n    setUserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isSubmitDisabled = () => {\n    switch (true) {\n      case userData.username === \"\":\n        return true;\n\n      case userData.email === \"\":\n        return true;\n\n      case userData.first_name === \"\":\n        return true;\n\n      case userData.last_name === \"\":\n        return true;\n\n      case userData.password === \"\":\n        return true;\n\n      case userData.confirm_password === \"\":\n        return true;\n\n      case passwordsDoNotMatch:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  const passwordsDoNotMatch = userData.confirm_password !== userData.password;\n\n  const onSubmitHandler = async () => {\n    try {\n      const response = await ApiManager.updateProfile(authUser, userData);\n      console.log(response);\n    } catch (error) {\n      console.error(error);\n\n      if (error.response.data.errors) {\n        setErrors({ ...errors,\n          ...error.response.data.errors\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: true,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: Paper,\n      spacing: 3,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          variant: \"outlined\",\n          type: \"text\",\n          placeholder: \"Username\",\n          value: user.username,\n          fullWidth: true,\n          name: \"username\",\n          onChange: onChangeHandler,\n          error: errors.username !== \"\",\n          helperText: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: user.email,\n          fullWidth: true,\n          name: \"email\",\n          onChange: onChangeHandler,\n          error: errors.email !== \"\",\n          helperText: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"text\",\n          placeholder: \"First Name\",\n          value: user.first_name,\n          fullWidth: true,\n          name: \"first_name\",\n          onChange: onChangeHandler,\n          error: errors.first_name !== \"\",\n          helperText: errors.first_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"text\",\n          placeholder: \"Middle Name\",\n          value: user.middle_name,\n          fullWidth: true,\n          name: \"middle_name\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"text\",\n          placeholder: \"Last Name\",\n          value: user.last_name,\n          fullWidth: true,\n          name: \"last_name\",\n          onChange: onChangeHandler,\n          error: errors.last_name !== \"\",\n          helperText: errors.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"password\",\n          placeholder: \"Password\",\n          fullWidth: true,\n          name: \"password\",\n          onChange: onChangeHandler,\n          error: errors.password !== \"\",\n          helperText: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          fullWidth: true,\n          name: \"confirm_password\",\n          onChange: onChangeHandler,\n          error: errors.confirm_password !== \"\" || passwordsDoNotMatch,\n          helperText: errors.confirm_password ? errors.confirm_password : passwordsDoNotMatch ? 'Passwords do not match' : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          fullWidth: true,\n          variant: \"contained\",\n          onClick: onSubmitHandler,\n          disabled: isSubmitDisabled(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n        onClose: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfile, \"zU+TfjLnXPYbe7K+a/ybj7lz8cQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditProfile;\nexport default _c2 = withRouter(EditProfile);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditProfile\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/EditProfile/EditProfile.tsx"],"names":["Button","Grid","makeStyles","Modal","Paper","TextField","Typography","useContext","useEffect","useState","withRouter","AuthUserContext","ApiManager","CloseButton","initUserData","username","first_name","middle_name","last_name","email","gender","password","confirm_password","useStyles","theme","root","position","top","left","transform","padding","spacing","width","maxWidth","EditProfile","close","user","history","classes","authUser","userData","setUserData","errors","setErrors","fillInUserData","onChangeHandler","e","target","name","value","isSubmitDisabled","passwordsDoNotMatch","onSubmitHandler","response","updateProfile","console","log","error","data"],"mappings":"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","sourcesContent":["import { Button, FormControlLabel, FormLabel, Grid, makeStyles, Modal, Paper, Radio, RadioGroup, TextField, Theme, Typography } from '@material-ui/core'\nimport { ChangeEvent, useContext, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport AuthUserContext from '../../context/AuthUserContext';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport { USER } from '../../types';\nimport CloseButton from '../UI/CloseButton/CloseButton';\n\ninterface PROPS extends RouteComponentProps {\n  user: USER,\n  close: () => void\n}\n\nconst initUserData: Partial<USER> = {\n  username: '',\n  first_name: '',\n  middle_name: '',\n  last_name: '',\n  email: '',\n  gender: '',\n  password: '',\n  confirm_password: ''\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst EditProfile = ({ close, user, history }: PROPS) => {\n  const classes = useStyles();\n  const { authUser } = useContext(AuthUserContext);\n\n  // state\n  const [userData, setUserData] = useState<Partial<USER>>(initUserData);\n  const [errors, setErrors] = useState<Partial<USER>>(initUserData);\n\n  // hooks\n  useEffect(() => {\n    const fillInUserData = {\n      ...userData,\n      ...user\n    }\n    setUserData(fillInUserData);\n  },[]);\n\n  // functions\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const isSubmitDisabled = () => {\n    switch (true) {\n      case userData.username === \"\":\n        return true;\n      case userData.email === \"\":\n        return true;\n      case userData.first_name === \"\":\n        return true;\n      case userData.last_name === \"\":\n        return true;\n      case userData.password === \"\":\n        return true;\n      case userData.confirm_password === \"\":\n        return true;\n      case passwordsDoNotMatch:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  const passwordsDoNotMatch = userData.confirm_password !== userData.password;\n\n  const onSubmitHandler = async () => {\n    try {\n      const response = await ApiManager.updateProfile(authUser, userData);\n      console.log(response);\n    } catch(error: any) {\n      console.error(error);\n      if(error.response.data.errors) {\n        setErrors({...errors, ...error.response.data.errors});\n      }\n    }\n  }\n  return (\n    <Modal\n      open\n      onClose={close}\n    >\n      <Grid container component={Paper} spacing={3} className={classes.root}>\n        <Grid item xs={12}>\n          <Typography variant={\"h3\"}>Edit Profile</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            autoFocus\n            variant={\"outlined\"} \n            type=\"text\" \n            placeholder=\"Username\"\n            value={user.username}\n            fullWidth\n            name=\"username\"\n            onChange={onChangeHandler} \n            error={errors.username !== \"\"}\n            helperText={errors.username}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            variant={\"outlined\"} \n            type=\"email\" \n            placeholder=\"Email\" \n            value={user.email}\n            fullWidth \n            name=\"email\"\n            onChange={onChangeHandler}\n            error={errors.email !== \"\"}\n            helperText={errors.email}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            variant={\"outlined\"} \n            type=\"text\" \n            placeholder=\"First Name\" \n            value={user.first_name}\n            fullWidth \n            name=\"first_name\"\n            onChange={onChangeHandler}\n            error={errors.first_name !== \"\"}\n            helperText={errors.first_name}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            variant={\"outlined\"} \n            type=\"text\" \n            placeholder=\"Middle Name\"\n            value={user.middle_name}\n            fullWidth \n            name=\"middle_name\"\n            onChange={onChangeHandler}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            variant={\"outlined\"} \n            type=\"text\" \n            placeholder=\"Last Name\" \n            value={user.last_name}\n            fullWidth\n            name=\"last_name\"\n            onChange={onChangeHandler} \n            error={errors.last_name !== \"\"}\n            helperText={errors.last_name}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            variant={\"outlined\"} \n            type=\"password\"  \n            placeholder=\"Password\" \n            fullWidth \n            name=\"password\"\n            onChange={onChangeHandler}\n            error={errors.password !== \"\"}\n            helperText={errors.password}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField \n            variant={\"outlined\"}\n            type=\"password\"  \n            placeholder=\"Confirm Password\" \n            fullWidth \n            name=\"confirm_password\"\n            onChange={onChangeHandler}\n            error={errors.confirm_password !== \"\" || passwordsDoNotMatch}\n            helperText={errors.confirm_password ? errors.confirm_password : passwordsDoNotMatch ? 'Passwords do not match' : null}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button \n            color={\"primary\"} \n            fullWidth \n            variant={\"contained\"} \n            onClick={onSubmitHandler}\n            disabled={isSubmitDisabled()}\n          >\n            Update\n          </Button>\n        </Grid>\n        <CloseButton onClose={close} />\n      </Grid>\n    </Modal>\n  )\n}\n\nexport default withRouter(EditProfile);\n"]},"metadata":{},"sourceType":"module"}