{"ast":null,"code":"import{Card,Divider,Modal,Table,TableCell,TableRow,Typography,capitalize,List,ListItem,ListItemText}from\"@material-ui/core\";import CloseButton from\"../UI/CloseButton/CloseButton\";import PokemonDataStyles from\"./PokemonDataStyles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PokemonData=function PokemonData(props){var pokemonDataClasses=PokemonDataStyles();var selectedPokemon=props.selectedPokemon,deselectPokemon=props.deselectPokemon;var pokemonData=null;if(selectedPokemon){var pokemon=selectedPokemon;var pokemonTypes=pokemon.types.map(function(type,i,arr){if(arr.length-1===i){return/*#__PURE__*/_jsx(Typography,{variant:\"inherit\",children:/*#__PURE__*/_jsx(\"strong\",{children:capitalize(type.type.name)})},i);}else{return/*#__PURE__*/_jsxs(Typography,{variant:\"inherit\",children:[/*#__PURE__*/_jsx(\"strong\",{children:capitalize(type.type.name)}),\",\\xA0\"]},i);}});var pokemonAbilities=pokemon.abilities.map(function(ability,i,arr){if(arr.length-1===i){return/*#__PURE__*/_jsx(Typography,{variant:\"inherit\",children:/*#__PURE__*/_jsx(\"strong\",{children:capitalize(ability.ability.name)})},i);}else{return/*#__PURE__*/_jsxs(Typography,{variant:\"inherit\",children:[/*#__PURE__*/_jsx(\"strong\",{children:capitalize(ability.ability.name)}),\",\\xA0\"]},i);}});var pokemonStats=pokemon.stats.slice(0).map(function(stat,i){return/*#__PURE__*/_jsx(ListItem,{classes:{root:pokemonDataClasses.listItemRoot},children:/*#__PURE__*/_jsxs(ListItemText,{disableTypography:true,classes:{root:pokemonDataClasses.uppercase},children:[/*#__PURE__*/_jsxs(\"strong\",{children:[stat.stat.name,\":\"]}),\" \",/*#__PURE__*/_jsx(Typography,{variant:\"inherit\",children:stat.base_stat})]})},i);});pokemonData=/*#__PURE__*/_jsx(Modal,{open:selectedPokemon?true:false,onClose:deselectPokemon,children:/*#__PURE__*/_jsx(Card,{className:pokemonDataClasses.cardRoot,children:/*#__PURE__*/_jsxs(\"div\",{style:{position:\"relative\",padding:\"32px\"},children:[/*#__PURE__*/_jsx(\"img\",{src:pokemon.sprites.front_default,alt:pokemon.name}),/*#__PURE__*/_jsx(CloseButton,{onClose:deselectPokemon}),/*#__PURE__*/_jsx(Typography,{variant:\"h3\",children:capitalize(pokemon.name)}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{variant:\"head\",children:\"Type(s)\"}),/*#__PURE__*/_jsx(TableCell,{children:pokemonTypes})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{variant:\"head\",children:\"Abilities\"}),/*#__PURE__*/_jsx(TableCell,{children:pokemonAbilities})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{variant:\"head\",children:\"Stats\"}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(List,{children:pokemonStats})})]})]})]})})});}return pokemonData;};export default PokemonData;","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonData.tsx"],"names":["Card","Divider","Modal","Table","TableCell","TableRow","Typography","capitalize","List","ListItem","ListItemText","CloseButton","PokemonDataStyles","PokemonData","props","pokemonDataClasses","selectedPokemon","deselectPokemon","pokemonData","pokemon","pokemonTypes","types","map","type","i","arr","length","name","pokemonAbilities","abilities","ability","pokemonStats","stats","slice","stat","root","listItemRoot","uppercase","base_stat","cardRoot","position","padding","sprites","front_default"],"mappings":"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","sourcesContent":["import {\n  Card,\n  Divider,\n  Modal,\n  Table,\n  TableCell,\n  TableRow,\n  Typography,\n  capitalize,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { POKEAPI_INITIAL_STATE } from \"../../types\";\nimport CloseButton from \"../UI/CloseButton/CloseButton\";\nimport PokemonDataStyles from \"./PokemonDataStyles\";\n\ninterface PROPS extends Partial<POKEAPI_INITIAL_STATE> {\n  deselectPokemon: () => void;\n}\n\nconst PokemonData = (props: PROPS) => {\n  const pokemonDataClasses = PokemonDataStyles();\n  const { selectedPokemon, deselectPokemon } = props;\n  let pokemonData = null;\n\n  if (selectedPokemon) {\n    let pokemon = selectedPokemon;\n    let pokemonTypes = pokemon.types.map(\n      (type: { [key: string]: any }, i: number, arr: any[]) => {\n        if (arr.length - 1 === i) {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(type.type.name)}</strong>\n            </Typography>\n          );\n        } else {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(type.type.name)}</strong>,&nbsp;\n            </Typography>\n          );\n        }\n      }\n    );\n    let pokemonAbilities = pokemon.abilities.map(\n      (ability: { [key: string]: any }, i: number, arr: any[]) => {\n        if (arr.length - 1 === i) {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(ability.ability.name)}</strong>\n            </Typography>\n          );\n        } else {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(ability.ability.name)}</strong>,&nbsp;\n            </Typography>\n          );\n        }\n      }\n    );\n    let pokemonStats = pokemon.stats\n      .slice(0)\n      .map((stat: { [key: string]: any }, i: number) => {\n        return (\n          <ListItem key={i} classes={{ root: pokemonDataClasses.listItemRoot }}>\n            <ListItemText\n              disableTypography\n              classes={{ root: pokemonDataClasses.uppercase }}\n            >\n              <strong>{stat.stat.name}:</strong>{\" \"}\n              <Typography variant={\"inherit\"}>{stat.base_stat}</Typography>\n            </ListItemText>\n          </ListItem>\n        );\n      });\n    pokemonData = (\n      <Modal open={selectedPokemon ? true : false} onClose={deselectPokemon}>\n        <Card className={pokemonDataClasses.cardRoot}>\n          <div style={{ position: \"relative\", padding: \"32px\" }}>\n            <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n            <CloseButton onClose={deselectPokemon} />\n            <Typography variant={\"h3\"}>{capitalize(pokemon.name)}</Typography>\n            <Divider />\n            <Table>\n              <TableRow>\n                <TableCell variant=\"head\">Type(s)</TableCell>\n                <TableCell>{pokemonTypes}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell variant=\"head\">Abilities</TableCell>\n                <TableCell>{pokemonAbilities}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell variant=\"head\">Stats</TableCell>\n                <TableCell>\n                  <List>{pokemonStats}</List>\n                </TableCell>\n              </TableRow>\n            </Table>\n          </div>\n        </Card>\n      </Modal>\n    );\n  }\n\n  return pokemonData;\n};\n\nexport default PokemonData;\n"]},"metadata":{},"sourceType":"module"}