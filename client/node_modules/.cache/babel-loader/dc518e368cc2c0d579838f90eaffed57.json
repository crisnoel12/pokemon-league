{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{Grid,Typography}from\"@material-ui/core\";import{withStyles}from\"@material-ui/styles\";import ProfileStyles from\"./ProfileStyles\";import*as actions from\"../../store/actions/index\";import PageNotFound from\"../../components/UI/PageNotFound/PageNotFound\";import PokemonSearch from\"../../components/PokemonSearch/PokemonSearch\";import PokemonData from\"../../components/PokemonData/PokemonData\";import PokemonLineup from\"../../components/PokemonLineup/PokemonLineup\";import Loader from\"../../components/UI/Loader/Loader\";import UserCard from\"../../components/UserCard/UserCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Profile=function Profile(props){var authUser=props.authUser,classes=props.classes,doAddPokemonToLineupHandler=props.doAddPokemonToLineupHandler,doFetchPokemonHandler=props.doFetchPokemonHandler,doRemovePokemonFromLineupHandler=props.doRemovePokemonFromLineupHandler,doSelectPokemonHandler=props.doSelectPokemonHandler,doDeselectPokemonHandler=props.doDeselectPokemonHandler,doUpdatePokemonQueryHandler=props.doUpdatePokemonQueryHandler,doLoadProfileHandler=props.doLoadProfileHandler,doUpdateProfileHandler=props.doUpdateProfileHandler,_props$userProfile=props.userProfile,user=_props$userProfile.user,isProfile404=_props$userProfile.isProfile404,isAuthProfile=_props$userProfile.isAuthProfile,_props$pokeAPI=props.pokeAPI,selectedPokemon=_props$pokeAPI.selectedPokemon,isLoading=_props$pokeAPI.isLoading,fetchedPokemon=_props$pokeAPI.fetchedPokemon,pokemon404=_props$pokeAPI.pokemon404,pokemonQuery=_props$pokeAPI.pokemonQuery,history=props.history,id=props.match.params.id;useEffect(function(){if(authUser){doLoadProfileHandler(authUser,id);}else{history.push(\"/\");}},[authUser,id]);var fetchPokemonHandler=function fetchPokemonHandler(event){event.preventDefault();if(pokemonQuery!==\"\"){doFetchPokemonHandler(pokemonQuery);}else{alert(\"Please type in a pokemon name.\");}};var addPokemonToLineupHandler=function addPokemonToLineupHandler(){if(user&&fetchedPokemon){var _pokemonLineup=user.pokemonLineup;var checkForDuplicate=_pokemonLineup.find(function(p){return p.id===fetchedPokemon.id;});if(checkForDuplicate!==undefined){alert(fetchedPokemon.name+\" is already in the lineup.\");}else if(fetchedPokemon&&_pokemonLineup.length<6){doAddPokemonToLineupHandler(authUser,fetchedPokemon,_pokemonLineup);}else{alert(\"Pokemon lineup spots are filled.\");}}};return/*#__PURE__*/_jsx(_Fragment,{children:isProfile404?/*#__PURE__*/_jsx(PageNotFound,{}):user?/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"30px\"},children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:6,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(UserCard,{user:user,isAuthProfile:isAuthProfile,doUpdateProfile:function doUpdateProfile(user){return doUpdateProfileHandler(authUser,user);}})}),isAuthProfile&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(\"form\",{className:classes.Pokemon_Search_Form,onSubmit:fetchPokemonHandler,children:/*#__PURE__*/_jsx(\"input\",{className:classes.Pokemon_Searchbox,type:\"text\",name:\"query\",placeholder:\"Search Pokemon (e.g. Pikachu and press enter)\",value:pokemonQuery,onChange:doUpdatePokemonQueryHandler})}),/*#__PURE__*/_jsx(PokemonSearch,{isLoading:isLoading,fetchedPokemon:fetchedPokemon,pokemon404:pokemon404,pokemonQuery:pokemonQuery,clearPokemonQuery:doUpdatePokemonQueryHandler,doSelectPokemon:function doSelectPokemon(){return fetchedPokemon&&doSelectPokemonHandler(fetchedPokemon);},doAddPokemon:addPokemonToLineupHandler})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:classes.Pokemon_Lineup_Heading,children:\"Pokemon Lineup\"}),/*#__PURE__*/_jsx(PokemonLineup,{isAuthProfile:isAuthProfile,pokemonLineup:user.pokemonLineup,doRemovePokemon:function doRemovePokemon(pokemon){return doRemovePokemonFromLineupHandler(authUser,pokemon,user.pokemonLineup);}})]})]}),/*#__PURE__*/_jsx(PokemonData,{selectedPokemon:selectedPokemon,deselectPokemon:doDeselectPokemonHandler})]}):/*#__PURE__*/_jsx(Loader,{})});};var mapStateToProps=function mapStateToProps(state){return{pokeAPI:{fetchedPokemon:state.pokeAPI.fetchedPokemon,pokemon404:state.pokeAPI.pokemon404,selectedPokemon:state.pokeAPI.selectedPokemon,isLoading:state.pokeAPI.isLoading,pokemonQuery:state.pokeAPI.pokemonQuery},userProfile:{user:state.userProfile.user,isAuthProfile:state.userProfile.isAuthProfile,isProfile404:state.userProfile.isProfile404,isLoading:state.userProfile.isLoading,error:state.userProfile.error}};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{doFetchPokemonHandler:function doFetchPokemonHandler(query){return dispatch(actions.fetchPokemon(query));},doSelectPokemonHandler:function doSelectPokemonHandler(pokemon){return dispatch(actions.selectPokemon(pokemon));},doDeselectPokemonHandler:function doDeselectPokemonHandler(){return dispatch(actions.deselectPokemon());},doUpdatePokemonQueryHandler:function doUpdatePokemonQueryHandler(e){return dispatch(actions.updatePokemonQuery(e));},doLoadProfileHandler:function doLoadProfileHandler(authUser,userId){return dispatch(actions.loadProfile(authUser,userId));},doAddPokemonToLineupHandler:function doAddPokemonToLineupHandler(authUser,pokemon,pokemonLineup){return dispatch(actions.addPokemonToLineup(authUser,pokemon,pokemonLineup));},doRemovePokemonFromLineupHandler:function doRemovePokemonFromLineupHandler(authUser,pokemon,pokemonLineup){return dispatch(actions.removePokemonFromLineup(authUser,pokemon,pokemonLineup));},doUpdateProfileHandler:function doUpdateProfileHandler(authUser,user){return dispatch(actions.updateProfile(authUser,user));}};};export default connect(mapStateToProps,mapDispatchToProps)(withStyles(ProfileStyles)(Profile));","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/containers/Profile/Profile.tsx"],"names":["React","useEffect","connect","Grid","Typography","withStyles","ProfileStyles","actions","PageNotFound","PokemonSearch","PokemonData","PokemonLineup","Loader","UserCard","Profile","props","authUser","classes","doAddPokemonToLineupHandler","doFetchPokemonHandler","doRemovePokemonFromLineupHandler","doSelectPokemonHandler","doDeselectPokemonHandler","doUpdatePokemonQueryHandler","doLoadProfileHandler","doUpdateProfileHandler","userProfile","user","isProfile404","isAuthProfile","pokeAPI","selectedPokemon","isLoading","fetchedPokemon","pokemon404","pokemonQuery","history","id","match","params","push","fetchPokemonHandler","event","preventDefault","alert","addPokemonToLineupHandler","pokemonLineup","checkForDuplicate","find","p","undefined","name","length","padding","Pokemon_Search_Form","Pokemon_Searchbox","Pokemon_Lineup_Heading","pokemon","mapStateToProps","state","error","mapDispatchToProps","dispatch","query","fetchPokemon","selectPokemon","deselectPokemon","e","updatePokemonQuery","userId","loadProfile","addPokemonToLineup","removePokemonFromLineup","updateProfile"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport ProfileStyles from \"./ProfileStyles\";\nimport {\n  AUTHUSER,\n  POKEMON,\n  POKEAPI_INITIAL_STATE,\n  USER_PROFILE_INITIAL_STATE,\n  USER,\n} from \"../../types\";\nimport * as actions from \"../../store/actions/index\";\nimport PageNotFound from \"../../components/UI/PageNotFound/PageNotFound\";\nimport PokemonSearch from \"../../components/PokemonSearch/PokemonSearch\";\nimport PokemonData from \"../../components/PokemonData/PokemonData\";\nimport PokemonLineup from \"../../components/PokemonLineup/PokemonLineup\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport UserCard from \"../../components/UserCard/UserCard\";\n\ninterface PROPS extends RouteComponentProps<{ [key: string]: any }> {\n  doFetchPokemonHandler: (query: string) => any;\n  doSelectPokemonHandler: (pokemon: POKEMON) => any;\n  doDeselectPokemonHandler: () => any;\n  doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  doLoadProfileHandler: (authUser: AUTHUSER, userId: string) => void;\n  doAddPokemonToLineupHandler: (\n    authUser: AUTHUSER,\n    pokemon: POKEMON,\n    pokemonLineup: POKEMON[]\n  ) => void;\n  doRemovePokemonFromLineupHandler: (\n    authUser: AUTHUSER,\n    pokemon: POKEMON,\n    pokemonLineup: POKEMON[]\n  ) => void;\n  doUpdateProfileHandler: (\n    authUser: AUTHUSER,\n    user: USER\n  ) => void,\n  pokeAPI: POKEAPI_INITIAL_STATE;\n  userProfile: USER_PROFILE_INITIAL_STATE;\n  authUser: AUTHUSER;\n  classes: { [key: string]: any };\n}\n\nconst Profile = (props: PROPS) => {\n  const {\n    authUser,\n    classes,\n    doAddPokemonToLineupHandler,\n    doFetchPokemonHandler,\n    doRemovePokemonFromLineupHandler,\n    doSelectPokemonHandler,\n    doDeselectPokemonHandler,\n    doUpdatePokemonQueryHandler,\n    doLoadProfileHandler,\n    doUpdateProfileHandler,\n    userProfile: { user, isProfile404, isAuthProfile },\n    pokeAPI: {\n      selectedPokemon,\n      isLoading,\n      fetchedPokemon,\n      pokemon404,\n      pokemonQuery,\n    },\n    history,\n    match: {\n      params: { id },\n    },\n  } = props;\n\n  useEffect(() => {\n    if (authUser) {\n      doLoadProfileHandler(authUser, id);\n    } else {\n      history.push(\"/\");\n    }\n  }, [authUser, id]);\n\n  const fetchPokemonHandler = (event: any) => {\n    event.preventDefault();\n\n    if (pokemonQuery !== \"\") {\n      doFetchPokemonHandler(pokemonQuery);\n    } else {\n      alert(\"Please type in a pokemon name.\");\n    }\n  };\n\n  const addPokemonToLineupHandler = () => {\n    if (user && fetchedPokemon) {\n      const { pokemonLineup } = user;\n\n      const checkForDuplicate = pokemonLineup.find((p: POKEMON) => p.id === fetchedPokemon.id);\n      if (checkForDuplicate !== undefined) {\n        alert(fetchedPokemon.name + \" is already in the lineup.\");\n      } else if (fetchedPokemon && pokemonLineup.length < 6) {\n        doAddPokemonToLineupHandler(authUser, fetchedPokemon, pokemonLineup);\n      } else {\n        alert(\"Pokemon lineup spots are filled.\");\n      }\n    }\n  };\n\n  return (\n    <>\n      {isProfile404 ? (\n        <PageNotFound />\n      ) : user ? (\n        <div style={{ padding: \"30px\" }}>\n          <Grid container spacing={6}>\n            <Grid item xs={6}>\n              <UserCard \n                user={user} \n                isAuthProfile={isAuthProfile} \n                doUpdateProfile={(user: USER) => doUpdateProfileHandler(authUser, user)}\n              />\n            </Grid>\n            {isAuthProfile && \n            <Grid item xs={6}>\n              <form\n                className={classes.Pokemon_Search_Form}\n                onSubmit={fetchPokemonHandler}\n              >\n                <input\n                  className={classes.Pokemon_Searchbox}\n                  type=\"text\"\n                  name=\"query\"\n                  placeholder=\"Search Pokemon (e.g. Pikachu and press enter)\"\n                  value={pokemonQuery}\n                  onChange={doUpdatePokemonQueryHandler}\n                />\n              </form>\n              <PokemonSearch\n                isLoading={isLoading}\n                fetchedPokemon={fetchedPokemon}\n                pokemon404={pokemon404}\n                pokemonQuery={pokemonQuery}\n                clearPokemonQuery={doUpdatePokemonQueryHandler}\n                doSelectPokemon={() =>\n                  fetchedPokemon && doSelectPokemonHandler(fetchedPokemon)\n                }\n                doAddPokemon={addPokemonToLineupHandler}\n              />\n            </Grid>}\n            <Grid item xs={6}>\n              <Typography\n                variant={\"h4\"}\n                className={classes.Pokemon_Lineup_Heading}\n              >\n                Pokemon Lineup\n              </Typography>\n              <PokemonLineup\n                isAuthProfile={isAuthProfile}\n                pokemonLineup={user.pokemonLineup}\n                doRemovePokemon={(pokemon: POKEMON) =>\n                  doRemovePokemonFromLineupHandler(\n                    authUser,\n                    pokemon,\n                    user.pokemonLineup\n\t\t\t\t\t\t\t\t)}\n              />\n            </Grid>\n          </Grid>\n          <PokemonData\n            selectedPokemon={selectedPokemon}\n            deselectPokemon={doDeselectPokemonHandler}\n          />\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    pokeAPI: {\n      fetchedPokemon: state.pokeAPI.fetchedPokemon,\n      pokemon404: state.pokeAPI.pokemon404,\n      selectedPokemon: state.pokeAPI.selectedPokemon,\n      isLoading: state.pokeAPI.isLoading,\n      pokemonQuery: state.pokeAPI.pokemonQuery,\n    },\n    userProfile: {\n      user: state.userProfile.user,\n      isAuthProfile: state.userProfile.isAuthProfile,\n      isProfile404: state.userProfile.isProfile404,\n      isLoading: state.userProfile.isLoading,\n      error: state.userProfile.error,\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    doFetchPokemonHandler: (query: string) => dispatch(actions.fetchPokemon(query)),\n    doSelectPokemonHandler: (pokemon: POKEMON) => dispatch(actions.selectPokemon(pokemon)),\n    doDeselectPokemonHandler: () => dispatch(actions.deselectPokemon()),\n    doUpdatePokemonQueryHandler: (e: React.ChangeEvent<HTMLInputElement>) => dispatch(actions.updatePokemonQuery(e)),\n\n    doLoadProfileHandler: (authUser: AUTHUSER, userId: string) => dispatch(actions.loadProfile(authUser, userId)),\n    doAddPokemonToLineupHandler: (\n      authUser: AUTHUSER,\n      pokemon: POKEMON,\n      pokemonLineup: POKEMON[]\n    ) => dispatch(actions.addPokemonToLineup(authUser, pokemon, pokemonLineup)),\n    doRemovePokemonFromLineupHandler: (\n      authUser: AUTHUSER,\n      pokemon: POKEMON,\n      pokemonLineup: POKEMON[]\n    ) => dispatch(actions.removePokemonFromLineup(authUser, pokemon, pokemonLineup)),\n    doUpdateProfileHandler: (\n      authUser: AUTHUSER,\n      user: USER\n    ) => dispatch(actions.updateProfile(authUser, user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(ProfileStyles)(Profile));\n"]},"metadata":{},"sourceType":"module"}