{"ast":null,"code":"import _objectWithoutProperties from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _excluded=[\"base_experience\",\"forms\",\"game_indices\",\"held_items\",\"is_default\",\"location_area_encounters\",\"order\",\"past_types\"];import*as actionTypes from'../../actions/PokeAPI/actionTypes';var initalState={fetchedPokemon:null,pokemon404:false,selectedPokemon:null,isLoading:false,pokemonQuery:''};var PokeAPIReducer=function PokeAPIReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initalState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.FETCH_POKEMON_START:return _objectSpread(_objectSpread({},state),{},{isLoading:true,selectedPokemon:null});case actionTypes.FETCH_POKEMON_SUCCESS:var _action$pokemon=action.pokemon,base_experience=_action$pokemon.base_experience,forms=_action$pokemon.forms,game_indices=_action$pokemon.game_indices,held_items=_action$pokemon.held_items,is_default=_action$pokemon.is_default,location_area_encounters=_action$pokemon.location_area_encounters,order=_action$pokemon.order,past_types=_action$pokemon.past_types,rest=_objectWithoutProperties(_action$pokemon,_excluded);return _objectSpread(_objectSpread({},state),{},{fetchedPokemon:rest,pokemon404:false,isLoading:false});case actionTypes.FETCH_POKEMON_FAIL:return _objectSpread(_objectSpread({},state),{},{fetchedPokemon:null,pokemon404:true,isLoading:false});case actionTypes.SELECT_POKEMON:return _objectSpread(_objectSpread({},state),{},{selectedPokemon:action.pokemon});case actionTypes.DESELECT_POKEMON:return _objectSpread(_objectSpread({},state),{},{selectedPokemon:null});case actionTypes.UPDATE_POKEMON_QUERY:if(action.pokemonQuery===\"\"){return _objectSpread(_objectSpread({},state),{},{pokemonQuery:action.pokemonQuery,fetchedPokemon:null,pokemon404:false});}return _objectSpread(_objectSpread({},state),{},{pokemonQuery:action.pokemonQuery});default:return state;}};export{PokeAPIReducer};","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/store/reducers/PokeAPI/reducer.ts"],"names":["actionTypes","initalState","fetchedPokemon","pokemon404","selectedPokemon","isLoading","pokemonQuery","PokeAPIReducer","state","action","type","FETCH_POKEMON_START","FETCH_POKEMON_SUCCESS","pokemon","base_experience","forms","game_indices","held_items","is_default","location_area_encounters","order","past_types","rest","FETCH_POKEMON_FAIL","SELECT_POKEMON","DESELECT_POKEMON","UPDATE_POKEMON_QUERY"],"mappings":"kcACA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,mCAA7B,CAEA,GAAMC,CAAAA,WAAkC,CAAG,CACvCC,cAAc,CAAE,IADuB,CAEvCC,UAAU,CAAE,KAF2B,CAGvCC,eAAe,CAAE,IAHsB,CAIvCC,SAAS,CAAE,KAJ4B,CAKvCC,YAAY,CAAE,EALyB,CAA3C,CAQA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAwE,IAAvEC,CAAAA,KAAuE,2DAAxCP,WAAwC,IAA3BQ,CAAAA,MAA2B,2CAC3F,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKV,CAAAA,WAAW,CAACW,mBAAjB,CACI,sCACOH,KADP,MAEIH,SAAS,CAAE,IAFf,CAGID,eAAe,CAAE,IAHrB,GAKJ,IAAKJ,CAAAA,WAAW,CAACY,qBAAjB,CACI,oBAA+HH,MAAM,CAACI,OAAtI,CAAQC,eAAR,iBAAQA,eAAR,CAAyBC,KAAzB,iBAAyBA,KAAzB,CAAgCC,YAAhC,iBAAgCA,YAAhC,CAA8CC,UAA9C,iBAA8CA,UAA9C,CAA0DC,UAA1D,iBAA0DA,UAA1D,CAAsEC,wBAAtE,iBAAsEA,wBAAtE,CAAgGC,KAAhG,iBAAgGA,KAAhG,CAAuGC,UAAvG,iBAAuGA,UAAvG,CAAsHC,IAAtH,qDACA,sCACOd,KADP,MAEIN,cAAc,CAAEoB,IAFpB,CAGInB,UAAU,CAAE,KAHhB,CAIIE,SAAS,CAAE,KAJf,GAMJ,IAAKL,CAAAA,WAAW,CAACuB,kBAAjB,CACI,sCACOf,KADP,MAEIN,cAAc,CAAE,IAFpB,CAGIC,UAAU,CAAE,IAHhB,CAIIE,SAAS,CAAE,KAJf,GAMJ,IAAKL,CAAAA,WAAW,CAACwB,cAAjB,CACI,sCACOhB,KADP,MAEIJ,eAAe,CAAEK,MAAM,CAACI,OAF5B,GAIJ,IAAKb,CAAAA,WAAW,CAACyB,gBAAjB,CACI,sCACOjB,KADP,MAEIJ,eAAe,CAAE,IAFrB,GAIJ,IAAKJ,CAAAA,WAAW,CAAC0B,oBAAjB,CACI,GAAIjB,MAAM,CAACH,YAAP,GAAwB,EAA5B,CAAgC,CAC5B,sCACOE,KADP,MAEIF,YAAY,CAAEG,MAAM,CAACH,YAFzB,CAGIJ,cAAc,CAAE,IAHpB,CAIIC,UAAU,CAAE,KAJhB,GAMH,CACD,sCACOK,KADP,MAEIF,YAAY,CAAEG,MAAM,CAACH,YAFzB,GAIJ,QACI,MAAOE,CAAAA,KAAP,CA9CR,CAgDH,CAjDD,CAmDA,OAASD,cAAT","sourcesContent":["import { POKEMON_ACTION, POKEAPI_INITIAL_STATE} from '../../../types';\nimport * as actionTypes from '../../actions/PokeAPI/actionTypes';\n\nconst initalState: POKEAPI_INITIAL_STATE = {\n    fetchedPokemon: null,\n    pokemon404: false,\n    selectedPokemon: null,\n    isLoading: false,\n    pokemonQuery: ''\n}\n\nconst PokeAPIReducer = (state: POKEAPI_INITIAL_STATE = initalState, action: POKEMON_ACTION) => {\n    switch(action.type) {\n        case actionTypes.FETCH_POKEMON_START:\n            return {\n                ...state,\n                isLoading: true,\n                selectedPokemon: null\n            };\n        case actionTypes.FETCH_POKEMON_SUCCESS:\n            const { base_experience, forms, game_indices, held_items, is_default, location_area_encounters, order, past_types, ...rest } = action.pokemon\n            return {\n                ...state,\n                fetchedPokemon: rest,\n                pokemon404: false,\n                isLoading: false\n            };\n        case actionTypes.FETCH_POKEMON_FAIL:\n            return {\n                ...state,\n                fetchedPokemon: null,\n                pokemon404: true,\n                isLoading: false\n            };\n        case actionTypes.SELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: action.pokemon\n            };\n        case actionTypes.DESELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: null\n            };\n        case actionTypes.UPDATE_POKEMON_QUERY:\n            if (action.pokemonQuery === \"\") {\n                return {\n                    ...state,\n                    pokemonQuery: action.pokemonQuery,\n                    fetchedPokemon: null,\n                    pokemon404: false\n                }\n            }\n            return {\n                ...state,\n                pokemonQuery: action.pokemonQuery\n            }\n        default:\n            return state;\n    }\n}\n\nexport { PokeAPIReducer };"]},"metadata":{},"sourceType":"module"}