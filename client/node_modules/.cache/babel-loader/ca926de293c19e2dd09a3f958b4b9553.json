{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useContext}from'react';import{withRouter}from'react-router-dom';import{Button,Grid,Modal,Paper,TextField,Typography,makeStyles}from'@material-ui/core';import AuthUserContext from'../../context/AuthUserContext';import CloseButton from'../UI/CloseButton/CloseButton';import{ApiManager}from'../../helpers/ApiManager';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialLoginData={email:'',password:''};var useStyles=makeStyles(function(theme){return{root:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',padding:theme.spacing(3),width:'50%',maxWidth:'50%'}};});var Login=function Login(_ref){var close=_ref.close,history=_ref.history;// Variables\nvar classes=useStyles();var _ref2=useContext(AuthUserContext),setAuthUser=_ref2.setAuthUser;// State\nvar _useState=useState(initialLoginData),_useState2=_slicedToArray(_useState,2),loginData=_useState2[0],setLoginData=_useState2[1];var _useState3=useState(initialLoginData),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];// Functions\nvar onChangeHandler=function onChangeHandler(e){setLoginData(_objectSpread(_objectSpread({},loginData),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmitHandler=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return ApiManager.login(loginData);case 4:response=_context.sent;close();setAuthUser(response.data.user);history.push(\"/profile/\".concat(response.data.user));_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);if(_context.t0.response.data.errors){setErrors(_objectSpread(_objectSpread({},errors),_context.t0.response.data.errors));}case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function onSubmitHandler(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Modal,{open:true,onClose:close,children:/*#__PURE__*/_jsx(\"form\",{onSubmit:onSubmitHandler,children:/*#__PURE__*/_jsxs(Grid,{container:true,component:Paper,spacing:3,className:classes.root,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h3\",children:\"Login\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"email\",placeholder:\"Email\",fullWidth:true,name:\"email\",onChange:onChangeHandler,error:errors.email!==\"\",helperText:errors.email})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"password\",placeholder:\"Password\",fullWidth:true,name:\"password\",onChange:onChangeHandler,error:errors.password!==\"\",helperText:errors.password})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",fullWidth:true,variant:\"contained\",onClick:onSubmitHandler,children:\"Submit\"})}),/*#__PURE__*/_jsx(CloseButton,{onClose:close})]})})});};export default withRouter(Login);","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/Login/Login.tsx"],"names":["useState","useContext","withRouter","Button","Grid","Modal","Paper","TextField","Typography","makeStyles","AuthUserContext","CloseButton","ApiManager","initialLoginData","email","password","useStyles","theme","root","position","top","left","transform","padding","spacing","width","maxWidth","Login","close","history","classes","setAuthUser","loginData","setLoginData","errors","setErrors","onChangeHandler","e","target","name","value","onSubmitHandler","preventDefault","login","response","data","user","push"],"mappings":"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","sourcesContent":["import { ChangeEvent, useState, useContext } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Button, Grid, Modal, Paper, TextField, Typography, makeStyles } from '@material-ui/core';\n\nimport AuthUserContext from '../../context/AuthUserContext';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport { ApiManager } from '../../helpers/ApiManager';\nimport { AUTHUSERCONTEXT } from '../../types';\n\ninterface PROPS extends RouteComponentProps {\n  close: () => void\n}\n\ninterface LOGIN_DATA {\n  email: string,\n  password: string\n}\n\nconst initialLoginData: LOGIN_DATA = {\n  email: '',\n  password: ''\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: theme.spacing(3),\n    width: '50%',\n    maxWidth: '50%'\n  }\n}));\n\nconst Login = ({ close, history }: PROPS) => {\n  // Variables\n  const classes = useStyles();\n  const { setAuthUser } = useContext(AuthUserContext) as AUTHUSERCONTEXT;\n\n  // State\n  const [loginData, setLoginData] = useState<LOGIN_DATA>(initialLoginData);\n  const [errors, setErrors] = useState<LOGIN_DATA>(initialLoginData);\n\n  // Functions\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setLoginData({\n      ...loginData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSubmitHandler = async (e: any) => {\n    e.preventDefault();\n    try {\n      const response = await ApiManager.login(loginData);\n      close();\n      setAuthUser(response.data.user);\n      history.push(`/profile/${response.data.user}`);\n    } catch(error: any) {\n      if(error.response.data.errors) {\n        setErrors({...errors, ...error.response.data.errors});\n      }\n    }\n  }\n\n  return (\n    <Modal\n      open\n      onClose={close}\n    >\n      <form onSubmit={onSubmitHandler}>\n        <Grid container component={Paper} spacing={3} className={classes.root}>\n          <Grid item xs={12}>\n            <Typography variant={\"h3\"}>Login</Typography>\n          </Grid>\n            <Grid item xs={12}>\n              <TextField\n                  variant={\"outlined\"} \n                  type=\"email\" \n                  placeholder=\"Email\" \n                  fullWidth \n                  name=\"email\"\n                  onChange={onChangeHandler}\n                  error={errors.email !== \"\"}\n                  helperText={errors.email}\n                />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant={\"outlined\"} \n                type=\"password\"  \n                placeholder=\"Password\" \n                fullWidth \n                name=\"password\"\n                onChange={onChangeHandler}\n                error={errors.password !== \"\"}\n                helperText={errors.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button type={\"submit\"} color={\"primary\"} fullWidth variant={\"contained\"} onClick={onSubmitHandler}>Submit</Button>\n            </Grid>\n          <CloseButton onClose={close} />\n        </Grid>\n      </form>\n    </Modal>\n  )\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}