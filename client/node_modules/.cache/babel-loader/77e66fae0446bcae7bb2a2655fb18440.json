{"ast":null,"code":"import{Card,Grid,Typography,capitalize}from'@material-ui/core';import PokemonPortrait from'../PokemonPortrait/PokemonPortrait';import PokemonPortraitStyles from'../PokemonPortrait/PokemonPortraitStyles';import{makeStyles}from'@material-ui/core';import CloseButton from'../UI/CloseButton/CloseButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{cardRoot:{backgroundColor:\"yellowgreen\",color:\"white\",padding:theme.spacing(4),borderRadius:theme.spacing(1)}};});var PokemonLineup=function PokemonLineup(props){var classes=useStyles();var pokemonPortraitClasses=PokemonPortraitStyles();var isAuthProfile=props.isAuthProfile,pokemonLineup=props.pokemonLineup,doRemovePokemon=props.doRemovePokemon;var pokemonLineupDisplay=null;if(pokemonLineup&&pokemonLineup.length===0){pokemonLineupDisplay=/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{className:classes.cardRoot,children:/*#__PURE__*/_jsx(Typography,{children:\"Search for pokemon to add to your lineup. Maximum (6).\"})})})});}else{pokemonLineupDisplay=/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,children:pokemonLineup&&pokemonLineup.map(function(pokemon,i){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(PokemonPortrait,{children:[/*#__PURE__*/_jsx(\"span\",{className:pokemonPortraitClasses.Pokemon_Lineup_Number,children:i+1}),isAuthProfile&&/*#__PURE__*/_jsx(CloseButton,{disableContainer:true,title:\"Remove \"+capitalize(pokemon.name),onClose:function onClose(){return doRemovePokemon(pokemon);}}),/*#__PURE__*/_jsx(\"img\",{src:pokemon.sprites.front_default,alt:pokemon.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:pokemonPortraitClasses.Pokemon_Name,children:/*#__PURE__*/_jsx(\"strong\",{children:pokemon.name})})]},\"\".concat(i+1))},pokemon.id);})});}return pokemonLineupDisplay;};export default PokemonLineup;","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/PokemonLineup/PokemonLineup.tsx"],"names":["Card","Grid","Typography","capitalize","PokemonPortrait","PokemonPortraitStyles","makeStyles","CloseButton","useStyles","theme","cardRoot","backgroundColor","color","padding","spacing","borderRadius","PokemonLineup","props","classes","pokemonPortraitClasses","isAuthProfile","pokemonLineup","doRemovePokemon","pokemonLineupDisplay","length","map","pokemon","i","Pokemon_Lineup_Number","name","sprites","front_default","Pokemon_Name","id"],"mappings":"AAAA,OAASA,IAAT,CAAeC,IAAf,CAAqBC,UAArB,CAAiCC,UAAjC,KAAmD,mBAAnD,CAGA,MAAOC,CAAAA,eAAP,KAA4B,oCAA5B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0CAAlC,CACA,OAASC,UAAT,KAAkC,mBAAlC,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,C,wFAQA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAACG,KAAD,QAAmB,CAC5CC,QAAQ,CAAE,CACNC,eAAe,CAAE,aADX,CAENC,KAAK,CAAE,OAFD,CAGNC,OAAO,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAHH,CAINC,YAAY,CAAEN,KAAK,CAACK,OAAN,CAAc,CAAd,CAJR,CADkC,CAAnB,EAAD,CAA5B,CASA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAkB,CACpC,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CACA,GAAMW,CAAAA,sBAAsB,CAAGd,qBAAqB,EAApD,CACA,GAAQe,CAAAA,aAAR,CAA0DH,KAA1D,CAAQG,aAAR,CAAuBC,aAAvB,CAA0DJ,KAA1D,CAAuBI,aAAvB,CAAsCC,eAAtC,CAA0DL,KAA1D,CAAsCK,eAAtC,CAEA,GAAIC,CAAAA,oBAAoB,CAAG,IAA3B,CAEA,GAAIF,aAAa,EAAIA,aAAa,CAACG,MAAd,GAAyB,CAA9C,CAAiD,CAC7CD,oBAAoB,cAChB,KAAC,IAAD,EAAM,SAAS,KAAf,uBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,IAAD,EAAM,SAAS,CAAEL,OAAO,CAACR,QAAzB,uBACI,KAAC,UAAD,qEADJ,EADJ,EADJ,EADJ,CASH,CAVD,IAUO,CACHa,oBAAoB,cAChB,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,UACKF,aAAa,EAAIA,aAAa,CAACI,GAAd,CAAkB,SAACC,OAAD,CAAmBC,CAAnB,CAAiC,CACjE,mBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACI,MAAC,eAAD,yBACI,aAAM,SAAS,CAAER,sBAAsB,CAACS,qBAAxC,UAAgED,CAAC,CAAG,CAApE,EADJ,CAEKP,aAAa,eAAI,KAAC,WAAD,EAAa,gBAAgB,CAAE,IAA/B,CAAqC,KAAK,CAAE,UAAYjB,UAAU,CAACuB,OAAO,CAACG,IAAT,CAAlE,CAAkF,OAAO,CAAE,yBAAMP,CAAAA,eAAe,CAACI,OAAD,CAArB,EAA3F,EAFtB,cAGI,YAAK,GAAG,CAAEA,OAAO,CAACI,OAAR,CAAgBC,aAA1B,CAAyC,GAAG,CAAEL,OAAO,CAACG,IAAtD,EAHJ,cAII,KAAC,UAAD,EAAY,OAAO,CAAE,OAArB,CAA8B,SAAS,CAAEV,sBAAsB,CAACa,YAAhE,uBAA8E,wBAASN,OAAO,CAACG,IAAjB,EAA9E,EAJJ,aAAyBF,CAAC,CAAG,CAA7B,EADJ,EAA+BD,OAAO,CAACO,EAAvC,CADJ,CAUH,CAXiB,CADtB,EADJ,CAgBH,CAED,MAAOV,CAAAA,oBAAP,CACH,CArCD,CAuCA,cAAeP,CAAAA,aAAf","sourcesContent":["import { Card, Grid, Typography, capitalize } from '@material-ui/core';\r\nimport { POKEAPI_INITIAL_STATE } from '../../types';\r\nimport { POKEMON } from '../../types';\r\nimport PokemonPortrait from '../PokemonPortrait/PokemonPortrait';\r\nimport PokemonPortraitStyles from '../PokemonPortrait/PokemonPortraitStyles';\r\nimport { makeStyles, Theme } from '@material-ui/core';\r\nimport CloseButton from '../UI/CloseButton/CloseButton';\r\n\r\ninterface PROPS extends Partial<POKEAPI_INITIAL_STATE> {\r\n    doRemovePokemon: (pokemon: POKEMON) => void,\r\n    isAuthProfile: Boolean,\r\n    pokemonLineup: POKEMON[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    cardRoot: {\r\n        backgroundColor: \"yellowgreen\",\r\n        color: \"white\",\r\n        padding: theme.spacing(4),\r\n        borderRadius: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst PokemonLineup = (props: PROPS) => {\r\n    const classes = useStyles();\r\n    const pokemonPortraitClasses = PokemonPortraitStyles();\r\n    const { isAuthProfile, pokemonLineup, doRemovePokemon } = props;\r\n\r\n    let pokemonLineupDisplay = null;\r\n\r\n    if (pokemonLineup && pokemonLineup.length === 0) {\r\n        pokemonLineupDisplay = (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.cardRoot}>\r\n                        <Typography>Search for pokemon to add to your lineup. Maximum (6).</Typography>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    } else {\r\n        pokemonLineupDisplay = (\r\n            <Grid container spacing={1}>\r\n                {pokemonLineup && pokemonLineup.map((pokemon: POKEMON, i: number) => {\r\n                    return (\r\n                        <Grid item xs={12} md={4} key={pokemon.id}>\r\n                            <PokemonPortrait key={`${i + 1}`}>\r\n                                <span className={pokemonPortraitClasses.Pokemon_Lineup_Number}>{i + 1}</span>\r\n                                {isAuthProfile && <CloseButton disableContainer={true} title={\"Remove \" + capitalize(pokemon.name)} onClose={() => doRemovePokemon(pokemon)} />}\r\n                                <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n                                <Typography variant={\"body1\"} className={pokemonPortraitClasses.Pokemon_Name}><strong>{pokemon.name}</strong></Typography>\r\n                            </PokemonPortrait>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return pokemonLineupDisplay;\r\n};\r\n\r\nexport default PokemonLineup;"]},"metadata":{},"sourceType":"module"}