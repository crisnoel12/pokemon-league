{"ast":null,"code":"var _jsxFileName = \"/Users/cris/Code/pokemon-league/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport Header from './components/UI/Header/Header';\nimport Hero from './components/Hero/Hero';\nimport Profile from './containers/Profile/Profile';\nimport PageNotFound from './components/UI/PageNotFound/PageNotFound';\nimport axios from 'axios';\nimport AuthUserContext from './context/AuthUserContext';\nimport SnackbarContext from './context/SnackbarContext';\nimport Loader from './components/UI/Loader/Loader';\nimport Trainers from './components/Trainers/Trainers';\nimport { ApiManager } from './helpers/ApiManager';\nimport SnackbarMessage from './components/UI/SnackbarMessage/SnackbarMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  App: {\n    textAlign: 'center',\n    height: '100%'\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n});\n\nconst App = () => {\n  _s();\n\n  // variables\n  const classes = useStyles(); // state\n\n  const [authUser, setAuthUser] = useState(null);\n  const [snackbar, setSnackbar] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // useEffect\n\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      const {\n        data\n      } = await ApiManager.getCSRFToken();\n      axios.defaults.headers.post['X-CSRF-Token'] = data.csrfToken;\n      axios.defaults.headers.patch['X-CSRF-Token'] = data.csrfToken;\n    };\n\n    const isLoggedIn = async () => {\n      try {\n        const response = await ApiManager.checkIsLoggedIn();\n        setAuthUser(response.data.user);\n        setIsLoading(false);\n      } catch (err) {\n        const {\n          response,\n          response: {\n            data,\n            data: {\n              error\n            }\n          }\n        } = err;\n        console.error(error);\n\n        if (error && error.errors && error.errors.TokenExpiredError) {\n          alert(\"Token expired. Please login again\");\n          return;\n        }\n\n        if (response.status === 500) {\n          setSnackbar({\n            severity: 'error',\n            message: \"Internal server error\"\n          });\n        }\n\n        setIsLoading(false);\n      }\n    };\n\n    getCsrfToken();\n    isLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.App,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SnackbarContext.Provider, {\n      value: {\n        snackbar,\n        setSnackbar\n      },\n      children: [/*#__PURE__*/_jsxDEV(AuthUserContext.Provider, {\n        value: {\n          authUser,\n          setAuthUser\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile/:id\",\n            render: props => /*#__PURE__*/_jsxDEV(Profile, {\n              authUser: authUser,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/trainers\",\n            render: props => /*#__PURE__*/_jsxDEV(Trainers, {\n              authUser: authUser,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Hero\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            component: PageNotFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), snackbar && /*#__PURE__*/_jsxDEV(SnackbarMessage, {\n        snackbar: snackbar,\n        onClose: () => setSnackbar(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HfG5cGC5sZ7RpaYTZjUgOq49/I0=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/App.tsx"],"names":["useEffect","useState","Switch","Route","makeStyles","Header","Hero","Profile","PageNotFound","axios","AuthUserContext","SnackbarContext","Loader","Trainers","ApiManager","SnackbarMessage","useStyles","App","textAlign","height","loader","position","top","left","transform","classes","authUser","setAuthUser","snackbar","setSnackbar","isLoading","setIsLoading","getCsrfToken","data","getCSRFToken","defaults","headers","post","csrfToken","patch","isLoggedIn","response","checkIsLoggedIn","user","err","error","console","errors","TokenExpiredError","alert","status","severity","message","props"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Header from './components/UI/Header/Header';\nimport Hero from './components/Hero/Hero';\nimport Profile from './containers/Profile/Profile';\nimport PageNotFound from './components/UI/PageNotFound/PageNotFound';\nimport axios from 'axios';\nimport AuthUserContext from './context/AuthUserContext';\nimport SnackbarContext from './context/SnackbarContext';\nimport Loader from './components/UI/Loader/Loader';\nimport Trainers from './components/Trainers/Trainers';\nimport { AUTHUSER } from './types';\nimport { ApiManager } from './helpers/ApiManager';\nimport SnackbarMessage from './components/UI/SnackbarMessage/SnackbarMessage';\n\nconst useStyles = makeStyles({\n  App: {\n    textAlign: 'center',\n    height: '100%'\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n});\n\nconst App = () => {\n  // variables\n  const classes = useStyles();\n\n  // state\n  const [authUser, setAuthUser] = useState<AUTHUSER>(null);\n  const [snackbar, setSnackbar] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // useEffect\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      const { data } = await ApiManager.getCSRFToken();\n      axios.defaults.headers.post['X-CSRF-Token'] = data.csrfToken;\n      axios.defaults.headers.patch['X-CSRF-Token'] = data.csrfToken;\n    };\n    \n\n    const isLoggedIn = async () => {\n      try {\n        const response = await ApiManager.checkIsLoggedIn();\n        setAuthUser(response.data.user);\n        setIsLoading(false);\n      } catch (err: any) {\n          const { response, response: { data, data: { error }} }: any = err;\n          console.error(error);\n          if (error && error.errors && error.errors.TokenExpiredError) {\n            alert(\"Token expired. Please login again\");\n            return;\n          }\n          if (response.status === 500) {\n            setSnackbar({\n              severity: 'error',\n              message: \"Internal server error\"\n            });\n          }\n          setIsLoading(false);  \n      }\n    }\n    \n    getCsrfToken();\n    isLoggedIn();\n  }, []);\n\n  return (\n    <div className={classes.App}>\n      { isLoading ? (\n        <Loader />\n      ) : (\n        <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n          <AuthUserContext.Provider value={{ authUser, setAuthUser }}>\n            <Header />\n            <Switch>\n              <Route path=\"/profile/:id\" render={(props) => <Profile authUser={authUser} {...props} />}/>\n              <Route path=\"/trainers\" render={(props) => <Trainers authUser={authUser} {...props} />}/>\n              <Route path=\"/\" exact component={Hero}/>  \n              <Route path=\"*\" component={PageNotFound}/>\n            </Switch>\n          </AuthUserContext.Provider>\n          {snackbar && (\n            <SnackbarMessage \n              snackbar={snackbar} \n              onClose={() => setSnackbar(null)} \n            />\n          )}\n        </SnackbarContext.Provider>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}