{"ast":null,"code":"var _jsxFileName = \"/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonData.tsx\";\nimport { Card, Divider, Modal, Table, TableCell, TableRow, Typography, capitalize, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport CloseButton from \"../UI/CloseButton/CloseButton\";\nimport PokemonDataStyles from \"./PokemonDataStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonData = props => {\n  const pokemonDataClasses = PokemonDataStyles();\n  const {\n    selectedPokemon,\n    deselectPokemon\n  } = props;\n  let pokemonData = null;\n\n  if (selectedPokemon) {\n    let pokemon = selectedPokemon;\n    let pokemonTypes = pokemon.types.map((type, i, arr) => {\n      if (arr.length - 1 === i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: capitalize(type.type.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"inherit\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: capitalize(type.type.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \",\\xA0\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      }\n    });\n    let pokemonAbilities = pokemon.abilities.map((ability, i, arr) => {\n      if (arr.length - 1 === i) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: capitalize(ability.ability.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"inherit\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: capitalize(ability.ability.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \",\\xA0\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }\n    });\n    let pokemonStats = pokemon.stats.slice(0).map((stat, i) => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        classes: {\n          root: pokemonDataClasses.listItemRoot\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          classes: {\n            root: pokemonDataClasses.uppercase\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [stat.stat.name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"inherit\",\n            children: stat.base_stat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    });\n    pokemonData = /*#__PURE__*/_jsxDEV(Modal, {\n      open: selectedPokemon ? true : false,\n      onClose: deselectPokemon,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: pokemonDataClasses.cardRoot,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\",\n            padding: \"32px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokemon.sprites.front_default,\n            alt: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClose: deselectPokemon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: capitalize(pokemon.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                variant: \"head\",\n                children: \"Type(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pokemonTypes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                variant: \"head\",\n                children: \"Abilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pokemonAbilities\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                variant: \"head\",\n                children: \"Stats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  children: pokemonStats\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  return pokemonData;\n};\n\n_c = PokemonData;\nexport default PokemonData;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonData\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/PokemonData/PokemonData.tsx"],"names":["Card","Divider","Modal","Table","TableCell","TableRow","Typography","capitalize","List","ListItem","ListItemText","CloseButton","PokemonDataStyles","PokemonData","props","pokemonDataClasses","selectedPokemon","deselectPokemon","pokemonData","pokemon","pokemonTypes","types","map","type","i","arr","length","name","pokemonAbilities","abilities","ability","pokemonStats","stats","slice","stat","root","listItemRoot","uppercase","base_stat","cardRoot","position","padding","sprites","front_default"],"mappings":";AAAA,SACEA,IADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,UAPF,EAQEC,UARF,EASEC,IATF,EAUEC,QAVF,EAWEC,YAXF,QAYO,mBAZP;AAcA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAkB;AACpC,QAAMC,kBAAkB,GAAGH,iBAAiB,EAA5C;AACA,QAAM;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAuCH,KAA7C;AACA,MAAII,WAAW,GAAG,IAAlB;;AAEA,MAAIF,eAAJ,EAAqB;AACnB,QAAIG,OAAO,GAAGH,eAAd;AACA,QAAII,YAAY,GAAGD,OAAO,CAACE,KAAR,CAAcC,GAAd,CACjB,CAACC,IAAD,EAA+BC,CAA/B,EAA0CC,GAA1C,KAAyD;AACvD,UAAIA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBF,CAAvB,EAA0B;AACxB,4BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,SAArB;AAAA,iCACE;AAAA,sBAASjB,UAAU,CAACgB,IAAI,CAACA,IAAL,CAAUI,IAAX;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCH,CAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND,MAMO;AACL,4BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,SAArB;AAAA,kCACE;AAAA,sBAASjB,UAAU,CAACgB,IAAI,CAACA,IAAL,CAAUI,IAAX;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,WAAqCH,CAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF,KAfgB,CAAnB;AAiBA,QAAII,gBAAgB,GAAGT,OAAO,CAACU,SAAR,CAAkBP,GAAlB,CACrB,CAACQ,OAAD,EAAkCN,CAAlC,EAA6CC,GAA7C,KAA4D;AAC1D,UAAIA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBF,CAAvB,EAA0B;AACxB,4BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,SAArB;AAAA,iCACE;AAAA,sBAASjB,UAAU,CAACuB,OAAO,CAACA,OAAR,CAAgBH,IAAjB;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,WAAqCH,CAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND,MAMO;AACL,4BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,SAArB;AAAA,kCACE;AAAA,sBAASjB,UAAU,CAACuB,OAAO,CAACA,OAAR,CAAgBH,IAAjB;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,WAAqCH,CAArC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF,KAfoB,CAAvB;AAiBA,QAAIO,YAAY,GAAGZ,OAAO,CAACa,KAAR,CAChBC,KADgB,CACV,CADU,EAEhBX,GAFgB,CAEZ,CAACY,IAAD,EAA+BV,CAA/B,KAA6C;AAChD,0BACE,QAAC,QAAD;AAAkB,QAAA,OAAO,EAAE;AAAEW,UAAAA,IAAI,EAAEpB,kBAAkB,CAACqB;AAA3B,SAA3B;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,iBAAiB,MADnB;AAEE,UAAA,OAAO,EAAE;AAAED,YAAAA,IAAI,EAAEpB,kBAAkB,CAACsB;AAA3B,WAFX;AAAA,kCAIE;AAAA,uBAASH,IAAI,CAACA,IAAL,CAAUP,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAIqC,GAJrC,eAKE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,SAArB;AAAA,sBAAiCO,IAAI,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAed,CAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAdgB,CAAnB;AAeAN,IAAAA,WAAW,gBACT,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,eAAe,GAAG,IAAH,GAAU,KAAtC;AAA6C,MAAA,OAAO,EAAEC,eAAtD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEF,kBAAkB,CAACwB,QAApC;AAAA,+BACE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,UAAZ;AAAwBC,YAAAA,OAAO,EAAE;AAAjC,WAAZ;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEtB,OAAO,CAACuB,OAAR,CAAgBC,aAA1B;AAAyC,YAAA,GAAG,EAAExB,OAAO,CAACQ;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEV;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,IAArB;AAAA,sBAA4BV,UAAU,CAACY,OAAO,CAACQ,IAAT;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,KAAD;AAAA,oCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA,0BAAYP;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA,0BAAYQ;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eASE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA,uCACE,QAAC,IAAD;AAAA,4BAAOG;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAED,SAAOb,WAAP;AACD,CAvFD;;KAAML,W;AAyFN,eAAeA,WAAf","sourcesContent":["import {\n  Card,\n  Divider,\n  Modal,\n  Table,\n  TableCell,\n  TableRow,\n  Typography,\n  capitalize,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { POKEAPI_INITIAL_STATE } from \"../../types\";\nimport CloseButton from \"../UI/CloseButton/CloseButton\";\nimport PokemonDataStyles from \"./PokemonDataStyles\";\n\ninterface PROPS extends Partial<POKEAPI_INITIAL_STATE> {\n  deselectPokemon: () => void;\n}\n\nconst PokemonData = (props: PROPS) => {\n  const pokemonDataClasses = PokemonDataStyles();\n  const { selectedPokemon, deselectPokemon } = props;\n  let pokemonData = null;\n\n  if (selectedPokemon) {\n    let pokemon = selectedPokemon;\n    let pokemonTypes = pokemon.types.map(\n      (type: { [key: string]: any }, i: number, arr: any[]) => {\n        if (arr.length - 1 === i) {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(type.type.name)}</strong>\n            </Typography>\n          );\n        } else {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(type.type.name)}</strong>,&nbsp;\n            </Typography>\n          );\n        }\n      }\n    );\n    let pokemonAbilities = pokemon.abilities.map(\n      (ability: { [key: string]: any }, i: number, arr: any[]) => {\n        if (arr.length - 1 === i) {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(ability.ability.name)}</strong>\n            </Typography>\n          );\n        } else {\n          return (\n            <Typography variant={\"inherit\"} key={i}>\n              <strong>{capitalize(ability.ability.name)}</strong>,&nbsp;\n            </Typography>\n          );\n        }\n      }\n    );\n    let pokemonStats = pokemon.stats\n      .slice(0)\n      .map((stat: { [key: string]: any }, i: number) => {\n        return (\n          <ListItem key={i} classes={{ root: pokemonDataClasses.listItemRoot }}>\n            <ListItemText\n              disableTypography\n              classes={{ root: pokemonDataClasses.uppercase }}\n            >\n              <strong>{stat.stat.name}:</strong>{\" \"}\n              <Typography variant={\"inherit\"}>{stat.base_stat}</Typography>\n            </ListItemText>\n          </ListItem>\n        );\n      });\n    pokemonData = (\n      <Modal open={selectedPokemon ? true : false} onClose={deselectPokemon}>\n        <Card className={pokemonDataClasses.cardRoot}>\n          <div style={{ position: \"relative\", padding: \"32px\" }}>\n            <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n            <CloseButton onClose={deselectPokemon} />\n            <Typography variant={\"h3\"}>{capitalize(pokemon.name)}</Typography>\n            <Divider />\n            <Table>\n              <TableRow>\n                <TableCell variant=\"head\">Type(s)</TableCell>\n                <TableCell>{pokemonTypes}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell variant=\"head\">Abilities</TableCell>\n                <TableCell>{pokemonAbilities}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell variant=\"head\">Stats</TableCell>\n                <TableCell>\n                  <List>{pokemonStats}</List>\n                </TableCell>\n              </TableRow>\n            </Table>\n          </div>\n        </Card>\n      </Modal>\n    );\n  }\n\n  return pokemonData;\n};\n\nexport default PokemonData;\n"]},"metadata":{},"sourceType":"module"}