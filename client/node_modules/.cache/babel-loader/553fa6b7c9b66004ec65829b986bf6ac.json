{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar pMap = require('p-map');\n\nvar cache = require('memory-cache');\n\nvar _require = require('./endpoints.js'),\n    endpoints = _require.endpoints;\n\nvar _require2 = require('./rootEndpoints.js'),\n    rootEndpoints = _require2.rootEndpoints;\n\nvar _require3 = require('./getter.js'),\n    getJSON = _require3.getJSON;\n\nvar _require4 = require('./values.js'),\n    Values = _require4.Values;\n\nvar _require5 = require('./error.js'),\n    handleError = _require5.handleError;\n\nvar Pokedex = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Pokedex(config) {\n    var _this = this;\n\n    _classCallCheck(this, Pokedex);\n\n    this.values = new Values(config, new cache.Cache()); // add to Pokedex.prototype all our endpoint functions\n\n    endpoints.forEach(function (endpoint) {\n      _this[endpoint[0]] = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input, cb) {\n          var mapper, mappedResults;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n\n                  mapper = /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n                      var queryRes;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return getJSON(_this.values, \"\".concat(_this.values.protocol).concat(_this.values.hostName).concat(_this.values.versionPath).concat(endpoint[1], \"/\").concat(name, \"/\"));\n\n                            case 2:\n                              queryRes = _context.sent;\n                              return _context.abrupt(\"return\", queryRes);\n\n                            case 4:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function mapper(_x3) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n\n                  if (!input) {\n                    _context2.next = 13;\n                    break;\n                  }\n\n                  if (!(typeof input === 'number' || typeof input === 'string')) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", getJSON(_this.values, \"\".concat(_this.values.protocol).concat(_this.values.hostName).concat(_this.values.versionPath).concat(endpoint[1], \"/\").concat(input, \"/\"), cb));\n\n                case 7:\n                  if (!(typeof input === 'object')) {\n                    _context2.next = 13;\n                    break;\n                  }\n\n                  _context2.next = 10;\n                  return pMap(input, mapper, {\n                    concurrency: 4\n                  });\n\n                case 10:\n                  mappedResults = _context2.sent;\n\n                  if (cb) {\n                    cb(mappedResults);\n                  }\n\n                  return _context2.abrupt(\"return\", mappedResults);\n\n                case 13:\n                  _context2.next = 18;\n                  break;\n\n                case 15:\n                  _context2.prev = 15;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  handleError(_context2.t0, cb);\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 15]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    });\n    rootEndpoints.forEach(function (rootEndpoint) {\n      _this[rootEndpoint[0]] = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(config, cb) {\n          var limit, offset;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  limit = _this.values.limit;\n                  offset = _this.values.offset;\n\n                  if (config) {\n                    if (config.hasOwnProperty('limit')) {\n                      limit = config.limit;\n                    }\n\n                    if (config.hasOwnProperty('offset')) {\n                      offset = config.offset;\n                    }\n                  }\n\n                  return _context3.abrupt(\"return\", getJSON(_this.values, \"\".concat(_this.values.protocol).concat(_this.values.hostName).concat(_this.values.versionPath).concat(rootEndpoint[1], \"?limit=\").concat(limit, \"&offset=\").concat(offset), cb));\n\n                case 7:\n                  _context3.prev = 7;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  handleError(_context3.t0, cb);\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[0, 7]]);\n        }));\n\n        return function (_x4, _x5) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n    });\n  }\n\n  _createClass(Pokedex, [{\n    key: \"resource\",\n    value: function () {\n      var _resource = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path, cb) {\n        var _this2 = this;\n\n        var result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n\n                if (!(typeof path === 'string')) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                result = getJSON(this.values, path);\n                _context4.next = 10;\n                break;\n\n              case 5:\n                if (!(typeof path === 'object')) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                result = Promise.all(path.map(function (p) {\n                  return getJSON(_this2.values, p);\n                }));\n                _context4.next = 10;\n                break;\n\n              case 9:\n                throw 'String or Array required';\n\n              case 10:\n                if (cb) {\n                  cb(result); // TODO: check if this callback is called with a pending Promise or an actual result\n                }\n\n                return _context4.abrupt(\"return\", result);\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](0);\n                throw new Error(_context4.t0);\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 14]]);\n      }));\n\n      function resource(_x6, _x7) {\n        return _resource.apply(this, arguments);\n      }\n\n      return resource;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.values;\n    }\n  }, {\n    key: \"cacheSize\",\n    value: function cacheSize() {\n      // Retuns the current number of entries in the cache\n      return this.values.cache.size();\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      // Deletes all keys in cache\n      this.values.cache.clear();\n    }\n  }]);\n\n  return Pokedex;\n}();\n\nmodule.exports = Pokedex;","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/node_modules/pokedex-promise-v2/src/index.js"],"names":["pMap","require","cache","endpoints","rootEndpoints","getJSON","Values","handleError","Pokedex","config","values","Cache","forEach","endpoint","input","cb","mapper","name","protocol","hostName","versionPath","queryRes","concurrency","mappedResults","rootEndpoint","limit","offset","hasOwnProperty","path","result","Promise","all","map","p","Error","size","clear","module","exports"],"mappings":"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","sourcesContent":["const pMap = require('p-map')\nconst cache = require('memory-cache')\n\nconst { endpoints } = require('./endpoints.js')\nconst { rootEndpoints } = require('./rootEndpoints.js')\nconst { getJSON } = require('./getter.js')\nconst { Values } = require('./values.js')\nconst { handleError } = require('./error.js')\n\n\nclass Pokedex {\n    constructor(config) {\n        this.values = new Values(config, new cache.Cache())\n        \n        // add to Pokedex.prototype all our endpoint functions\n        endpoints.forEach(endpoint => {\n            this[endpoint[0]] = async (input, cb) => {\n                try {\n                    const mapper = async name => {\n                        const queryRes = await getJSON(this.values, `${this.values.protocol}${this.values.hostName}${this.values.versionPath}${endpoint[1]}/${name}/`)\n                        return queryRes\n                    }\n    \n                    if (input) {\n    \n                        // if the user has submitted a Name or an Id, return the Json promise\n                        if (typeof input === 'number' || typeof input === 'string') {\n                            return getJSON(this.values, `${this.values.protocol}${this.values.hostName}${this.values.versionPath}${endpoint[1]}/${input}/`, cb) \n                        }\n    \n                        // if the user has submitted an Array\n                        // return a new promise which will resolve when all getJSON calls are ended\n                        else if (typeof input === 'object') {\n                            // fetch data asynchronously to be faster\n                            const mappedResults = await pMap(input, mapper, {concurrency: 4})\n                            if (cb) {\n                                cb(mappedResults)\n                            }\n                            return mappedResults\n                        }\n                    }\n                } catch (error) {\n                    handleError(error, cb)\n                }\n            }\n        })\n\n        rootEndpoints.forEach(rootEndpoint => {\n            this[rootEndpoint[0]] = async (config, cb) => {\n                try {\n                    let limit = this.values.limit\n                    let offset = this.values.offset\n                    if (config) {\n                        if (config.hasOwnProperty('limit')) {\n                            limit = config.limit\n                        }\n                        if (config.hasOwnProperty('offset')) {\n                            offset = config.offset\n                        }\n                    }\n                    return getJSON(this.values, `${this.values.protocol}${this.values.hostName}${this.values.versionPath}${rootEndpoint[1]}?limit=${limit}&offset=${offset}`, cb)\n                } catch (error) {\n                    handleError(error, cb)\n                }\n            }\n        })\n    }\n\n    async resource(path, cb) {\n        let result\n        try {\n            if (typeof path === 'string') {\n                result = getJSON(this.values, path)\n            } else if (typeof path === 'object') {\n                result = Promise.all(path.map(p => getJSON(this.values, p)))\n            } else {\n                throw 'String or Array required'\n            }\n            if (cb) {\n                cb(result) // TODO: check if this callback is called with a pending Promise or an actual result\n            }\n            return result\n        } catch (error) {\n            throw new Error(error)\n        }\n    }\n\n    getConfig() {\n        return this.values\n    }\n\n    cacheSize() {\n        // Retuns the current number of entries in the cache\n        return this.values.cache.size()\n    }\n\n    clearCache() {\n        // Deletes all keys in cache\n        this.values.cache.clear()\n    }\n}\n\nmodule.exports = Pokedex\n"]},"metadata":{},"sourceType":"script"}