{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport { ApiManager } from '../../../helpers/ApiManager';\n\nfunction dispatchToReducer(dispatch, actionType, payload, other) {\n  dispatch({\n    type: actionType,\n    payload,\n    ...other\n  });\n  return payload;\n}\n\nexport const loadProfile = (authUser, userId) => {\n  return async dispatch => {\n    dispatch(loadProfileStart());\n\n    try {\n      const success = await ApiManager.getProfile(userId);\n      dispatchToReducer(dispatch, actionTypes.LOAD_PROFILE_SUCCESS, success.data, {\n        isAuthProfile: authUser === userId\n      });\n    } catch (error) {\n      console.error(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.LOAD_PROFILE_FAIL, error);\n    }\n  };\n};\nexport const loadProfileStart = () => {\n  return {\n    type: actionTypes.LOAD_PROFILE_START\n  };\n};\nexport const addPokemonToLineup = (authUser, pokemon, pokemonLineup) => {\n  return async dispatch => {\n    dispatch(addPokemonToLineUpStart());\n    const newPokemonLineup = {\n      pokemonLineup: pokemonLineup.concat(pokemon)\n    };\n\n    try {\n      const success = await ApiManager.updateProfile(authUser, newPokemonLineup);\n      dispatchToReducer(dispatch, actionTypes.ADD_POKEMON_TO_LINEUP_SUCCESS, pokemon);\n    } catch (error) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.ADD_POKEMON_TO_LINEUP_FAIL, error);\n    }\n  };\n};\nexport const addPokemonToLineUpStart = () => {\n  return {\n    type: actionTypes.ADD_POKEMON_TO_LINEUP_START\n  };\n};\nexport const removePokemonFromLineup = (authUser, pokemon, pokemonLineup) => {\n  return async dispatch => {\n    dispatch(removePokemonFromLineupStart());\n    const newPokemonLineup = {\n      pokemonLineup: pokemonLineup.filter(p => p.id !== pokemon.id)\n    };\n\n    try {\n      const success = await ApiManager.updateProfile(authUser, newPokemonLineup);\n      dispatchToReducer(dispatch, actionTypes.REMOVE_POKEMON_FROM_LINEUP_SUCCESS, pokemon);\n    } catch (error) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.REMOVE_POKEMON_FROM_LINEUP_FAIL, error);\n    }\n  };\n};\nexport const removePokemonFromLineupStart = () => {\n  return {\n    type: actionTypes.REMOVE_POKEMON_FROM_LINEUP_START\n  };\n};","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/store/actions/UserProfile/actionCreators.ts"],"names":["actionTypes","ApiManager","dispatchToReducer","dispatch","actionType","payload","other","type","loadProfile","authUser","userId","loadProfileStart","success","getProfile","LOAD_PROFILE_SUCCESS","data","isAuthProfile","error","console","response","LOAD_PROFILE_FAIL","LOAD_PROFILE_START","addPokemonToLineup","pokemon","pokemonLineup","addPokemonToLineUpStart","newPokemonLineup","concat","updateProfile","ADD_POKEMON_TO_LINEUP_SUCCESS","log","ADD_POKEMON_TO_LINEUP_FAIL","ADD_POKEMON_TO_LINEUP_START","removePokemonFromLineup","removePokemonFromLineupStart","filter","p","id","REMOVE_POKEMON_FROM_LINEUP_SUCCESS","REMOVE_POKEMON_FROM_LINEUP_FAIL","REMOVE_POKEMON_FROM_LINEUP_START"],"mappings":"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","sourcesContent":["import { AUTHUSER, POKEMON } from '../../../types';\nimport * as actionTypes from './actionTypes';\nimport { ApiManager } from '../../../helpers/ApiManager';\nimport { Dispatch } from 'redux';\n\nfunction dispatchToReducer(dispatch: Dispatch, actionType: any, payload: any, other?: any) {\n  dispatch({ type: actionType, payload, ...other });\n  return payload;\n}\n\nexport const loadProfile = (authUser: AUTHUSER, userId: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(loadProfileStart());\n    try {\n      const success: any = await ApiManager.getProfile(userId);\n      dispatchToReducer(dispatch, actionTypes.LOAD_PROFILE_SUCCESS, success.data, { isAuthProfile: authUser === userId });\n    } catch (error: any) {\n      console.error(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.LOAD_PROFILE_FAIL, error);\n    }\n  }\n}\n\nexport const loadProfileStart = () => {\n  return {\n    type: actionTypes.LOAD_PROFILE_START\n  }\n}\n\n\nexport const addPokemonToLineup = (authUser: AUTHUSER, pokemon: POKEMON, pokemonLineup: POKEMON[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(addPokemonToLineUpStart());\n    const newPokemonLineup = {\n      pokemonLineup: pokemonLineup.concat(pokemon)\n    };\n    try {\n      const success = await ApiManager.updateProfile(authUser, newPokemonLineup);\n      dispatchToReducer(dispatch, actionTypes.ADD_POKEMON_TO_LINEUP_SUCCESS, pokemon);\n    } catch (error: any) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.ADD_POKEMON_TO_LINEUP_FAIL, error);\n    }\n  }\n}\n\nexport const addPokemonToLineUpStart = () => {\n  return {\n    type: actionTypes.ADD_POKEMON_TO_LINEUP_START\n  }\n}\n\nexport const removePokemonFromLineup = (authUser: AUTHUSER, pokemon: POKEMON, pokemonLineup: POKEMON[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch(removePokemonFromLineupStart());\n    const newPokemonLineup = {\n      pokemonLineup: pokemonLineup.filter((p: POKEMON) => p.id !== pokemon.id)\n    };\n    try {\n      const success = await ApiManager.updateProfile(authUser, newPokemonLineup);\n      dispatchToReducer(dispatch, actionTypes.REMOVE_POKEMON_FROM_LINEUP_SUCCESS, pokemon);\n    } catch (error: any) {\n      console.log(error.response.data);\n      dispatchToReducer(dispatch, actionTypes.REMOVE_POKEMON_FROM_LINEUP_FAIL, error);\n    }\n  }\n}\n\nexport const removePokemonFromLineupStart = () => {\n  return {\n    type: actionTypes.REMOVE_POKEMON_FROM_LINEUP_START\n  }\n}"]},"metadata":{},"sourceType":"module"}