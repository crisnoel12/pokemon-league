{"ast":null,"code":"import * as actionTypes from './actionTypes'; //@ts-ignore\n\nimport Pokedex from 'pokedex-promise-v2';\nlet options = {\n  protocol: 'https'\n};\nlet P = new Pokedex(options); // init PokeApi wrapper with options\n\nexport const fetchPokemonStart = () => {\n  return {\n    type: actionTypes.FETCH_POKEMON_START\n  };\n};\nexport const fetchPokemonSuccess = pokemon => {\n  return {\n    type: actionTypes.FETCH_POKEMON_SUCCESS,\n    pokemon\n  };\n};\nexport const fetchPokemonFail = query => {\n  return {\n    type: actionTypes.FETCH_POKEMON_FAIL,\n    query\n  };\n};\nexport const fetchPokemon = query => {\n  return dispatch => {\n    dispatch(fetchPokemonStart());\n    P.getPokemonByName(query.toLowerCase()).then(response => dispatch(fetchPokemonSuccess(response))).catch(error => dispatch(fetchPokemonFail(query)));\n  };\n};\nexport const selectPokemon = pokemon => {\n  return {\n    type: actionTypes.SELECT_POKEMON,\n    pokemon\n  };\n};\nexport const deselectPokemon = () => {\n  return {\n    type: actionTypes.DESELECT_POKEMON\n  };\n};\nexport const updatePokemonQuery = e => {\n  return {\n    type: actionTypes.UPDATE_POKEMON_QUERY,\n    pokemonQuery: e.target.value\n  };\n};","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/store/actions/PokeAPI/actionCreators.ts"],"names":["actionTypes","Pokedex","options","protocol","P","fetchPokemonStart","type","FETCH_POKEMON_START","fetchPokemonSuccess","pokemon","FETCH_POKEMON_SUCCESS","fetchPokemonFail","query","FETCH_POKEMON_FAIL","fetchPokemon","dispatch","getPokemonByName","toLowerCase","then","response","catch","error","selectPokemon","SELECT_POKEMON","deselectPokemon","DESELECT_POKEMON","updatePokemonQuery","e","UPDATE_POKEMON_QUERY","pokemonQuery","target","value"],"mappings":"AAEA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,OAAO,GAAE;AACTC,EAAAA,QAAQ,EAAE;AADD,CAAb;AAIA,IAAIC,CAAC,GAAG,IAAIH,OAAJ,CAAYC,OAAZ,CAAR,C,CAA8B;;AAE9B,OAAO,MAAMG,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEN,WAAW,CAACO;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IAAsB;AACrD,SAAO;AACHH,IAAAA,IAAI,EAAEN,WAAW,CAACU,qBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,KAAD,IAAmB;AAC/C,SAAO;AACHN,IAAAA,IAAI,EAAEN,WAAW,CAACa,kBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAIF,KAAD,IAAmB;AAC3C,SAAQG,QAAD,IAAmB;AACtBA,IAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACAD,IAAAA,CAAC,CAACY,gBAAF,CAAmBJ,KAAK,CAACK,WAAN,EAAnB,EACKC,IADL,CACWC,QAAD,IAAuBJ,QAAQ,CAACP,mBAAmB,CAACW,QAAD,CAApB,CADzC,EAEKC,KAFL,CAEYC,KAAD,IAAgBN,QAAQ,CAACJ,gBAAgB,CAACC,KAAD,CAAjB,CAFnC;AAGH,GALD;AAMH,CAPM;AASP,OAAO,MAAMU,aAAa,GAAIb,OAAD,IAAsB;AAC/C,SAAO;AACHH,IAAAA,IAAI,EAAEN,WAAW,CAACuB,cADf;AAEHd,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMe,eAAe,GAAG,MAAM;AACjC,SAAO;AACHlB,IAAAA,IAAI,EAAEN,WAAW,CAACyB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAIC,CAAD,IAA4C;AAC1E,SAAO;AACHrB,IAAAA,IAAI,EAAEN,WAAW,CAAC4B,oBADf;AAEHC,IAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AAFpB,GAAP;AAKH,CANM","sourcesContent":["import React from 'react';\nimport { POKEMON } from '../../../types';\nimport * as actionTypes from './actionTypes';\n//@ts-ignore\nimport Pokedex from 'pokedex-promise-v2';\n\nlet options ={\n    protocol: 'https'\n}\n\nlet P = new Pokedex(options); // init PokeApi wrapper with options\n\nexport const fetchPokemonStart = () => {\n    return {\n        type: actionTypes.FETCH_POKEMON_START\n    }\n}\n\nexport const fetchPokemonSuccess = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.FETCH_POKEMON_SUCCESS,\n        pokemon\n    }\n}\n\nexport const fetchPokemonFail = (query: string) => {\n    return {\n        type: actionTypes.FETCH_POKEMON_FAIL,\n        query\n    }\n}\n\nexport const fetchPokemon = (query: string) => {\n    return (dispatch: any) => {\n        dispatch(fetchPokemonStart());\n        P.getPokemonByName(query.toLowerCase())\n            .then((response: POKEMON) => dispatch(fetchPokemonSuccess(response)))\n            .catch((error: any) => dispatch(fetchPokemonFail(query)));\n    }\n}\n\nexport const selectPokemon = (pokemon: POKEMON) => {\n    return {\n        type: actionTypes.SELECT_POKEMON,\n        pokemon\n    }\n}\n\nexport const deselectPokemon = () => {\n    return {\n        type: actionTypes.DESELECT_POKEMON\n    }\n}\n\nexport const updatePokemonQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    return {\n        type: actionTypes.UPDATE_POKEMON_QUERY,\n        pokemonQuery: e.target.value\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}