{"ast":null,"code":"import * as actionTypes from '../../actions/PokeAPI/actionTypes';\nconst initalState = {\n  fetchedPokemon: null,\n  pokemon404: false,\n  selectedPokemon: null,\n  isLoading: false,\n  pokemonQuery: ''\n};\n\nconst PokeAPIReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_POKEMON_START:\n      return { ...state,\n        isLoading: true,\n        selectedPokemon: null\n      };\n\n    case actionTypes.FETCH_POKEMON_SUCCESS:\n      const {\n        base_experience,\n        forms,\n        game_indices,\n        held_items,\n        is_default,\n        location_area_encounters,\n        order,\n        past_types,\n        ...rest\n      } = action.pokemon;\n      return { ...state,\n        fetchedPokemon: rest,\n        pokemon404: false,\n        isLoading: false\n      };\n\n    case actionTypes.FETCH_POKEMON_FAIL:\n      return { ...state,\n        fetchedPokemon: null,\n        pokemon404: true,\n        isLoading: false\n      };\n\n    case actionTypes.SELECT_POKEMON:\n      return { ...state,\n        selectedPokemon: action.pokemon\n      };\n\n    case actionTypes.DESELECT_POKEMON:\n      return { ...state,\n        selectedPokemon: null\n      };\n\n    case actionTypes.UPDATE_POKEMON_QUERY:\n      if (action.pokemonQuery === \"\") {\n        return { ...state,\n          pokemonQuery: action.pokemonQuery,\n          fetchedPokemon: null,\n          pokemon404: false\n        };\n      }\n\n      return { ...state,\n        pokemonQuery: action.pokemonQuery\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = PokeAPIReducer;\nexport { PokeAPIReducer };\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeAPIReducer\");","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/store/reducers/PokeAPI/reducer.ts"],"names":["actionTypes","initalState","fetchedPokemon","pokemon404","selectedPokemon","isLoading","pokemonQuery","PokeAPIReducer","state","action","type","FETCH_POKEMON_START","FETCH_POKEMON_SUCCESS","base_experience","forms","game_indices","held_items","is_default","location_area_encounters","order","past_types","rest","pokemon","FETCH_POKEMON_FAIL","SELECT_POKEMON","DESELECT_POKEMON","UPDATE_POKEMON_QUERY"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,mCAA7B;AAEA,MAAMC,WAAkC,GAAG;AACvCC,EAAAA,cAAc,EAAE,IADuB;AAEvCC,EAAAA,UAAU,EAAE,KAF2B;AAGvCC,EAAAA,eAAe,EAAE,IAHsB;AAIvCC,EAAAA,SAAS,EAAE,KAJ4B;AAKvCC,EAAAA,YAAY,EAAE;AALyB,CAA3C;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAA4B,GAAGP,WAAhC,EAA6CQ,MAA7C,KAAwE;AAC3F,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,WAAW,CAACW,mBAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,SAAS,EAAE,IAFR;AAGHD,QAAAA,eAAe,EAAE;AAHd,OAAP;;AAKJ,SAAKJ,WAAW,CAACY,qBAAjB;AACI,YAAM;AAAEC,QAAAA,eAAF;AAAmBC,QAAAA,KAAnB;AAA0BC,QAAAA,YAA1B;AAAwCC,QAAAA,UAAxC;AAAoDC,QAAAA,UAApD;AAAgEC,QAAAA,wBAAhE;AAA0FC,QAAAA,KAA1F;AAAiGC,QAAAA,UAAjG;AAA6G,WAAGC;AAAhH,UAAyHZ,MAAM,CAACa,OAAtI;AACA,aAAO,EACH,GAAGd,KADA;AAEHN,QAAAA,cAAc,EAAEmB,IAFb;AAGHlB,QAAAA,UAAU,EAAE,KAHT;AAIHE,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAKL,WAAW,CAACuB,kBAAjB;AACI,aAAO,EACH,GAAGf,KADA;AAEHN,QAAAA,cAAc,EAAE,IAFb;AAGHC,QAAAA,UAAU,EAAE,IAHT;AAIHE,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAKL,WAAW,CAACwB,cAAjB;AACI,aAAO,EACH,GAAGhB,KADA;AAEHJ,QAAAA,eAAe,EAAEK,MAAM,CAACa;AAFrB,OAAP;;AAIJ,SAAKtB,WAAW,CAACyB,gBAAjB;AACI,aAAO,EACH,GAAGjB,KADA;AAEHJ,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAIJ,SAAKJ,WAAW,CAAC0B,oBAAjB;AACI,UAAIjB,MAAM,CAACH,YAAP,KAAwB,EAA5B,EAAgC;AAC5B,eAAO,EACH,GAAGE,KADA;AAEHF,UAAAA,YAAY,EAAEG,MAAM,CAACH,YAFlB;AAGHJ,UAAAA,cAAc,EAAE,IAHb;AAIHC,UAAAA,UAAU,EAAE;AAJT,SAAP;AAMH;;AACD,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,YAAY,EAAEG,MAAM,CAACH;AAFlB,OAAP;;AAIJ;AACI,aAAOE,KAAP;AA9CR;AAgDH,CAjDD;;KAAMD,c;AAmDN,SAASA,cAAT","sourcesContent":["import { POKEMON_ACTION, POKEAPI_INITIAL_STATE} from '../../../types';\nimport * as actionTypes from '../../actions/PokeAPI/actionTypes';\n\nconst initalState: POKEAPI_INITIAL_STATE = {\n    fetchedPokemon: null,\n    pokemon404: false,\n    selectedPokemon: null,\n    isLoading: false,\n    pokemonQuery: ''\n}\n\nconst PokeAPIReducer = (state: POKEAPI_INITIAL_STATE = initalState, action: POKEMON_ACTION) => {\n    switch(action.type) {\n        case actionTypes.FETCH_POKEMON_START:\n            return {\n                ...state,\n                isLoading: true,\n                selectedPokemon: null\n            };\n        case actionTypes.FETCH_POKEMON_SUCCESS:\n            const { base_experience, forms, game_indices, held_items, is_default, location_area_encounters, order, past_types, ...rest } = action.pokemon\n            return {\n                ...state,\n                fetchedPokemon: rest,\n                pokemon404: false,\n                isLoading: false\n            };\n        case actionTypes.FETCH_POKEMON_FAIL:\n            return {\n                ...state,\n                fetchedPokemon: null,\n                pokemon404: true,\n                isLoading: false\n            };\n        case actionTypes.SELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: action.pokemon\n            };\n        case actionTypes.DESELECT_POKEMON:\n            return {\n                ...state,\n                selectedPokemon: null\n            };\n        case actionTypes.UPDATE_POKEMON_QUERY:\n            if (action.pokemonQuery === \"\") {\n                return {\n                    ...state,\n                    pokemonQuery: action.pokemonQuery,\n                    fetchedPokemon: null,\n                    pokemon404: false\n                }\n            }\n            return {\n                ...state,\n                pokemonQuery: action.pokemonQuery\n            }\n        default:\n            return state;\n    }\n}\n\nexport { PokeAPIReducer };"]},"metadata":{},"sourceType":"module"}