{"ast":null,"code":"import _slicedToArray from\"/Users/cris/Code/pokemon-league/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Button,ButtonGroup,Typography}from\"@material-ui/core\";import PokemonPortrait from\"../PokemonPortrait/PokemonPortrait\";import PokemonPortraitStyles from\"../PokemonPortrait/PokemonPortraitStyles\";import CloseButton from\"../UI/CloseButton/CloseButton\";import Loader from\"../UI/Loader/Loader\";import PokemonNotFound from\"../UI/PokemonNotFound/PokemonNotFound\";import PokemonSearchStyles from\"./PokemonSearchStyles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PokemonSearch=function PokemonSearch(props){var pokemonPortraitClasses=PokemonPortraitStyles();var pokemonSearchClasses=PokemonSearchStyles();var fetchedPokemon=props.fetchedPokemon,pokemonQuery=props.pokemonQuery,pokemon404=props.pokemon404,isLoading=props.isLoading,doSelectPokemon=props.doSelectPokemon,doAddPokemon=props.doAddPokemon,clearPokemonQuery=props.clearPokemonQuery;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),display=_useState2[0],setDisplay=_useState2[1];useEffect(function(){if(isLoading){setDisplay(/*#__PURE__*/_jsx(Loader,{}));}if(fetchedPokemon){setDisplay(/*#__PURE__*/_jsxs(PokemonPortrait,{children:[/*#__PURE__*/_jsx(\"img\",{src:fetchedPokemon.sprites.front_default,alt:fetchedPokemon.name}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:pokemonPortraitClasses.Pokemon_Name,children:fetchedPokemon.name}),/*#__PURE__*/_jsxs(ButtonGroup,{fullWidth:true,children:[/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",onClick:doSelectPokemon,children:\"Data\"}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"secondary\",onClick:doAddPokemon,children:\"Add to Lineup\"})]})]},\"PokemonSearchPortrait\"));}if(pokemon404){setDisplay(/*#__PURE__*/_jsx(PokemonNotFound,{pokemonQuery:pokemonQuery}));}},[isLoading,fetchedPokemon,pokemon404,pokemonQuery,pokemonPortraitClasses,doAddPokemon,doSelectPokemon]);var closePokemonSearch=function closePokemonSearch(){var e={target:{value:\"\"}};setDisplay(null);clearPokemonQuery(e);};return/*#__PURE__*/_jsx(\"div\",{className:pokemonSearchClasses.root,children:/*#__PURE__*/_jsxs(\"div\",{className:pokemonSearchClasses.container,children:[display&&!isLoading&&/*#__PURE__*/_jsx(CloseButton,{onClose:closePokemonSearch,disableContainer:true}),display]})});};export default PokemonSearch;","map":{"version":3,"sources":["/Users/cris/Code/pokemon-league/src/components/PokemonSearch/PokemonSearch.tsx"],"names":["React","useState","useEffect","Button","ButtonGroup","Typography","PokemonPortrait","PokemonPortraitStyles","CloseButton","Loader","PokemonNotFound","PokemonSearchStyles","PokemonSearch","props","pokemonPortraitClasses","pokemonSearchClasses","fetchedPokemon","pokemonQuery","pokemon404","isLoading","doSelectPokemon","doAddPokemon","clearPokemonQuery","display","setDisplay","sprites","front_default","name","Pokemon_Name","closePokemonSearch","e","target","value","root","container"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,CAAiBC,WAAjB,CAA8BC,UAA9B,KAAgD,mBAAhD,CAEA,MAAOC,CAAAA,eAAP,KAA4B,oCAA5B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0CAAlC,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,uCAA5B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,C,wFAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAkB,CACtC,GAAMC,CAAAA,sBAAsB,CAAGP,qBAAqB,EAApD,CACA,GAAMQ,CAAAA,oBAAoB,CAAGJ,mBAAmB,EAAhD,CACA,GACEK,CAAAA,cADF,CAQIH,KARJ,CACEG,cADF,CAEEC,YAFF,CAQIJ,KARJ,CAEEI,YAFF,CAGEC,UAHF,CAQIL,KARJ,CAGEK,UAHF,CAIEC,SAJF,CAQIN,KARJ,CAIEM,SAJF,CAKEC,eALF,CAQIP,KARJ,CAKEO,eALF,CAMEC,YANF,CAQIR,KARJ,CAMEQ,YANF,CAOEC,iBAPF,CAQIT,KARJ,CAOES,iBAPF,CASA,cAA8BrB,QAAQ,CAAM,IAAN,CAAtC,wCAAOsB,OAAP,eAAgBC,UAAhB,eAEAtB,SAAS,CAAC,UAAM,CACd,GAAIiB,SAAJ,CAAe,CACbK,UAAU,cAAC,KAAC,MAAD,IAAD,CAAV,CACD,CACD,GAAIR,cAAJ,CAAoB,CAClBQ,UAAU,cACR,MAAC,eAAD,yBACE,YACE,GAAG,CAAER,cAAc,CAACS,OAAf,CAAuBC,aAD9B,CAEE,GAAG,CAAEV,cAAc,CAACW,IAFtB,EADF,cAKE,KAAC,UAAD,EACE,OAAO,CAAE,IADX,CAEE,SAAS,CAAEb,sBAAsB,CAACc,YAFpC,UAIGZ,cAAc,CAACW,IAJlB,EALF,cAWE,MAAC,WAAD,EAAa,SAAS,KAAtB,wBACE,KAAC,MAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,WAFX,CAGE,KAAK,CAAE,SAHT,CAIE,OAAO,CAAEP,eAJX,kBADF,cASE,KAAC,MAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,WAFX,CAGE,KAAK,CAAE,WAHT,CAIE,OAAO,CAAEC,YAJX,2BATF,GAXF,GAAsB,uBAAtB,CADQ,CAAV,CAgCD,CACD,GAAIH,UAAJ,CAAgB,CACdM,UAAU,cAAC,KAAC,eAAD,EAAiB,YAAY,CAAEP,YAA/B,EAAD,CAAV,CACD,CACF,CAzCQ,CAyCN,CACDE,SADC,CAEDH,cAFC,CAGDE,UAHC,CAIDD,YAJC,CAKDH,sBALC,CAMDO,YANC,CAODD,eAPC,CAzCM,CAAT,CAmDA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAMC,CAAAA,CAAM,CAAG,CAAEC,MAAM,CAAE,CAAEC,KAAK,CAAE,EAAT,CAAV,CAAf,CACAR,UAAU,CAAC,IAAD,CAAV,CACAF,iBAAiB,CAACQ,CAAD,CAAjB,CACD,CAJD,CAMA,mBACE,YAAK,SAAS,CAAEf,oBAAoB,CAACkB,IAArC,uBACE,aAAK,SAAS,CAAElB,oBAAoB,CAACmB,SAArC,WACGX,OAAO,EAAI,CAACJ,SAAZ,eACC,KAAC,WAAD,EAAa,OAAO,CAAEU,kBAAtB,CAA0C,gBAAgB,KAA1D,EAFJ,CAIGN,OAJH,GADF,EADF,CAUD,CAjFD,CAmFA,cAAeX,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, ButtonGroup, Typography } from \"@material-ui/core\";\nimport { POKEAPI_INITIAL_STATE } from \"../../types\";\nimport PokemonPortrait from \"../PokemonPortrait/PokemonPortrait\";\nimport PokemonPortraitStyles from \"../PokemonPortrait/PokemonPortraitStyles\";\nimport CloseButton from \"../UI/CloseButton/CloseButton\";\nimport Loader from \"../UI/Loader/Loader\";\nimport PokemonNotFound from \"../UI/PokemonNotFound/PokemonNotFound\";\nimport PokemonSearchStyles from \"./PokemonSearchStyles\";\n\ninterface PROPS extends Partial<POKEAPI_INITIAL_STATE> {\n  doSelectPokemon: () => void;\n  doAddPokemon: () => void;\n  clearPokemonQuery: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst PokemonSearch = (props: PROPS) => {\n  const pokemonPortraitClasses = PokemonPortraitStyles();\n  const pokemonSearchClasses = PokemonSearchStyles();\n  const {\n    fetchedPokemon,\n    pokemonQuery,\n    pokemon404,\n    isLoading,\n    doSelectPokemon,\n    doAddPokemon,\n    clearPokemonQuery,\n  } = props;\n  const [display, setDisplay] = useState<any>(null);\n\n  useEffect(() => {\n    if (isLoading) {\n      setDisplay(<Loader />);\n    }\n    if (fetchedPokemon) {\n      setDisplay(\n        <PokemonPortrait key={\"PokemonSearchPortrait\"}>\n          <img\n            src={fetchedPokemon.sprites.front_default}\n            alt={fetchedPokemon.name}\n          />\n          <Typography\n            variant={\"h6\"}\n            className={pokemonPortraitClasses.Pokemon_Name}\n          >\n            {fetchedPokemon.name}\n          </Typography>\n          <ButtonGroup fullWidth>\n            <Button\n              fullWidth\n              variant={\"contained\"}\n              color={\"primary\"}\n              onClick={doSelectPokemon}\n            >\n              Data\n            </Button>\n            <Button\n              fullWidth\n              variant={\"contained\"}\n              color={\"secondary\"}\n              onClick={doAddPokemon}\n            >\n              Add to Lineup\n            </Button>\n          </ButtonGroup>\n        </PokemonPortrait>\n      );\n    }\n    if (pokemon404) {\n      setDisplay(<PokemonNotFound pokemonQuery={pokemonQuery} />);\n    }\n  }, [\n    isLoading,\n    fetchedPokemon,\n    pokemon404,\n    pokemonQuery,\n    pokemonPortraitClasses,\n    doAddPokemon,\n    doSelectPokemon,\n  ]);\n\n  const closePokemonSearch = () => {\n    const e: any = { target: { value: \"\" } };\n    setDisplay(null);\n    clearPokemonQuery(e);\n  };\n\n  return (\n    <div className={pokemonSearchClasses.root}>\n      <div className={pokemonSearchClasses.container}>\n        {display && !isLoading && (\n          <CloseButton onClose={closePokemonSearch} disableContainer />\n        )}\n        {display}\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonSearch;\n"]},"metadata":{},"sourceType":"module"}